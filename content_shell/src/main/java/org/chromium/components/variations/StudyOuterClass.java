// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: study.proto

package org.chromium.components.variations;

public final class StudyOuterClass {
  private StudyOuterClass() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public interface StudyOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:variations.Study)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     *
     * @return Whether the name field is set.
     */
    boolean hasName();

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     *
     * @return The name.
     */
    java.lang.String getName();

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     *
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString getNameBytes();

    /**
     *
     *
     * <pre>
     * DEPRECATED: Prefer end_date instead.
     * The expiry date of the study in Unix time format. (Seconds since midnight
     * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
     * A study that has expired will be disabled, and users will be assigned
     * groups based on the default_experiment_name. This will take precedence over
     * a corresponding hardcoded field trial in the client.
     * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
     * </pre>
     *
     * <code>optional int64 expiry_date = 3;</code>
     *
     * @return Whether the expiryDate field is set.
     */
    boolean hasExpiryDate();

    /**
     *
     *
     * <pre>
     * DEPRECATED: Prefer end_date instead.
     * The expiry date of the study in Unix time format. (Seconds since midnight
     * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
     * A study that has expired will be disabled, and users will be assigned
     * groups based on the default_experiment_name. This will take precedence over
     * a corresponding hardcoded field trial in the client.
     * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
     * </pre>
     *
     * <code>optional int64 expiry_date = 3;</code>
     *
     * @return The expiryDate.
     */
    long getExpiryDate();

    /**
     *
     *
     * <pre>
     * Consistency setting for this study. Optional - defaults to SESSION.
     * Ex: PERMANENT
     * </pre>
     *
     * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
     *
     * @return Whether the consistency field is set.
     */
    boolean hasConsistency();

    /**
     *
     *
     * <pre>
     * Consistency setting for this study. Optional - defaults to SESSION.
     * Ex: PERMANENT
     * </pre>
     *
     * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
     *
     * @return The consistency.
     */
    org.chromium.components.variations.StudyOuterClass.Study.Consistency getConsistency();

    /**
     *
     *
     * <pre>
     * Optionally specifies which layer the study is a part of, which will
     * ensure only one study per layer is enabled for a client. A study must
     * specify both the ID of the layer and the ID of the LayerMember within
     * that layer that the study should be associated with.
     * </pre>
     *
     * <code>optional .variations.LayerMemberReference layer = 16;</code>
     *
     * @return Whether the layer field is set.
     */
    boolean hasLayer();

    /**
     *
     *
     * <pre>
     * Optionally specifies which layer the study is a part of, which will
     * ensure only one study per layer is enabled for a client. A study must
     * specify both the ID of the layer and the ID of the LayerMember within
     * that layer that the study should be associated with.
     * </pre>
     *
     * <code>optional .variations.LayerMemberReference layer = 16;</code>
     *
     * @return The layer.
     */
    org.chromium.components.variations.LayerOuterClass.LayerMemberReference getLayer();

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     *
     * @return Whether the defaultExperimentName field is set.
     */
    boolean hasDefaultExperimentName();

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     *
     * @return The defaultExperimentName.
     */
    java.lang.String getDefaultExperimentName();

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     *
     * @return The bytes for defaultExperimentName.
     */
    com.google.protobuf.ByteString getDefaultExperimentNameBytes();

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Experiment>
        getExperimentList();

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    org.chromium.components.variations.StudyOuterClass.Study.Experiment getExperiment(int index);

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    int getExperimentCount();

    /**
     *
     *
     * <pre>
     * Filtering criteria for this study. A study that is filtered out for a given
     * client is equivalent to that study not being sent at all.
     * </pre>
     *
     * <code>optional .variations.Study.Filter filter = 10;</code>
     *
     * @return Whether the filter field is set.
     */
    boolean hasFilter();

    /**
     *
     *
     * <pre>
     * Filtering criteria for this study. A study that is filtered out for a given
     * client is equivalent to that study not being sent at all.
     * </pre>
     *
     * <code>optional .variations.Study.Filter filter = 10;</code>
     *
     * @return The filter.
     */
    org.chromium.components.variations.StudyOuterClass.Study.Filter getFilter();

    /**
     *
     *
     * <pre>
     * Randomization seed to be used when |consistency| is set to PERMANENT. If
     * not specified, randomization will be done using the trial name.
     * </pre>
     *
     * <code>optional uint32 randomization_seed = 11;</code>
     *
     * @return Whether the randomizationSeed field is set.
     */
    boolean hasRandomizationSeed();

    /**
     *
     *
     * <pre>
     * Randomization seed to be used when |consistency| is set to PERMANENT. If
     * not specified, randomization will be done using the trial name.
     * </pre>
     *
     * <code>optional uint32 randomization_seed = 11;</code>
     *
     * @return The randomizationSeed.
     */
    int getRandomizationSeed();

    /**
     *
     *
     * <pre>
     * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
     * </pre>
     *
     * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
     *
     * @return Whether the activationType field is set.
     */
    boolean hasActivationType();

    /**
     *
     *
     * <pre>
     * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
     * </pre>
     *
     * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
     *
     * @return The activationType.
     */
    org.chromium.components.variations.StudyOuterClass.Study.ActivationType getActivationType();
  }

  /**
   *
   *
   * <pre>
   * This defines the Protocol Buffer representation of a Chrome Variations study
   * as sent to clients of the Variations server.
   * Next tag: 13
   * </pre>
   *
   * Protobuf type {@code variations.Study}
   */
  public static final class Study
      extends com.google.protobuf.GeneratedMessageLite<Study, Study.Builder>
      implements
      // @@protoc_insertion_point(message_implements:variations.Study)
      StudyOrBuilder {
    private Study() {
      name_ = "";
      defaultExperimentName_ = "";
      experiment_ = emptyProtobufList();
    }

    /**
     *
     *
     * <pre>
     * Consistency setting for a study.
     * </pre>
     *
     * Protobuf enum {@code variations.Study.Consistency}
     */
    public enum Consistency implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * Can't change within a session.
       * </pre>
       *
       * <code>SESSION = 0;</code>
       */
      SESSION(0),
      /**
       *
       *
       * <pre>
       * Can't change for a given user.
       * </pre>
       *
       * <code>PERMANENT = 1;</code>
       */
      PERMANENT(1),
      ;

      /**
       *
       *
       * <pre>
       * Can't change within a session.
       * </pre>
       *
       * <code>SESSION = 0;</code>
       */
      public static final int SESSION_VALUE = 0;

      /**
       *
       *
       * <pre>
       * Can't change for a given user.
       * </pre>
       *
       * <code>PERMANENT = 1;</code>
       */
      public static final int PERMANENT_VALUE = 1;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Consistency valueOf(int value) {
        return forNumber(value);
      }

      public static Consistency forNumber(int value) {
        switch (value) {
          case 0:
            return SESSION;
          case 1:
            return PERMANENT;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Consistency> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<Consistency> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Consistency>() {
            @java.lang.Override
            public Consistency findValueByNumber(int number) {
              return Consistency.forNumber(number);
            }
          };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return ConsistencyVerifier.INSTANCE;
      }

      private static final class ConsistencyVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new ConsistencyVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return Consistency.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private Consistency(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.Consistency)
    }

    /**
     *
     *
     * <pre>
     * Specifies under which conditions a |google_web_experiment_id| or
     * |google_web_trigger_experiment_id| is visible to Google web properties.
     * </pre>
     *
     * Protobuf enum {@code variations.Study.GoogleWebVisibility}
     */
    public enum GoogleWebVisibility implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * Eligible requests to Google web properties include the experiment ID. See
       * AppendHeaderIfNeeded() in variations_http_headers.cc for eligibility
       * details.
       * </pre>
       *
       * <code>ANY = 0;</code>
       */
      ANY(0),
      /**
       *
       *
       * <pre>
       * Only eligible requests initiated from a first-party context include the
       * experiment ID.
       * The following requests are considered to be from a first-party context:
       * requests initiated by (i) the browser, (ii) a Chrome internal page,
       * (iii) a main frame with a Google-owned domain, and (iv) a subframe
       * whose associated main frame has a Google-owned domain. See
       * IsFirstPartyContext() in variations_http_headers.cc for more details.
       * </pre>
       *
       * <code>FIRST_PARTY = 1;</code>
       */
      FIRST_PARTY(1),
      ;

      /**
       *
       *
       * <pre>
       * Eligible requests to Google web properties include the experiment ID. See
       * AppendHeaderIfNeeded() in variations_http_headers.cc for eligibility
       * details.
       * </pre>
       *
       * <code>ANY = 0;</code>
       */
      public static final int ANY_VALUE = 0;

      /**
       *
       *
       * <pre>
       * Only eligible requests initiated from a first-party context include the
       * experiment ID.
       * The following requests are considered to be from a first-party context:
       * requests initiated by (i) the browser, (ii) a Chrome internal page,
       * (iii) a main frame with a Google-owned domain, and (iv) a subframe
       * whose associated main frame has a Google-owned domain. See
       * IsFirstPartyContext() in variations_http_headers.cc for more details.
       * </pre>
       *
       * <code>FIRST_PARTY = 1;</code>
       */
      public static final int FIRST_PARTY_VALUE = 1;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GoogleWebVisibility valueOf(int value) {
        return forNumber(value);
      }

      public static GoogleWebVisibility forNumber(int value) {
        switch (value) {
          case 0:
            return ANY;
          case 1:
            return FIRST_PARTY;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GoogleWebVisibility>
          internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<GoogleWebVisibility>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<GoogleWebVisibility>() {
                @java.lang.Override
                public GoogleWebVisibility findValueByNumber(int number) {
                  return GoogleWebVisibility.forNumber(number);
                }
              };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return GoogleWebVisibilityVerifier.INSTANCE;
      }

      private static final class GoogleWebVisibilityVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
            new GoogleWebVisibilityVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return GoogleWebVisibility.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private GoogleWebVisibility(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.GoogleWebVisibility)
    }

    /**
     *
     *
     * <pre>
     * Possible Chrome release channels.
     * See: http://dev.chromium.org/getting-involved/dev-channel
     * </pre>
     *
     * Protobuf enum {@code variations.Study.Channel}
     */
    public enum Channel implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * UNKNOWN value is defined here for the benefit of code using this enum
       * type, but is not actually meant to be encoded in the protobuf.
       * </pre>
       *
       * <code>UNKNOWN = -1;</code>
       */
      UNKNOWN(-1),
      /** <code>CANARY = 0;</code> */
      CANARY(0),
      /** <code>DEV = 1;</code> */
      DEV(1),
      /** <code>BETA = 2;</code> */
      BETA(2),
      /** <code>STABLE = 3;</code> */
      STABLE(3),
      ;

      /**
       *
       *
       * <pre>
       * UNKNOWN value is defined here for the benefit of code using this enum
       * type, but is not actually meant to be encoded in the protobuf.
       * </pre>
       *
       * <code>UNKNOWN = -1;</code>
       */
      public static final int UNKNOWN_VALUE = -1;

      /** <code>CANARY = 0;</code> */
      public static final int CANARY_VALUE = 0;

      /** <code>DEV = 1;</code> */
      public static final int DEV_VALUE = 1;

      /** <code>BETA = 2;</code> */
      public static final int BETA_VALUE = 2;

      /** <code>STABLE = 3;</code> */
      public static final int STABLE_VALUE = 3;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Channel valueOf(int value) {
        return forNumber(value);
      }

      public static Channel forNumber(int value) {
        switch (value) {
          case -1:
            return UNKNOWN;
          case 0:
            return CANARY;
          case 1:
            return DEV;
          case 2:
            return BETA;
          case 3:
            return STABLE;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Channel> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<Channel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Channel>() {
            @java.lang.Override
            public Channel findValueByNumber(int number) {
              return Channel.forNumber(number);
            }
          };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return ChannelVerifier.INSTANCE;
      }

      private static final class ChannelVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new ChannelVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return Channel.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private Channel(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.Channel)
    }

    /**
     *
     *
     * <pre>
     * Possible Chrome operating system platforms.
     * These names must match those in tools/variations/fieldtrial_to_struct.py.
     * </pre>
     *
     * Protobuf enum {@code variations.Study.Platform}
     */
    public enum Platform implements com.google.protobuf.Internal.EnumLite {
      /** <code>PLATFORM_WINDOWS = 0;</code> */
      PLATFORM_WINDOWS(0),
      /** <code>PLATFORM_MAC = 1;</code> */
      PLATFORM_MAC(1),
      /** <code>PLATFORM_LINUX = 2;</code> */
      PLATFORM_LINUX(2),
      /** <code>PLATFORM_CHROMEOS = 3;</code> */
      PLATFORM_CHROMEOS(3),
      /** <code>PLATFORM_ANDROID = 4;</code> */
      PLATFORM_ANDROID(4),
      /** <code>PLATFORM_IOS = 5;</code> */
      PLATFORM_IOS(5),
      /** <code>PLATFORM_ANDROID_WEBVIEW = 6;</code> */
      PLATFORM_ANDROID_WEBVIEW(6),
      /** <code>PLATFORM_FUCHSIA = 7;</code> */
      PLATFORM_FUCHSIA(7),
      /** <code>PLATFORM_ANDROID_WEBLAYER = 8;</code> */
      PLATFORM_ANDROID_WEBLAYER(8),
      /** <code>PLATFORM_CHROMEOS_LACROS = 9;</code> */
      PLATFORM_CHROMEOS_LACROS(9),
      ;

      /** <code>PLATFORM_WINDOWS = 0;</code> */
      public static final int PLATFORM_WINDOWS_VALUE = 0;

      /** <code>PLATFORM_MAC = 1;</code> */
      public static final int PLATFORM_MAC_VALUE = 1;

      /** <code>PLATFORM_LINUX = 2;</code> */
      public static final int PLATFORM_LINUX_VALUE = 2;

      /** <code>PLATFORM_CHROMEOS = 3;</code> */
      public static final int PLATFORM_CHROMEOS_VALUE = 3;

      /** <code>PLATFORM_ANDROID = 4;</code> */
      public static final int PLATFORM_ANDROID_VALUE = 4;

      /** <code>PLATFORM_IOS = 5;</code> */
      public static final int PLATFORM_IOS_VALUE = 5;

      /** <code>PLATFORM_ANDROID_WEBVIEW = 6;</code> */
      public static final int PLATFORM_ANDROID_WEBVIEW_VALUE = 6;

      /** <code>PLATFORM_FUCHSIA = 7;</code> */
      public static final int PLATFORM_FUCHSIA_VALUE = 7;

      /** <code>PLATFORM_ANDROID_WEBLAYER = 8;</code> */
      public static final int PLATFORM_ANDROID_WEBLAYER_VALUE = 8;

      /** <code>PLATFORM_CHROMEOS_LACROS = 9;</code> */
      public static final int PLATFORM_CHROMEOS_LACROS_VALUE = 9;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Platform valueOf(int value) {
        return forNumber(value);
      }

      public static Platform forNumber(int value) {
        switch (value) {
          case 0:
            return PLATFORM_WINDOWS;
          case 1:
            return PLATFORM_MAC;
          case 2:
            return PLATFORM_LINUX;
          case 3:
            return PLATFORM_CHROMEOS;
          case 4:
            return PLATFORM_ANDROID;
          case 5:
            return PLATFORM_IOS;
          case 6:
            return PLATFORM_ANDROID_WEBVIEW;
          case 7:
            return PLATFORM_FUCHSIA;
          case 8:
            return PLATFORM_ANDROID_WEBLAYER;
          case 9:
            return PLATFORM_CHROMEOS_LACROS;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Platform> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<Platform> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Platform>() {
            @java.lang.Override
            public Platform findValueByNumber(int number) {
              return Platform.forNumber(number);
            }
          };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return PlatformVerifier.INSTANCE;
      }

      private static final class PlatformVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new PlatformVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return Platform.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private Platform(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.Platform)
    }

    /**
     *
     *
     * <pre>
     * Possible form factors Chrome is running on.
     * </pre>
     *
     * Protobuf enum {@code variations.Study.FormFactor}
     */
    public enum FormFactor implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * Chrome Desktop on Windows, Mac, Linux, or Chrome OS.
       * </pre>
       *
       * <code>DESKTOP = 0;</code>
       */
      DESKTOP(0),
      /**
       *
       *
       * <pre>
       * Phone-based mobile Chrome, e.g. an Android phone or iPhone.
       * </pre>
       *
       * <code>PHONE = 1;</code>
       */
      PHONE(1),
      /**
       *
       *
       * <pre>
       * Tablet-based mobile Chrome, e.g. an Android tablet or iPad.
       * </pre>
       *
       * <code>TABLET = 2;</code>
       */
      TABLET(2),
      /**
       *
       *
       * <pre>
       * Chrome OS running in single-app Kiosk mode.
       * </pre>
       *
       * <code>KIOSK = 3;</code>
       */
      KIOSK(3),
      /**
       *
       *
       * <pre>
       * Chrome OS running on Meet Hardware devices e.g. Chromebox For Meetings.
       * </pre>
       *
       * <code>MEET_DEVICE = 4;</code>
       */
      MEET_DEVICE(4),
      /**
       *
       *
       * <pre>
       * Chrome running on Android TV.
       * </pre>
       *
       * <code>TV = 5;</code>
       */
      TV(5),
      /**
       *
       *
       * <pre>
       * Chrome running on Android Auto.
       * </pre>
       *
       * <code>AUTOMOTIVE = 6;</code>
       */
      AUTOMOTIVE(6),
      /**
       *
       *
       * <pre>
       * Chrome running on Android Foldable.
       * </pre>
       *
       * <code>FOLDABLE = 7;</code>
       */
      FOLDABLE(7),
      ;

      /**
       *
       *
       * <pre>
       * Chrome Desktop on Windows, Mac, Linux, or Chrome OS.
       * </pre>
       *
       * <code>DESKTOP = 0;</code>
       */
      public static final int DESKTOP_VALUE = 0;

      /**
       *
       *
       * <pre>
       * Phone-based mobile Chrome, e.g. an Android phone or iPhone.
       * </pre>
       *
       * <code>PHONE = 1;</code>
       */
      public static final int PHONE_VALUE = 1;

      /**
       *
       *
       * <pre>
       * Tablet-based mobile Chrome, e.g. an Android tablet or iPad.
       * </pre>
       *
       * <code>TABLET = 2;</code>
       */
      public static final int TABLET_VALUE = 2;

      /**
       *
       *
       * <pre>
       * Chrome OS running in single-app Kiosk mode.
       * </pre>
       *
       * <code>KIOSK = 3;</code>
       */
      public static final int KIOSK_VALUE = 3;

      /**
       *
       *
       * <pre>
       * Chrome OS running on Meet Hardware devices e.g. Chromebox For Meetings.
       * </pre>
       *
       * <code>MEET_DEVICE = 4;</code>
       */
      public static final int MEET_DEVICE_VALUE = 4;

      /**
       *
       *
       * <pre>
       * Chrome running on Android TV.
       * </pre>
       *
       * <code>TV = 5;</code>
       */
      public static final int TV_VALUE = 5;

      /**
       *
       *
       * <pre>
       * Chrome running on Android Auto.
       * </pre>
       *
       * <code>AUTOMOTIVE = 6;</code>
       */
      public static final int AUTOMOTIVE_VALUE = 6;

      /**
       *
       *
       * <pre>
       * Chrome running on Android Foldable.
       * </pre>
       *
       * <code>FOLDABLE = 7;</code>
       */
      public static final int FOLDABLE_VALUE = 7;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FormFactor valueOf(int value) {
        return forNumber(value);
      }

      public static FormFactor forNumber(int value) {
        switch (value) {
          case 0:
            return DESKTOP;
          case 1:
            return PHONE;
          case 2:
            return TABLET;
          case 3:
            return KIOSK;
          case 4:
            return MEET_DEVICE;
          case 5:
            return TV;
          case 6:
            return AUTOMOTIVE;
          case 7:
            return FOLDABLE;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FormFactor> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<FormFactor> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FormFactor>() {
            @java.lang.Override
            public FormFactor findValueByNumber(int number) {
              return FormFactor.forNumber(number);
            }
          };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return FormFactorVerifier.INSTANCE;
      }

      private static final class FormFactorVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new FormFactorVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return FormFactor.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private FormFactor(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.FormFactor)
    }

    /**
     *
     *
     * <pre>
     * Possible CPU architectures Chrome is running on. Only supported on M90+.
     * </pre>
     *
     * Protobuf enum {@code variations.Study.CpuArchitecture}
     */
    public enum CpuArchitecture implements com.google.protobuf.Internal.EnumLite {
      /** <code>X86_64 = 0;</code> */
      X86_64(0),
      /** <code>ARM64 = 1;</code> */
      ARM64(1),
      /** <code>X86_32 = 2;</code> */
      X86_32(2),
      /** <code>ARM32 = 3;</code> */
      ARM32(3),
      /**
       *
       *
       * <pre>
       * A Mac-only value, indicating an x86-64 binary running on an arm64 host
       * via "Rosetta 2" binary translation.
       * </pre>
       *
       * <code>TRANSLATED_X86_64 = 4;</code>
       */
      TRANSLATED_X86_64(4),
      ;

      /** <code>X86_64 = 0;</code> */
      public static final int X86_64_VALUE = 0;

      /** <code>ARM64 = 1;</code> */
      public static final int ARM64_VALUE = 1;

      /** <code>X86_32 = 2;</code> */
      public static final int X86_32_VALUE = 2;

      /** <code>ARM32 = 3;</code> */
      public static final int ARM32_VALUE = 3;

      /**
       *
       *
       * <pre>
       * A Mac-only value, indicating an x86-64 binary running on an arm64 host
       * via "Rosetta 2" binary translation.
       * </pre>
       *
       * <code>TRANSLATED_X86_64 = 4;</code>
       */
      public static final int TRANSLATED_X86_64_VALUE = 4;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CpuArchitecture valueOf(int value) {
        return forNumber(value);
      }

      public static CpuArchitecture forNumber(int value) {
        switch (value) {
          case 0:
            return X86_64;
          case 1:
            return ARM64;
          case 2:
            return X86_32;
          case 3:
            return ARM32;
          case 4:
            return TRANSLATED_X86_64;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CpuArchitecture>
          internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<CpuArchitecture>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<CpuArchitecture>() {
                @java.lang.Override
                public CpuArchitecture findValueByNumber(int number) {
                  return CpuArchitecture.forNumber(number);
                }
              };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return CpuArchitectureVerifier.INSTANCE;
      }

      private static final class CpuArchitectureVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
            new CpuArchitectureVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return CpuArchitecture.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private CpuArchitecture(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.CpuArchitecture)
    }

    /**
     *
     *
     * <pre>
     * Enum to pass as optional bool.
     * </pre>
     *
     * Protobuf enum {@code variations.Study.OptionalBool}
     */
    public enum OptionalBool implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * Neither True nor False. (For cases like missing / unset / default etc.)
       * </pre>
       *
       * <code>OPTIONAL_BOOL_MISSING = 0;</code>
       */
      OPTIONAL_BOOL_MISSING(0),
      /**
       *
       *
       * <pre>
       * Explicit True.
       * </pre>
       *
       * <code>OPTIONAL_BOOL_TRUE = 1;</code>
       */
      OPTIONAL_BOOL_TRUE(1),
      /**
       *
       *
       * <pre>
       * Explicit False.
       * </pre>
       *
       * <code>OPTIONAL_BOOL_FALSE = 2;</code>
       */
      OPTIONAL_BOOL_FALSE(2),
      ;

      /**
       *
       *
       * <pre>
       * Neither True nor False. (For cases like missing / unset / default etc.)
       * </pre>
       *
       * <code>OPTIONAL_BOOL_MISSING = 0;</code>
       */
      public static final int OPTIONAL_BOOL_MISSING_VALUE = 0;

      /**
       *
       *
       * <pre>
       * Explicit True.
       * </pre>
       *
       * <code>OPTIONAL_BOOL_TRUE = 1;</code>
       */
      public static final int OPTIONAL_BOOL_TRUE_VALUE = 1;

      /**
       *
       *
       * <pre>
       * Explicit False.
       * </pre>
       *
       * <code>OPTIONAL_BOOL_FALSE = 2;</code>
       */
      public static final int OPTIONAL_BOOL_FALSE_VALUE = 2;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalBool valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalBool forNumber(int value) {
        switch (value) {
          case 0:
            return OPTIONAL_BOOL_MISSING;
          case 1:
            return OPTIONAL_BOOL_TRUE;
          case 2:
            return OPTIONAL_BOOL_FALSE;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<OptionalBool> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<OptionalBool> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OptionalBool>() {
            @java.lang.Override
            public OptionalBool findValueByNumber(int number) {
              return OptionalBool.forNumber(number);
            }
          };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return OptionalBoolVerifier.INSTANCE;
      }

      private static final class OptionalBoolVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
            new OptionalBoolVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return OptionalBool.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private OptionalBool(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.OptionalBool)
    }

    /**
     *
     *
     * <pre>
     * Possible states of the severity filter.
     * </pre>
     *
     * Protobuf enum {@code variations.Study.PolicyRestriction}
     */
    public enum PolicyRestriction implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * No restriction configs apply to clients that do not have a
       * "ChromeVariations" policy set or if it is set to the variations enabled
       * value.
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       *
       *
       * <pre>
       * Critical studies apply to both clients that have all variations enabled
       * or if the "ChromeVariations" policy is set to only allow critical
       * variations.
       * </pre>
       *
       * <code>CRITICAL = 1;</code>
       */
      CRITICAL(1),
      /**
       *
       *
       * <pre>
       * Critical-only studies apply *only* to clients that have the
       * "ChromeVariations" policy set to only allow critical variations.
       * </pre>
       *
       * <code>CRITICAL_ONLY = 2;</code>
       */
      CRITICAL_ONLY(2),
      ;

      /**
       *
       *
       * <pre>
       * No restriction configs apply to clients that do not have a
       * "ChromeVariations" policy set or if it is set to the variations enabled
       * value.
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;

      /**
       *
       *
       * <pre>
       * Critical studies apply to both clients that have all variations enabled
       * or if the "ChromeVariations" policy is set to only allow critical
       * variations.
       * </pre>
       *
       * <code>CRITICAL = 1;</code>
       */
      public static final int CRITICAL_VALUE = 1;

      /**
       *
       *
       * <pre>
       * Critical-only studies apply *only* to clients that have the
       * "ChromeVariations" policy set to only allow critical variations.
       * </pre>
       *
       * <code>CRITICAL_ONLY = 2;</code>
       */
      public static final int CRITICAL_ONLY_VALUE = 2;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PolicyRestriction valueOf(int value) {
        return forNumber(value);
      }

      public static PolicyRestriction forNumber(int value) {
        switch (value) {
          case 0:
            return NONE;
          case 1:
            return CRITICAL;
          case 2:
            return CRITICAL_ONLY;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PolicyRestriction>
          internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<PolicyRestriction>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<PolicyRestriction>() {
                @java.lang.Override
                public PolicyRestriction findValueByNumber(int number) {
                  return PolicyRestriction.forNumber(number);
                }
              };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return PolicyRestrictionVerifier.INSTANCE;
      }

      private static final class PolicyRestrictionVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
            new PolicyRestrictionVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return PolicyRestriction.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private PolicyRestriction(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.PolicyRestriction)
    }

    /**
     *
     *
     * <pre>
     * Specifies whether the study starts as active initially, or whether it
     * requires the client to query its state before it is marked as active.
     * </pre>
     *
     * Protobuf enum {@code variations.Study.ActivationType}
     */
    public enum ActivationType implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * The study will be activated when its state is queried by the client.
       * This is recommended for most studies that include client code.
       * </pre>
       *
       * <code>ACTIVATE_ON_QUERY = 0;</code>
       */
      ACTIVATE_ON_QUERY(0),
      /**
       *
       *
       * <pre>
       * The study will be automatically activated when it is created. This
       * is recommended for studies that do not have any client logic.
       * </pre>
       *
       * <code>ACTIVATE_ON_STARTUP = 1;</code>
       */
      ACTIVATE_ON_STARTUP(1),
      ;

      /**
       *
       *
       * <pre>
       * The study will be activated when its state is queried by the client.
       * This is recommended for most studies that include client code.
       * </pre>
       *
       * <code>ACTIVATE_ON_QUERY = 0;</code>
       */
      public static final int ACTIVATE_ON_QUERY_VALUE = 0;

      /**
       *
       *
       * <pre>
       * The study will be automatically activated when it is created. This
       * is recommended for studies that do not have any client logic.
       * </pre>
       *
       * <code>ACTIVATE_ON_STARTUP = 1;</code>
       */
      public static final int ACTIVATE_ON_STARTUP_VALUE = 1;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ActivationType valueOf(int value) {
        return forNumber(value);
      }

      public static ActivationType forNumber(int value) {
        switch (value) {
          case 0:
            return ACTIVATE_ON_QUERY;
          case 1:
            return ACTIVATE_ON_STARTUP;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ActivationType> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<ActivationType>
          internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ActivationType>() {
                @java.lang.Override
                public ActivationType findValueByNumber(int number) {
                  return ActivationType.forNumber(number);
                }
              };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return ActivationTypeVerifier.INSTANCE;
      }

      private static final class ActivationTypeVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE =
            new ActivationTypeVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return ActivationType.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private ActivationType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Study.ActivationType)
    }

    public interface ExperimentOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:variations.Study.Experiment)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return Whether the name field is set.
       */
      boolean hasName();

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return The name.
       */
      java.lang.String getName();

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString getNameBytes();

      /**
       *
       *
       * <pre>
       * The cut of the total probability taken for this experiment (the x in
       * x / N, where N is the sum of all x’s).  Ex: "50"
       * </pre>
       *
       * <code>required uint32 probability_weight = 2;</code>
       *
       * @return Whether the probabilityWeight field is set.
       */
      boolean hasProbabilityWeight();

      /**
       *
       *
       * <pre>
       * The cut of the total probability taken for this experiment (the x in
       * x / N, where N is the sum of all x’s).  Ex: "50"
       * </pre>
       *
       * <code>required uint32 probability_weight = 2;</code>
       *
       * @return The probabilityWeight.
       */
      int getProbabilityWeight();

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Google web
       * properties.
       * </pre>
       *
       * <code>optional uint64 google_web_experiment_id = 3;</code>
       *
       * @return Whether the googleWebExperimentId field is set.
       */
      boolean hasGoogleWebExperimentId();

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Google web
       * properties.
       * </pre>
       *
       * <code>optional uint64 google_web_experiment_id = 3;</code>
       *
       * @return The googleWebExperimentId.
       */
      long getGoogleWebExperimentId();

      /**
       *
       *
       * <pre>
       * Optional id used to allow this experiment to trigger experimental
       * behavior on Google web properties.
       * </pre>
       *
       * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
       *
       * @return Whether the googleWebTriggerExperimentId field is set.
       */
      boolean hasGoogleWebTriggerExperimentId();

      /**
       *
       *
       * <pre>
       * Optional id used to allow this experiment to trigger experimental
       * behavior on Google web properties.
       * </pre>
       *
       * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
       *
       * @return The googleWebTriggerExperimentId.
       */
      long getGoogleWebTriggerExperimentId();

      /**
       *
       *
       * <pre>
       * Optional id that specifies under which conditions Google web and web
       * trigger experiment ids are visible to Google web properties.
       * </pre>
       *
       * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
       *
       * @return Whether the googleWebVisibility field is set.
       */
      boolean hasGoogleWebVisibility();

      /**
       *
       *
       * <pre>
       * Optional id that specifies under which conditions Google web and web
       * trigger experiment ids are visible to Google web properties.
       * </pre>
       *
       * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
       *
       * @return The googleWebVisibility.
       */
      org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility
          getGoogleWebVisibility();

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Chrome Sync.
       * </pre>
       *
       * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
       *
       * @return Whether the chromeSyncExperimentId field is set.
       */
      boolean hasChromeSyncExperimentId();

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Chrome Sync.
       * </pre>
       *
       * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
       *
       * @return The chromeSyncExperimentId.
       */
      long getChromeSyncExperimentId();

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment when activating
       * integrations with the Android Google App.
       * IMPORTANT: This field is only approved for integrations with the Android
       * Google App and must receive a privacy review before extending to other
       * apps.
       * </pre>
       *
       * <code>optional uint64 google_app_experiment_id = 15;</code>
       *
       * @return Whether the googleAppExperimentId field is set.
       */
      boolean hasGoogleAppExperimentId();

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment when activating
       * integrations with the Android Google App.
       * IMPORTANT: This field is only approved for integrations with the Android
       * Google App and must receive a privacy review before extending to other
       * apps.
       * </pre>
       *
       * <code>optional uint64 google_app_experiment_id = 15;</code>
       *
       * @return The googleAppExperimentId.
       */
      long getGoogleAppExperimentId();

      /**
       * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
       * </code>
       *
       * @return Whether the featureAssociation field is set.
       */
      boolean hasFeatureAssociation();

      /**
       * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
       * </code>
       *
       * @return The featureAssociation.
       */
      org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
          getFeatureAssociation();

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       *
       * @return Whether the forcingFlag field is set.
       */
      boolean hasForcingFlag();

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       *
       * @return The forcingFlag.
       */
      java.lang.String getForcingFlag();

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       *
       * @return The bytes for forcingFlag.
       */
      com.google.protobuf.ByteString getForcingFlagBytes();

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param>
          getParamList();

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param getParam(int index);

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      int getParamCount();

      /**
       * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
       *
       * @return Whether the type field is set.
       */
      boolean hasType();

      /**
       * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
       *
       * @return The type.
       */
      org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type getType();

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      java.util.List<
              org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString>
          getOverrideUiStringList();

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
          getOverrideUiString(int index);

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      int getOverrideUiStringCount();
    }

    /**
     *
     *
     * <pre>
     * An experiment within the study.
     * Next tag: 17
     * </pre>
     *
     * Protobuf type {@code variations.Study.Experiment}
     */
    public static final class Experiment
        extends com.google.protobuf.GeneratedMessageLite<Experiment, Experiment.Builder>
        implements
        // @@protoc_insertion_point(message_implements:variations.Study.Experiment)
        ExperimentOrBuilder {
      private Experiment() {
        name_ = "";
        forcingFlag_ = "";
        param_ = emptyProtobufList();
        overrideUiString_ = emptyProtobufList();
      }

      /** Protobuf enum {@code variations.Study.Experiment.Type} */
      public enum Type implements com.google.protobuf.Internal.EnumLite {
        /**
         *
         *
         * <pre>
         * Regular experiment group. This is the default value and can be omitted.
         * </pre>
         *
         * <code>NORMAL = 0;</code>
         */
        NORMAL(0),
        /**
         *
         *
         * <pre>
         * Changes to this experiment group are ignored for the purposes of
         * kill-switch triggering. Included to allow the flexibility to not
         * trigger this logic for specific cases (e.g. a group rename without
         * any functionality changes).
         * </pre>
         *
         * <code>IGNORE_CHANGE = 1;</code>
         */
        IGNORE_CHANGE(1),
        /**
         *
         *
         * <pre>
         * This is a kill-switch group that should be killed at "best effort"
         * priority, e.g. with a hot dog menu badge. The experiment must have a
         * probability_weight of 0.
         * </pre>
         *
         * <code>KILL_BEST_EFFORT = 2;</code>
         */
        KILL_BEST_EFFORT(2),
        /**
         *
         *
         * <pre>
         * This is a kill-switch group that should be killed with "critical"
         * priority. Depending on platform this may result in showing a
         * non-dismissible restart prompt with a timer. This should only be used
         * in very serious emergency circumstances. The experiment must have a
         * probability_weight of 0.
         * </pre>
         *
         * <code>KILL_CRITICAL = 3;</code>
         */
        KILL_CRITICAL(3),
        ;

        /**
         *
         *
         * <pre>
         * Regular experiment group. This is the default value and can be omitted.
         * </pre>
         *
         * <code>NORMAL = 0;</code>
         */
        public static final int NORMAL_VALUE = 0;

        /**
         *
         *
         * <pre>
         * Changes to this experiment group are ignored for the purposes of
         * kill-switch triggering. Included to allow the flexibility to not
         * trigger this logic for specific cases (e.g. a group rename without
         * any functionality changes).
         * </pre>
         *
         * <code>IGNORE_CHANGE = 1;</code>
         */
        public static final int IGNORE_CHANGE_VALUE = 1;

        /**
         *
         *
         * <pre>
         * This is a kill-switch group that should be killed at "best effort"
         * priority, e.g. with a hot dog menu badge. The experiment must have a
         * probability_weight of 0.
         * </pre>
         *
         * <code>KILL_BEST_EFFORT = 2;</code>
         */
        public static final int KILL_BEST_EFFORT_VALUE = 2;

        /**
         *
         *
         * <pre>
         * This is a kill-switch group that should be killed with "critical"
         * priority. Depending on platform this may result in showing a
         * non-dismissible restart prompt with a timer. This should only be used
         * in very serious emergency circumstances. The experiment must have a
         * probability_weight of 0.
         * </pre>
         *
         * <code>KILL_CRITICAL = 3;</code>
         */
        public static final int KILL_CRITICAL_VALUE = 3;

        @java.lang.Override
        public final int getNumber() {
          return value;
        }

        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Type valueOf(int value) {
          return forNumber(value);
        }

        public static Type forNumber(int value) {
          switch (value) {
            case 0:
              return NORMAL;
            case 1:
              return IGNORE_CHANGE;
            case 2:
              return KILL_BEST_EFFORT;
            case 3:
              return KILL_CRITICAL;
            default:
              return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Type> internalGetValueMap() {
          return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              @java.lang.Override
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

        public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
          return TypeVerifier.INSTANCE;
        }

        private static final class TypeVerifier
            implements com.google.protobuf.Internal.EnumVerifier {
          static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new TypeVerifier();

          @java.lang.Override
          public boolean isInRange(int number) {
            return Type.forNumber(number) != null;
          }
        }
        ;

        private final int value;

        private Type(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:variations.Study.Experiment.Type)
      }

      public interface ParamOrBuilder
          extends
          // @@protoc_insertion_point(interface_extends:variations.Study.Experiment.Param)
          com.google.protobuf.MessageLiteOrBuilder {

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         *
         * @return Whether the name field is set.
         */
        boolean hasName();

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         *
         * @return The name.
         */
        java.lang.String getName();

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         *
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString getNameBytes();

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return Whether the value field is set.
         */
        boolean hasValue();

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return The value.
         */
        java.lang.String getValue();

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return The bytes for value.
         */
        com.google.protobuf.ByteString getValueBytes();
      }

      /**
       *
       *
       * <pre>
       * A named parameter value for this experiment.
       * Next tag: 3
       * </pre>
       *
       * Protobuf type {@code variations.Study.Experiment.Param}
       */
      public static final class Param
          extends com.google.protobuf.GeneratedMessageLite<Param, Param.Builder>
          implements
          // @@protoc_insertion_point(message_implements:variations.Study.Experiment.Param)
          ParamOrBuilder {
        private Param() {
          name_ = "";
          value_ = "";
        }

        private int bitField0_;
        public static final int NAME_FIELD_NUMBER = 1;
        private java.lang.String name_;

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         *
         * @return Whether the name field is set.
         */
        @java.lang.Override
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         *
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          return name_;
        }

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         *
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getNameBytes() {
          return com.google.protobuf.ByteString.copyFromUtf8(name_);
        }

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         *
         * @param value The name to set.
         */
        private void setName(java.lang.String value) {
          value.getClass();
          bitField0_ |= 0x00000001;
          name_ = value;
        }

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        private void clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
        }

        /**
         *
         *
         * <pre>
         * The name of the parameter.
         * </pre>
         *
         * <code>optional string name = 1;</code>
         *
         * @param value The bytes for name to set.
         */
        private void setNameBytes(com.google.protobuf.ByteString value) {
          name_ = value.toStringUtf8();
          bitField0_ |= 0x00000001;
        }

        public static final int VALUE_FIELD_NUMBER = 2;
        private java.lang.String value_;

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return The value.
         */
        @java.lang.Override
        public java.lang.String getValue() {
          return value_;
        }

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return The bytes for value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getValueBytes() {
          return com.google.protobuf.ByteString.copyFromUtf8(value_);
        }

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @param value The value to set.
         */
        private void setValue(java.lang.String value) {
          value.getClass();
          bitField0_ |= 0x00000002;
          value_ = value;
        }

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         */
        private void clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
        }

        /**
         *
         *
         * <pre>
         * The value of the parameter.
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @param value The bytes for value to set.
         */
        private void setValueBytes(com.google.protobuf.ByteString value) {
          value_ = value.toStringUtf8();
          bitField0_ |= 0x00000002;
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(java.io.InputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
          return (Builder) DEFAULT_INSTANCE.createBuilder();
        }

        public static Builder newBuilder(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param prototype) {
          return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
        }

        /**
         *
         *
         * <pre>
         * A named parameter value for this experiment.
         * Next tag: 3
         * </pre>
         *
         * Protobuf type {@code variations.Study.Experiment.Param}
         */
        public static final class Builder
            extends com.google.protobuf.GeneratedMessageLite.Builder<
                org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param, Builder>
            implements
            // @@protoc_insertion_point(builder_implements:variations.Study.Experiment.Param)
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.ParamOrBuilder {
          // Construct using
          private Builder() {
            super(DEFAULT_INSTANCE);
          }

          /**
           *
           *
           * <pre>
           * The name of the parameter.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           *
           * @return Whether the name field is set.
           */
          @java.lang.Override
          public boolean hasName() {
            return instance.hasName();
          }

          /**
           *
           *
           * <pre>
           * The name of the parameter.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           *
           * @return The name.
           */
          @java.lang.Override
          public java.lang.String getName() {
            return instance.getName();
          }

          /**
           *
           *
           * <pre>
           * The name of the parameter.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           *
           * @return The bytes for name.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getNameBytes() {
            return instance.getNameBytes();
          }

          /**
           *
           *
           * <pre>
           * The name of the parameter.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           *
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(java.lang.String value) {
            copyOnWrite();
            instance.setName(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * The name of the parameter.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearName() {
            copyOnWrite();
            instance.clearName();
            return this;
          }

          /**
           *
           *
           * <pre>
           * The name of the parameter.
           * </pre>
           *
           * <code>optional string name = 1;</code>
           *
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setNameBytes(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * The value of the parameter.
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @return Whether the value field is set.
           */
          @java.lang.Override
          public boolean hasValue() {
            return instance.hasValue();
          }

          /**
           *
           *
           * <pre>
           * The value of the parameter.
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @return The value.
           */
          @java.lang.Override
          public java.lang.String getValue() {
            return instance.getValue();
          }

          /**
           *
           *
           * <pre>
           * The value of the parameter.
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @return The bytes for value.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getValueBytes() {
            return instance.getValueBytes();
          }

          /**
           *
           *
           * <pre>
           * The value of the parameter.
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @param value The value to set.
           * @return This builder for chaining.
           */
          public Builder setValue(java.lang.String value) {
            copyOnWrite();
            instance.setValue(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * The value of the parameter.
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearValue() {
            copyOnWrite();
            instance.clearValue();
            return this;
          }

          /**
           *
           *
           * <pre>
           * The value of the parameter.
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @param value The bytes for value to set.
           * @return This builder for chaining.
           */
          public Builder setValueBytes(com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setValueBytes(value);
            return this;
          }

          // @@protoc_insertion_point(builder_scope:variations.Study.Experiment.Param)
        }

        @java.lang.Override
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(
            com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
            java.lang.Object arg0,
            java.lang.Object arg1) {
          switch (method) {
            case NEW_MUTABLE_INSTANCE:
              {
                return new org.chromium.components.variations.StudyOuterClass.Study.Experiment
                    .Param();
              }
            case NEW_BUILDER:
              {
                return new Builder();
              }
            case BUILD_MESSAGE_INFO:
              {
                java.lang.Object[] objects =
                    new java.lang.Object[] {
                      "bitField0_", "name_", "value_",
                    };
                java.lang.String info =
                    "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1008\u0000\u0002"
                        + "\u1008\u0001";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
              }
              // fall through
            case GET_DEFAULT_INSTANCE:
              {
                return DEFAULT_INSTANCE;
              }
            case GET_PARSER:
              {
                com.google.protobuf.Parser<
                        org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param>
                    parser = PARSER;
                if (parser == null) {
                  synchronized (
                      org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
                          .class) {
                    parser = PARSER;
                    if (parser == null) {
                      parser =
                          new DefaultInstanceBasedParser<
                              org.chromium.components.variations.StudyOuterClass.Study.Experiment
                                  .Param>(DEFAULT_INSTANCE);
                      PARSER = parser;
                    }
                  }
                }
                return parser;
              }
            case GET_MEMOIZED_IS_INITIALIZED:
              {
                return (byte) 1;
              }
            case SET_MEMOIZED_IS_INITIALIZED:
              {
                return null;
              }
          }
          throw new UnsupportedOperationException();
        }

        // @@protoc_insertion_point(class_scope:variations.Study.Experiment.Param)
        private static final org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .Param
            DEFAULT_INSTANCE;

        static {
          Param defaultInstance = new Param();
          // New instances are implicitly immutable so no need to make
          // immutable.
          DEFAULT_INSTANCE = defaultInstance;
          com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
              Param.class, defaultInstance);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param
            getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<Param> PARSER;

        public static com.google.protobuf.Parser<Param> parser() {
          return DEFAULT_INSTANCE.getParserForType();
        }
      }

      public interface FeatureAssociationOrBuilder
          extends
          // @@protoc_insertion_point(interface_extends:variations.Study.Experiment.FeatureAssociation)
          com.google.protobuf.MessageLiteOrBuilder {

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @return A list containing the enableFeature.
         */
        java.util.List<java.lang.String> getEnableFeatureList();

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @return The count of enableFeature.
         */
        int getEnableFeatureCount();

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The enableFeature at the given index.
         */
        java.lang.String getEnableFeature(int index);

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The enableFeature at the given index.
         */
        com.google.protobuf.ByteString getEnableFeatureBytes(int index);

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @return A list containing the disableFeature.
         */
        java.util.List<java.lang.String> getDisableFeatureList();

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @return The count of disableFeature.
         */
        int getDisableFeatureCount();

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The disableFeature at the given index.
         */
        java.lang.String getDisableFeature(int index);

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The disableFeature at the given index.
         */
        com.google.protobuf.ByteString getDisableFeatureBytes(int index);

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         *
         * @return Whether the forcingFeatureOn field is set.
         */
        boolean hasForcingFeatureOn();

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         *
         * @return The forcingFeatureOn.
         */
        java.lang.String getForcingFeatureOn();

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         *
         * @return The bytes for forcingFeatureOn.
         */
        com.google.protobuf.ByteString getForcingFeatureOnBytes();

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         *
         * @return Whether the forcingFeatureOff field is set.
         */
        boolean hasForcingFeatureOff();

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         *
         * @return The forcingFeatureOff.
         */
        java.lang.String getForcingFeatureOff();

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         *
         * @return The bytes for forcingFeatureOff.
         */
        com.google.protobuf.ByteString getForcingFeatureOffBytes();
      }

      /**
       *
       *
       * <pre>
       * Specifies the feature association parameters for this experiment group.
       * Next tag: 5
       * </pre>
       *
       * Protobuf type {@code variations.Study.Experiment.FeatureAssociation}
       */
      public static final class FeatureAssociation
          extends com.google.protobuf.GeneratedMessageLite<
              FeatureAssociation, FeatureAssociation.Builder>
          implements
          // @@protoc_insertion_point(message_implements:variations.Study.Experiment.FeatureAssociation)
          FeatureAssociationOrBuilder {
        private FeatureAssociation() {
          enableFeature_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
          disableFeature_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
          forcingFeatureOn_ = "";
          forcingFeatureOff_ = "";
        }

        private int bitField0_;
        public static final int ENABLE_FEATURE_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<java.lang.String> enableFeature_;

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @return A list containing the enableFeature.
         */
        @java.lang.Override
        public java.util.List<java.lang.String> getEnableFeatureList() {
          return enableFeature_;
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @return The count of enableFeature.
         */
        @java.lang.Override
        public int getEnableFeatureCount() {
          return enableFeature_.size();
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The enableFeature at the given index.
         */
        @java.lang.Override
        public java.lang.String getEnableFeature(int index) {
          return enableFeature_.get(index);
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the enableFeature at the given index.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getEnableFeatureBytes(int index) {
          return com.google.protobuf.ByteString.copyFromUtf8(enableFeature_.get(index));
        }

        private void ensureEnableFeatureIsMutable() {
          com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = enableFeature_;
          if (!tmp.isModifiable()) {
            enableFeature_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
          }
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @param index The index to set the value at.
         * @param value The enableFeature to set.
         */
        private void setEnableFeature(int index, java.lang.String value) {
          value.getClass();
          ensureEnableFeatureIsMutable();
          enableFeature_.set(index, value);
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @param value The enableFeature to add.
         */
        private void addEnableFeature(java.lang.String value) {
          value.getClass();
          ensureEnableFeatureIsMutable();
          enableFeature_.add(value);
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @param values The enableFeature to add.
         */
        private void addAllEnableFeature(java.lang.Iterable<java.lang.String> values) {
          ensureEnableFeatureIsMutable();
          com.google.protobuf.AbstractMessageLite.addAll(values, enableFeature_);
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         */
        private void clearEnableFeature() {
          enableFeature_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to enable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |disable_feature| list.
         * </pre>
         *
         * <code>repeated string enable_feature = 1;</code>
         *
         * @param value The bytes of the enableFeature to add.
         */
        private void addEnableFeatureBytes(com.google.protobuf.ByteString value) {
          ensureEnableFeatureIsMutable();
          enableFeature_.add(value.toStringUtf8());
        }

        public static final int DISABLE_FEATURE_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.ProtobufList<java.lang.String> disableFeature_;

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @return A list containing the disableFeature.
         */
        @java.lang.Override
        public java.util.List<java.lang.String> getDisableFeatureList() {
          return disableFeature_;
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @return The count of disableFeature.
         */
        @java.lang.Override
        public int getDisableFeatureCount() {
          return disableFeature_.size();
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The disableFeature at the given index.
         */
        @java.lang.Override
        public java.lang.String getDisableFeature(int index) {
          return disableFeature_.get(index);
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the disableFeature at the given index.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getDisableFeatureBytes(int index) {
          return com.google.protobuf.ByteString.copyFromUtf8(disableFeature_.get(index));
        }

        private void ensureDisableFeatureIsMutable() {
          com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = disableFeature_;
          if (!tmp.isModifiable()) {
            disableFeature_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
          }
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @param index The index to set the value at.
         * @param value The disableFeature to set.
         */
        private void setDisableFeature(int index, java.lang.String value) {
          value.getClass();
          ensureDisableFeatureIsMutable();
          disableFeature_.set(index, value);
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @param value The disableFeature to add.
         */
        private void addDisableFeature(java.lang.String value) {
          value.getClass();
          ensureDisableFeatureIsMutable();
          disableFeature_.add(value);
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @param values The disableFeature to add.
         */
        private void addAllDisableFeature(java.lang.Iterable<java.lang.String> values) {
          ensureDisableFeatureIsMutable();
          com.google.protobuf.AbstractMessageLite.addAll(values, disableFeature_);
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         */
        private void clearDisableFeature() {
          disableFeature_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
        }

        /**
         *
         *
         * <pre>
         * Optional list of features to disable when this experiment is selected.
         * Command-line overrides take precedence over this setting. No feature
         * listed here should exist in the |enable_feature| list.
         * </pre>
         *
         * <code>repeated string disable_feature = 2;</code>
         *
         * @param value The bytes of the disableFeature to add.
         */
        private void addDisableFeatureBytes(com.google.protobuf.ByteString value) {
          ensureDisableFeatureIsMutable();
          disableFeature_.add(value.toStringUtf8());
        }

        public static final int FORCING_FEATURE_ON_FIELD_NUMBER = 3;
        private java.lang.String forcingFeatureOn_;

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         *
         * @return Whether the forcingFeatureOn field is set.
         */
        @java.lang.Override
        public boolean hasForcingFeatureOn() {
          return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         *
         * @return The forcingFeatureOn.
         */
        @java.lang.Override
        public java.lang.String getForcingFeatureOn() {
          return forcingFeatureOn_;
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         *
         * @return The bytes for forcingFeatureOn.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getForcingFeatureOnBytes() {
          return com.google.protobuf.ByteString.copyFromUtf8(forcingFeatureOn_);
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         *
         * @param value The forcingFeatureOn to set.
         */
        private void setForcingFeatureOn(java.lang.String value) {
          value.getClass();
          bitField0_ |= 0x00000001;
          forcingFeatureOn_ = value;
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         */
        private void clearForcingFeatureOn() {
          bitField0_ = (bitField0_ & ~0x00000001);
          forcingFeatureOn_ = getDefaultInstance().getForcingFeatureOn();
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is enabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_on = 3;</code>
         *
         * @param value The bytes for forcingFeatureOn to set.
         */
        private void setForcingFeatureOnBytes(com.google.protobuf.ByteString value) {
          forcingFeatureOn_ = value.toStringUtf8();
          bitField0_ |= 0x00000001;
        }

        public static final int FORCING_FEATURE_OFF_FIELD_NUMBER = 4;
        private java.lang.String forcingFeatureOff_;

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         *
         * @return Whether the forcingFeatureOff field is set.
         */
        @java.lang.Override
        public boolean hasForcingFeatureOff() {
          return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         *
         * @return The forcingFeatureOff.
         */
        @java.lang.Override
        public java.lang.String getForcingFeatureOff() {
          return forcingFeatureOff_;
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         *
         * @return The bytes for forcingFeatureOff.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getForcingFeatureOffBytes() {
          return com.google.protobuf.ByteString.copyFromUtf8(forcingFeatureOff_);
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         *
         * @param value The forcingFeatureOff to set.
         */
        private void setForcingFeatureOff(java.lang.String value) {
          value.getClass();
          bitField0_ |= 0x00000002;
          forcingFeatureOff_ = value;
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         */
        private void clearForcingFeatureOff() {
          bitField0_ = (bitField0_ & ~0x00000002);
          forcingFeatureOff_ = getDefaultInstance().getForcingFeatureOff();
        }

        /**
         *
         *
         * <pre>
         * Similar to |forcing_flag|, this is an optional name of a feature which
         * will cause this experiment to be activated, if that feature is disabled
         * from the command-line. Experiment with this set are not eligible for
         * selection via a random dice roll.
         * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
         * a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_feature_off = 4;</code>
         *
         * @param value The bytes for forcingFeatureOff to set.
         */
        private void setForcingFeatureOffBytes(com.google.protobuf.ByteString value) {
          forcingFeatureOff_ = value.toStringUtf8();
          bitField0_ |= 0x00000002;
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(java.io.InputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
          return (Builder) DEFAULT_INSTANCE.createBuilder();
        }

        public static Builder newBuilder(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
                prototype) {
          return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
        }

        /**
         *
         *
         * <pre>
         * Specifies the feature association parameters for this experiment group.
         * Next tag: 5
         * </pre>
         *
         * Protobuf type {@code variations.Study.Experiment.FeatureAssociation}
         */
        public static final class Builder
            extends com.google.protobuf.GeneratedMessageLite.Builder<
                org.chromium.components.variations.StudyOuterClass.Study.Experiment
                    .FeatureAssociation,
                Builder>
            implements
            // @@protoc_insertion_point(builder_implements:variations.Study.Experiment.FeatureAssociation)
            org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociationOrBuilder {
          // Construct using
          private Builder() {
            super(DEFAULT_INSTANCE);
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @return A list containing the enableFeature.
           */
          @java.lang.Override
          public java.util.List<java.lang.String> getEnableFeatureList() {
            return java.util.Collections.unmodifiableList(instance.getEnableFeatureList());
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @return The count of enableFeature.
           */
          @java.lang.Override
          public int getEnableFeatureCount() {
            return instance.getEnableFeatureCount();
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @param index The index of the element to return.
           * @return The enableFeature at the given index.
           */
          @java.lang.Override
          public java.lang.String getEnableFeature(int index) {
            return instance.getEnableFeature(index);
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @param index The index of the value to return.
           * @return The bytes of the enableFeature at the given index.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getEnableFeatureBytes(int index) {
            return instance.getEnableFeatureBytes(index);
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @param index The index to set the value at.
           * @param value The enableFeature to set.
           * @return This builder for chaining.
           */
          public Builder setEnableFeature(int index, java.lang.String value) {
            copyOnWrite();
            instance.setEnableFeature(index, value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @param value The enableFeature to add.
           * @return This builder for chaining.
           */
          public Builder addEnableFeature(java.lang.String value) {
            copyOnWrite();
            instance.addEnableFeature(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @param values The enableFeature to add.
           * @return This builder for chaining.
           */
          public Builder addAllEnableFeature(java.lang.Iterable<java.lang.String> values) {
            copyOnWrite();
            instance.addAllEnableFeature(values);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearEnableFeature() {
            copyOnWrite();
            instance.clearEnableFeature();
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to enable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |disable_feature| list.
           * </pre>
           *
           * <code>repeated string enable_feature = 1;</code>
           *
           * @param value The bytes of the enableFeature to add.
           * @return This builder for chaining.
           */
          public Builder addEnableFeatureBytes(com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.addEnableFeatureBytes(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @return A list containing the disableFeature.
           */
          @java.lang.Override
          public java.util.List<java.lang.String> getDisableFeatureList() {
            return java.util.Collections.unmodifiableList(instance.getDisableFeatureList());
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @return The count of disableFeature.
           */
          @java.lang.Override
          public int getDisableFeatureCount() {
            return instance.getDisableFeatureCount();
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @param index The index of the element to return.
           * @return The disableFeature at the given index.
           */
          @java.lang.Override
          public java.lang.String getDisableFeature(int index) {
            return instance.getDisableFeature(index);
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @param index The index of the value to return.
           * @return The bytes of the disableFeature at the given index.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getDisableFeatureBytes(int index) {
            return instance.getDisableFeatureBytes(index);
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @param index The index to set the value at.
           * @param value The disableFeature to set.
           * @return This builder for chaining.
           */
          public Builder setDisableFeature(int index, java.lang.String value) {
            copyOnWrite();
            instance.setDisableFeature(index, value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @param value The disableFeature to add.
           * @return This builder for chaining.
           */
          public Builder addDisableFeature(java.lang.String value) {
            copyOnWrite();
            instance.addDisableFeature(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @param values The disableFeature to add.
           * @return This builder for chaining.
           */
          public Builder addAllDisableFeature(java.lang.Iterable<java.lang.String> values) {
            copyOnWrite();
            instance.addAllDisableFeature(values);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearDisableFeature() {
            copyOnWrite();
            instance.clearDisableFeature();
            return this;
          }

          /**
           *
           *
           * <pre>
           * Optional list of features to disable when this experiment is selected.
           * Command-line overrides take precedence over this setting. No feature
           * listed here should exist in the |enable_feature| list.
           * </pre>
           *
           * <code>repeated string disable_feature = 2;</code>
           *
           * @param value The bytes of the disableFeature to add.
           * @return This builder for chaining.
           */
          public Builder addDisableFeatureBytes(com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.addDisableFeatureBytes(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is enabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
           * having a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_on = 3;</code>
           *
           * @return Whether the forcingFeatureOn field is set.
           */
          @java.lang.Override
          public boolean hasForcingFeatureOn() {
            return instance.hasForcingFeatureOn();
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is enabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
           * having a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_on = 3;</code>
           *
           * @return The forcingFeatureOn.
           */
          @java.lang.Override
          public java.lang.String getForcingFeatureOn() {
            return instance.getForcingFeatureOn();
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is enabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
           * having a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_on = 3;</code>
           *
           * @return The bytes for forcingFeatureOn.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getForcingFeatureOnBytes() {
            return instance.getForcingFeatureOnBytes();
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is enabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
           * having a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_on = 3;</code>
           *
           * @param value The forcingFeatureOn to set.
           * @return This builder for chaining.
           */
          public Builder setForcingFeatureOn(java.lang.String value) {
            copyOnWrite();
            instance.setForcingFeatureOn(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is enabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
           * having a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_on = 3;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearForcingFeatureOn() {
            copyOnWrite();
            instance.clearForcingFeatureOn();
            return this;
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is enabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
           * having a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_on = 3;</code>
           *
           * @param value The bytes for forcingFeatureOn to set.
           * @return This builder for chaining.
           */
          public Builder setForcingFeatureOnBytes(com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setForcingFeatureOnBytes(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is disabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
           * a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_off = 4;</code>
           *
           * @return Whether the forcingFeatureOff field is set.
           */
          @java.lang.Override
          public boolean hasForcingFeatureOff() {
            return instance.hasForcingFeatureOff();
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is disabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
           * a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_off = 4;</code>
           *
           * @return The forcingFeatureOff.
           */
          @java.lang.Override
          public java.lang.String getForcingFeatureOff() {
            return instance.getForcingFeatureOff();
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is disabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
           * a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_off = 4;</code>
           *
           * @return The bytes for forcingFeatureOff.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getForcingFeatureOffBytes() {
            return instance.getForcingFeatureOffBytes();
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is disabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
           * a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_off = 4;</code>
           *
           * @param value The forcingFeatureOff to set.
           * @return This builder for chaining.
           */
          public Builder setForcingFeatureOff(java.lang.String value) {
            copyOnWrite();
            instance.setForcingFeatureOff(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is disabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
           * a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_off = 4;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearForcingFeatureOff() {
            copyOnWrite();
            instance.clearForcingFeatureOff();
            return this;
          }

          /**
           *
           *
           * <pre>
           * Similar to |forcing_flag|, this is an optional name of a feature which
           * will cause this experiment to be activated, if that feature is disabled
           * from the command-line. Experiment with this set are not eligible for
           * selection via a random dice roll.
           * Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
           * a non-zero |probability_weight|.
           * </pre>
           *
           * <code>optional string forcing_feature_off = 4;</code>
           *
           * @param value The bytes for forcingFeatureOff to set.
           * @return This builder for chaining.
           */
          public Builder setForcingFeatureOffBytes(com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setForcingFeatureOffBytes(value);
            return this;
          }

          // @@protoc_insertion_point(builder_scope:variations.Study.Experiment.FeatureAssociation)
        }

        @java.lang.Override
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(
            com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
            java.lang.Object arg0,
            java.lang.Object arg1) {
          switch (method) {
            case NEW_MUTABLE_INSTANCE:
              {
                return new org.chromium.components.variations.StudyOuterClass.Study.Experiment
                    .FeatureAssociation();
              }
            case NEW_BUILDER:
              {
                return new Builder();
              }
            case BUILD_MESSAGE_INFO:
              {
                java.lang.Object[] objects =
                    new java.lang.Object[] {
                      "bitField0_",
                      "enableFeature_",
                      "disableFeature_",
                      "forcingFeatureOn_",
                      "forcingFeatureOff_",
                    };
                java.lang.String info =
                    "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0002\u0000\u0001\u001a\u0002\u001a"
                        + "\u0003\u1008\u0000\u0004\u1008\u0001";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
              }
              // fall through
            case GET_DEFAULT_INSTANCE:
              {
                return DEFAULT_INSTANCE;
              }
            case GET_PARSER:
              {
                com.google.protobuf.Parser<
                        org.chromium.components.variations.StudyOuterClass.Study.Experiment
                            .FeatureAssociation>
                    parser = PARSER;
                if (parser == null) {
                  synchronized (
                      org.chromium.components.variations.StudyOuterClass.Study.Experiment
                          .FeatureAssociation.class) {
                    parser = PARSER;
                    if (parser == null) {
                      parser =
                          new DefaultInstanceBasedParser<
                              org.chromium.components.variations.StudyOuterClass.Study.Experiment
                                  .FeatureAssociation>(DEFAULT_INSTANCE);
                      PARSER = parser;
                    }
                  }
                }
                return parser;
              }
            case GET_MEMOIZED_IS_INITIALIZED:
              {
                return (byte) 1;
              }
            case SET_MEMOIZED_IS_INITIALIZED:
              {
                return null;
              }
          }
          throw new UnsupportedOperationException();
        }

        // @@protoc_insertion_point(class_scope:variations.Study.Experiment.FeatureAssociation)
        private static final org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            DEFAULT_INSTANCE;

        static {
          FeatureAssociation defaultInstance = new FeatureAssociation();
          // New instances are implicitly immutable so no need to make
          // immutable.
          DEFAULT_INSTANCE = defaultInstance;
          com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
              FeatureAssociation.class, defaultInstance);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<FeatureAssociation> PARSER;

        public static com.google.protobuf.Parser<FeatureAssociation> parser() {
          return DEFAULT_INSTANCE.getParserForType();
        }
      }

      public interface OverrideUIStringOrBuilder
          extends
          // @@protoc_insertion_point(interface_extends:variations.Study.Experiment.OverrideUIString)
          com.google.protobuf.MessageLiteOrBuilder {

        /**
         *
         *
         * <pre>
         * The first 32 bits of the MD5 hash digest of the resource name to
         * override.
         * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
         * </pre>
         *
         * <code>optional fixed32 name_hash = 1;</code>
         *
         * @return Whether the nameHash field is set.
         */
        boolean hasNameHash();

        /**
         *
         *
         * <pre>
         * The first 32 bits of the MD5 hash digest of the resource name to
         * override.
         * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
         * </pre>
         *
         * <code>optional fixed32 name_hash = 1;</code>
         *
         * @return The nameHash.
         */
        int getNameHash();

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return Whether the value field is set.
         */
        boolean hasValue();

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return The value.
         */
        java.lang.String getValue();

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return The bytes for value.
         */
        com.google.protobuf.ByteString getValueBytes();
      }

      /**
       *
       *
       * <pre>
       * A UI string to override, and the new value to use.
       * </pre>
       *
       * Protobuf type {@code variations.Study.Experiment.OverrideUIString}
       */
      public static final class OverrideUIString
          extends com.google.protobuf.GeneratedMessageLite<
              OverrideUIString, OverrideUIString.Builder>
          implements
          // @@protoc_insertion_point(message_implements:variations.Study.Experiment.OverrideUIString)
          OverrideUIStringOrBuilder {
        private OverrideUIString() {
          value_ = "";
        }

        private int bitField0_;
        public static final int NAME_HASH_FIELD_NUMBER = 1;
        private int nameHash_;

        /**
         *
         *
         * <pre>
         * The first 32 bits of the MD5 hash digest of the resource name to
         * override.
         * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
         * </pre>
         *
         * <code>optional fixed32 name_hash = 1;</code>
         *
         * @return Whether the nameHash field is set.
         */
        @java.lang.Override
        public boolean hasNameHash() {
          return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         *
         *
         * <pre>
         * The first 32 bits of the MD5 hash digest of the resource name to
         * override.
         * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
         * </pre>
         *
         * <code>optional fixed32 name_hash = 1;</code>
         *
         * @return The nameHash.
         */
        @java.lang.Override
        public int getNameHash() {
          return nameHash_;
        }

        /**
         *
         *
         * <pre>
         * The first 32 bits of the MD5 hash digest of the resource name to
         * override.
         * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
         * </pre>
         *
         * <code>optional fixed32 name_hash = 1;</code>
         *
         * @param value The nameHash to set.
         */
        private void setNameHash(int value) {
          bitField0_ |= 0x00000001;
          nameHash_ = value;
        }

        /**
         *
         *
         * <pre>
         * The first 32 bits of the MD5 hash digest of the resource name to
         * override.
         * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
         * </pre>
         *
         * <code>optional fixed32 name_hash = 1;</code>
         */
        private void clearNameHash() {
          bitField0_ = (bitField0_ & ~0x00000001);
          nameHash_ = 0;
        }

        public static final int VALUE_FIELD_NUMBER = 2;
        private java.lang.String value_;

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return Whether the value field is set.
         */
        @java.lang.Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return The value.
         */
        @java.lang.Override
        public java.lang.String getValue() {
          return value_;
        }

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @return The bytes for value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getValueBytes() {
          return com.google.protobuf.ByteString.copyFromUtf8(value_);
        }

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @param value The value to set.
         */
        private void setValue(java.lang.String value) {
          value.getClass();
          bitField0_ |= 0x00000002;
          value_ = value;
        }

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         */
        private void clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
        }

        /**
         *
         *
         * <pre>
         * The new value of the string being overridden.
         * e.g. "Undo"
         * </pre>
         *
         * <code>optional string value = 2;</code>
         *
         * @param value The bytes for value to set.
         */
        private void setValueBytes(com.google.protobuf.ByteString value) {
          value_ = value.toStringUtf8();
          bitField0_ |= 0x00000002;
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(java.io.InputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
          return (Builder) DEFAULT_INSTANCE.createBuilder();
        }

        public static Builder newBuilder(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
                prototype) {
          return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
        }

        /**
         *
         *
         * <pre>
         * A UI string to override, and the new value to use.
         * </pre>
         *
         * Protobuf type {@code variations.Study.Experiment.OverrideUIString}
         */
        public static final class Builder
            extends com.google.protobuf.GeneratedMessageLite.Builder<
                org.chromium.components.variations.StudyOuterClass.Study.Experiment
                    .OverrideUIString,
                Builder>
            implements
            // @@protoc_insertion_point(builder_implements:variations.Study.Experiment.OverrideUIString)
            org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIStringOrBuilder {
          // Construct using
          private Builder() {
            super(DEFAULT_INSTANCE);
          }

          /**
           *
           *
           * <pre>
           * The first 32 bits of the MD5 hash digest of the resource name to
           * override.
           * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
           * </pre>
           *
           * <code>optional fixed32 name_hash = 1;</code>
           *
           * @return Whether the nameHash field is set.
           */
          @java.lang.Override
          public boolean hasNameHash() {
            return instance.hasNameHash();
          }

          /**
           *
           *
           * <pre>
           * The first 32 bits of the MD5 hash digest of the resource name to
           * override.
           * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
           * </pre>
           *
           * <code>optional fixed32 name_hash = 1;</code>
           *
           * @return The nameHash.
           */
          @java.lang.Override
          public int getNameHash() {
            return instance.getNameHash();
          }

          /**
           *
           *
           * <pre>
           * The first 32 bits of the MD5 hash digest of the resource name to
           * override.
           * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
           * </pre>
           *
           * <code>optional fixed32 name_hash = 1;</code>
           *
           * @param value The nameHash to set.
           * @return This builder for chaining.
           */
          public Builder setNameHash(int value) {
            copyOnWrite();
            instance.setNameHash(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * The first 32 bits of the MD5 hash digest of the resource name to
           * override.
           * e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
           * </pre>
           *
           * <code>optional fixed32 name_hash = 1;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearNameHash() {
            copyOnWrite();
            instance.clearNameHash();
            return this;
          }

          /**
           *
           *
           * <pre>
           * The new value of the string being overridden.
           * e.g. "Undo"
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @return Whether the value field is set.
           */
          @java.lang.Override
          public boolean hasValue() {
            return instance.hasValue();
          }

          /**
           *
           *
           * <pre>
           * The new value of the string being overridden.
           * e.g. "Undo"
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @return The value.
           */
          @java.lang.Override
          public java.lang.String getValue() {
            return instance.getValue();
          }

          /**
           *
           *
           * <pre>
           * The new value of the string being overridden.
           * e.g. "Undo"
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @return The bytes for value.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getValueBytes() {
            return instance.getValueBytes();
          }

          /**
           *
           *
           * <pre>
           * The new value of the string being overridden.
           * e.g. "Undo"
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @param value The value to set.
           * @return This builder for chaining.
           */
          public Builder setValue(java.lang.String value) {
            copyOnWrite();
            instance.setValue(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * The new value of the string being overridden.
           * e.g. "Undo"
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearValue() {
            copyOnWrite();
            instance.clearValue();
            return this;
          }

          /**
           *
           *
           * <pre>
           * The new value of the string being overridden.
           * e.g. "Undo"
           * </pre>
           *
           * <code>optional string value = 2;</code>
           *
           * @param value The bytes for value to set.
           * @return This builder for chaining.
           */
          public Builder setValueBytes(com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setValueBytes(value);
            return this;
          }

          // @@protoc_insertion_point(builder_scope:variations.Study.Experiment.OverrideUIString)
        }

        @java.lang.Override
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(
            com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
            java.lang.Object arg0,
            java.lang.Object arg1) {
          switch (method) {
            case NEW_MUTABLE_INSTANCE:
              {
                return new org.chromium.components.variations.StudyOuterClass.Study.Experiment
                    .OverrideUIString();
              }
            case NEW_BUILDER:
              {
                return new Builder();
              }
            case BUILD_MESSAGE_INFO:
              {
                java.lang.Object[] objects =
                    new java.lang.Object[] {
                      "bitField0_", "nameHash_", "value_",
                    };
                java.lang.String info =
                    "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u1006\u0000\u0002"
                        + "\u1008\u0001";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
              }
              // fall through
            case GET_DEFAULT_INSTANCE:
              {
                return DEFAULT_INSTANCE;
              }
            case GET_PARSER:
              {
                com.google.protobuf.Parser<
                        org.chromium.components.variations.StudyOuterClass.Study.Experiment
                            .OverrideUIString>
                    parser = PARSER;
                if (parser == null) {
                  synchronized (
                      org.chromium.components.variations.StudyOuterClass.Study.Experiment
                          .OverrideUIString.class) {
                    parser = PARSER;
                    if (parser == null) {
                      parser =
                          new DefaultInstanceBasedParser<
                              org.chromium.components.variations.StudyOuterClass.Study.Experiment
                                  .OverrideUIString>(DEFAULT_INSTANCE);
                      PARSER = parser;
                    }
                  }
                }
                return parser;
              }
            case GET_MEMOIZED_IS_INITIALIZED:
              {
                return (byte) 1;
              }
            case SET_MEMOIZED_IS_INITIALIZED:
              {
                return null;
              }
          }
          throw new UnsupportedOperationException();
        }

        // @@protoc_insertion_point(class_scope:variations.Study.Experiment.OverrideUIString)
        private static final org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            DEFAULT_INSTANCE;

        static {
          OverrideUIString defaultInstance = new OverrideUIString();
          // New instances are implicitly immutable so no need to make
          // immutable.
          DEFAULT_INSTANCE = defaultInstance;
          com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
              OverrideUIString.class, defaultInstance);
        }

        public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .OverrideUIString
            getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<OverrideUIString> PARSER;

        public static com.google.protobuf.Parser<OverrideUIString> parser() {
          return DEFAULT_INSTANCE.getParserForType();
        }
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.String name_;

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        return name_;
      }

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getNameBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(name_);
      }

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @param value The name to set.
       */
      private void setName(java.lang.String value) {
        value.getClass();
        bitField0_ |= 0x00000001;
        name_ = value;
      }

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      private void clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
      }

      /**
       *
       *
       * <pre>
       * The name of the experiment within the study.
       * Ex: "bucketA"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @param value The bytes for name to set.
       */
      private void setNameBytes(com.google.protobuf.ByteString value) {
        name_ = value.toStringUtf8();
        bitField0_ |= 0x00000001;
      }

      public static final int PROBABILITY_WEIGHT_FIELD_NUMBER = 2;
      private int probabilityWeight_;

      /**
       *
       *
       * <pre>
       * The cut of the total probability taken for this experiment (the x in
       * x / N, where N is the sum of all x’s).  Ex: "50"
       * </pre>
       *
       * <code>required uint32 probability_weight = 2;</code>
       *
       * @return Whether the probabilityWeight field is set.
       */
      @java.lang.Override
      public boolean hasProbabilityWeight() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       *
       *
       * <pre>
       * The cut of the total probability taken for this experiment (the x in
       * x / N, where N is the sum of all x’s).  Ex: "50"
       * </pre>
       *
       * <code>required uint32 probability_weight = 2;</code>
       *
       * @return The probabilityWeight.
       */
      @java.lang.Override
      public int getProbabilityWeight() {
        return probabilityWeight_;
      }

      /**
       *
       *
       * <pre>
       * The cut of the total probability taken for this experiment (the x in
       * x / N, where N is the sum of all x’s).  Ex: "50"
       * </pre>
       *
       * <code>required uint32 probability_weight = 2;</code>
       *
       * @param value The probabilityWeight to set.
       */
      private void setProbabilityWeight(int value) {
        bitField0_ |= 0x00000002;
        probabilityWeight_ = value;
      }

      /**
       *
       *
       * <pre>
       * The cut of the total probability taken for this experiment (the x in
       * x / N, where N is the sum of all x’s).  Ex: "50"
       * </pre>
       *
       * <code>required uint32 probability_weight = 2;</code>
       */
      private void clearProbabilityWeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        probabilityWeight_ = 0;
      }

      public static final int GOOGLE_WEB_EXPERIMENT_ID_FIELD_NUMBER = 3;
      private long googleWebExperimentId_;

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Google web
       * properties.
       * </pre>
       *
       * <code>optional uint64 google_web_experiment_id = 3;</code>
       *
       * @return Whether the googleWebExperimentId field is set.
       */
      @java.lang.Override
      public boolean hasGoogleWebExperimentId() {
        return ((bitField0_ & 0x00000004) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Google web
       * properties.
       * </pre>
       *
       * <code>optional uint64 google_web_experiment_id = 3;</code>
       *
       * @return The googleWebExperimentId.
       */
      @java.lang.Override
      public long getGoogleWebExperimentId() {
        return googleWebExperimentId_;
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Google web
       * properties.
       * </pre>
       *
       * <code>optional uint64 google_web_experiment_id = 3;</code>
       *
       * @param value The googleWebExperimentId to set.
       */
      private void setGoogleWebExperimentId(long value) {
        bitField0_ |= 0x00000004;
        googleWebExperimentId_ = value;
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Google web
       * properties.
       * </pre>
       *
       * <code>optional uint64 google_web_experiment_id = 3;</code>
       */
      private void clearGoogleWebExperimentId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        googleWebExperimentId_ = 0L;
      }

      public static final int GOOGLE_WEB_TRIGGER_EXPERIMENT_ID_FIELD_NUMBER = 8;
      private long googleWebTriggerExperimentId_;

      /**
       *
       *
       * <pre>
       * Optional id used to allow this experiment to trigger experimental
       * behavior on Google web properties.
       * </pre>
       *
       * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
       *
       * @return Whether the googleWebTriggerExperimentId field is set.
       */
      @java.lang.Override
      public boolean hasGoogleWebTriggerExperimentId() {
        return ((bitField0_ & 0x00000008) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional id used to allow this experiment to trigger experimental
       * behavior on Google web properties.
       * </pre>
       *
       * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
       *
       * @return The googleWebTriggerExperimentId.
       */
      @java.lang.Override
      public long getGoogleWebTriggerExperimentId() {
        return googleWebTriggerExperimentId_;
      }

      /**
       *
       *
       * <pre>
       * Optional id used to allow this experiment to trigger experimental
       * behavior on Google web properties.
       * </pre>
       *
       * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
       *
       * @param value The googleWebTriggerExperimentId to set.
       */
      private void setGoogleWebTriggerExperimentId(long value) {
        bitField0_ |= 0x00000008;
        googleWebTriggerExperimentId_ = value;
      }

      /**
       *
       *
       * <pre>
       * Optional id used to allow this experiment to trigger experimental
       * behavior on Google web properties.
       * </pre>
       *
       * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
       */
      private void clearGoogleWebTriggerExperimentId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        googleWebTriggerExperimentId_ = 0L;
      }

      public static final int GOOGLE_WEB_VISIBILITY_FIELD_NUMBER = 16;
      private int googleWebVisibility_;

      /**
       *
       *
       * <pre>
       * Optional id that specifies under which conditions Google web and web
       * trigger experiment ids are visible to Google web properties.
       * </pre>
       *
       * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
       *
       * @return Whether the googleWebVisibility field is set.
       */
      @java.lang.Override
      public boolean hasGoogleWebVisibility() {
        return ((bitField0_ & 0x00000010) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional id that specifies under which conditions Google web and web
       * trigger experiment ids are visible to Google web properties.
       * </pre>
       *
       * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
       *
       * @return The googleWebVisibility.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility
          getGoogleWebVisibility() {
        org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility result =
            org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility.forNumber(
                googleWebVisibility_);
        return result == null
            ? org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility.ANY
            : result;
      }

      /**
       *
       *
       * <pre>
       * Optional id that specifies under which conditions Google web and web
       * trigger experiment ids are visible to Google web properties.
       * </pre>
       *
       * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
       *
       * @param value The googleWebVisibility to set.
       */
      private void setGoogleWebVisibility(
          org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility value) {
        googleWebVisibility_ = value.getNumber();
        bitField0_ |= 0x00000010;
      }

      /**
       *
       *
       * <pre>
       * Optional id that specifies under which conditions Google web and web
       * trigger experiment ids are visible to Google web properties.
       * </pre>
       *
       * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
       */
      private void clearGoogleWebVisibility() {
        bitField0_ = (bitField0_ & ~0x00000010);
        googleWebVisibility_ = 0;
      }

      public static final int CHROME_SYNC_EXPERIMENT_ID_FIELD_NUMBER = 10;
      private long chromeSyncExperimentId_;

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Chrome Sync.
       * </pre>
       *
       * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
       *
       * @return Whether the chromeSyncExperimentId field is set.
       */
      @java.lang.Override
      public boolean hasChromeSyncExperimentId() {
        return ((bitField0_ & 0x00000020) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Chrome Sync.
       * </pre>
       *
       * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
       *
       * @return The chromeSyncExperimentId.
       */
      @java.lang.Override
      public long getChromeSyncExperimentId() {
        return chromeSyncExperimentId_;
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Chrome Sync.
       * </pre>
       *
       * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
       *
       * @param value The chromeSyncExperimentId to set.
       */
      private void setChromeSyncExperimentId(long value) {
        bitField0_ |= 0x00000020;
        chromeSyncExperimentId_ = value;
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment for Chrome Sync.
       * </pre>
       *
       * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
       */
      private void clearChromeSyncExperimentId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        chromeSyncExperimentId_ = 0L;
      }

      public static final int GOOGLE_APP_EXPERIMENT_ID_FIELD_NUMBER = 15;
      private long googleAppExperimentId_;

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment when activating
       * integrations with the Android Google App.
       * IMPORTANT: This field is only approved for integrations with the Android
       * Google App and must receive a privacy review before extending to other
       * apps.
       * </pre>
       *
       * <code>optional uint64 google_app_experiment_id = 15;</code>
       *
       * @return Whether the googleAppExperimentId field is set.
       */
      @java.lang.Override
      public boolean hasGoogleAppExperimentId() {
        return ((bitField0_ & 0x00000040) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment when activating
       * integrations with the Android Google App.
       * IMPORTANT: This field is only approved for integrations with the Android
       * Google App and must receive a privacy review before extending to other
       * apps.
       * </pre>
       *
       * <code>optional uint64 google_app_experiment_id = 15;</code>
       *
       * @return The googleAppExperimentId.
       */
      @java.lang.Override
      public long getGoogleAppExperimentId() {
        return googleAppExperimentId_;
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment when activating
       * integrations with the Android Google App.
       * IMPORTANT: This field is only approved for integrations with the Android
       * Google App and must receive a privacy review before extending to other
       * apps.
       * </pre>
       *
       * <code>optional uint64 google_app_experiment_id = 15;</code>
       *
       * @param value The googleAppExperimentId to set.
       */
      private void setGoogleAppExperimentId(long value) {
        bitField0_ |= 0x00000040;
        googleAppExperimentId_ = value;
      }

      /**
       *
       *
       * <pre>
       * Optional id used to uniquely identify this experiment when activating
       * integrations with the Android Google App.
       * IMPORTANT: This field is only approved for integrations with the Android
       * Google App and must receive a privacy review before extending to other
       * apps.
       * </pre>
       *
       * <code>optional uint64 google_app_experiment_id = 15;</code>
       */
      private void clearGoogleAppExperimentId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        googleAppExperimentId_ = 0L;
      }

      public static final int FEATURE_ASSOCIATION_FIELD_NUMBER = 12;
      private org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
          featureAssociation_;

      /**
       * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
       * </code>
       */
      @java.lang.Override
      public boolean hasFeatureAssociation() {
        return ((bitField0_ & 0x00000080) != 0);
      }

      /**
       * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
       * </code>
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
          getFeatureAssociation() {
        return featureAssociation_ == null
            ? org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
                .getDefaultInstance()
            : featureAssociation_;
      }

      /**
       * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
       * </code>
       */
      private void setFeatureAssociation(
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
              value) {
        value.getClass();
        featureAssociation_ = value;
        bitField0_ |= 0x00000080;
      }

      /**
       * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
       * </code>
       */
      @java.lang.SuppressWarnings({"ReferenceEquality"})
      private void mergeFeatureAssociation(
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
              value) {
        value.getClass();
        if (featureAssociation_ != null
            && featureAssociation_
                != org.chromium.components.variations.StudyOuterClass.Study.Experiment
                    .FeatureAssociation.getDefaultInstance()) {
          featureAssociation_ =
              org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
                  .newBuilder(featureAssociation_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          featureAssociation_ = value;
        }
        bitField0_ |= 0x00000080;
      }

      /**
       * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
       * </code>
       */
      private void clearFeatureAssociation() {
        featureAssociation_ = null;
        bitField0_ = (bitField0_ & ~0x00000080);
      }

      public static final int FORCING_FLAG_FIELD_NUMBER = 5;
      private java.lang.String forcingFlag_;

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       *
       * @return Whether the forcingFlag field is set.
       */
      @java.lang.Override
      public boolean hasForcingFlag() {
        return ((bitField0_ & 0x00000100) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       *
       * @return The forcingFlag.
       */
      @java.lang.Override
      public java.lang.String getForcingFlag() {
        return forcingFlag_;
      }

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       *
       * @return The bytes for forcingFlag.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getForcingFlagBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(forcingFlag_);
      }

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       *
       * @param value The forcingFlag to set.
       */
      private void setForcingFlag(java.lang.String value) {
        value.getClass();
        bitField0_ |= 0x00000100;
        forcingFlag_ = value;
      }

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       */
      private void clearForcingFlag() {
        bitField0_ = (bitField0_ & ~0x00000100);
        forcingFlag_ = getDefaultInstance().getForcingFlag();
      }

      /**
       *
       *
       * <pre>
       * Optional name of a Chrome flag that, when present, causes this experiment
       * to be forced. If the forcing_flag field is set, users will not be
       * assigned to this experiment unless that flag is present in Chrome's
       * command line.
       * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
       * having a non-zero |probability_weight|.
       * </pre>
       *
       * <code>optional string forcing_flag = 5;</code>
       *
       * @param value The bytes for forcingFlag to set.
       */
      private void setForcingFlagBytes(com.google.protobuf.ByteString value) {
        forcingFlag_ = value.toStringUtf8();
        bitField0_ |= 0x00000100;
      }

      public static final int PARAM_FIELD_NUMBER = 6;
      private com.google.protobuf.Internal.ProtobufList<
              org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param>
          param_;

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      @java.lang.Override
      public java.util.List<
              org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param>
          getParamList() {
        return param_;
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      public java.util.List<
              ? extends
                  org.chromium.components.variations.StudyOuterClass.Study.Experiment
                      .ParamOrBuilder>
          getParamOrBuilderList() {
        return param_;
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      @java.lang.Override
      public int getParamCount() {
        return param_.size();
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param getParam(
          int index) {
        return param_.get(index);
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      public org.chromium.components.variations.StudyOuterClass.Study.Experiment.ParamOrBuilder
          getParamOrBuilder(int index) {
        return param_.get(index);
      }

      private void ensureParamIsMutable() {
        com.google.protobuf.Internal.ProtobufList<
                org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param>
            tmp = param_;
        if (!tmp.isModifiable()) {
          param_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      private void setParam(
          int index,
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param value) {
        value.getClass();
        ensureParamIsMutable();
        param_.set(index, value);
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      private void addParam(
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param value) {
        value.getClass();
        ensureParamIsMutable();
        param_.add(value);
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      private void addParam(
          int index,
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param value) {
        value.getClass();
        ensureParamIsMutable();
        param_.add(index, value);
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      private void addAllParam(
          java.lang.Iterable<
                  ? extends
                      org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param>
              values) {
        ensureParamIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, param_);
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      private void clearParam() {
        param_ = emptyProtobufList();
      }

      /**
       *
       *
       * <pre>
       * Parameter values for this experiment.
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
       */
      private void removeParam(int index) {
        ensureParamIsMutable();
        param_.remove(index);
      }

      public static final int TYPE_FIELD_NUMBER = 7;
      private int type_;

      /**
       * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
       *
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return ((bitField0_ & 0x00000200) != 0);
      }

      /**
       * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
       *
       * @return The type.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type getType() {
        org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type result =
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type.forNumber(
                type_);
        return result == null
            ? org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type.NORMAL
            : result;
      }

      /**
       * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
       *
       * @param value The type to set.
       */
      private void setType(
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type value) {
        type_ = value.getNumber();
        bitField0_ |= 0x00000200;
      }

      /** <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code> */
      private void clearType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        type_ = 0;
      }

      public static final int OVERRIDE_UI_STRING_FIELD_NUMBER = 9;
      private com.google.protobuf.Internal.ProtobufList<
              org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString>
          overrideUiString_;

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      @java.lang.Override
      public java.util.List<
              org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString>
          getOverrideUiStringList() {
        return overrideUiString_;
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      public java.util.List<
              ? extends
                  org.chromium.components.variations.StudyOuterClass.Study.Experiment
                      .OverrideUIStringOrBuilder>
          getOverrideUiStringOrBuilderList() {
        return overrideUiString_;
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      @java.lang.Override
      public int getOverrideUiStringCount() {
        return overrideUiString_.size();
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
          getOverrideUiString(int index) {
        return overrideUiString_.get(index);
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      public org.chromium.components.variations.StudyOuterClass.Study.Experiment
              .OverrideUIStringOrBuilder
          getOverrideUiStringOrBuilder(int index) {
        return overrideUiString_.get(index);
      }

      private void ensureOverrideUiStringIsMutable() {
        com.google.protobuf.Internal.ProtobufList<
                org.chromium.components.variations.StudyOuterClass.Study.Experiment
                    .OverrideUIString>
            tmp = overrideUiString_;
        if (!tmp.isModifiable()) {
          overrideUiString_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      private void setOverrideUiString(
          int index,
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
              value) {
        value.getClass();
        ensureOverrideUiStringIsMutable();
        overrideUiString_.set(index, value);
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      private void addOverrideUiString(
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
              value) {
        value.getClass();
        ensureOverrideUiStringIsMutable();
        overrideUiString_.add(value);
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      private void addOverrideUiString(
          int index,
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
              value) {
        value.getClass();
        ensureOverrideUiStringIsMutable();
        overrideUiString_.add(index, value);
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      private void addAllOverrideUiString(
          java.lang.Iterable<
                  ? extends
                      org.chromium.components.variations.StudyOuterClass.Study.Experiment
                          .OverrideUIString>
              values) {
        ensureOverrideUiStringIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, overrideUiString_);
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      private void clearOverrideUiString() {
        overrideUiString_ = emptyProtobufList();
      }

      /**
       * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;</code>
       */
      private void removeOverrideUiString(int index) {
        ensureOverrideUiStringIsMutable();
        overrideUiString_.remove(index);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }

      public static Builder newBuilder(
          org.chromium.components.variations.StudyOuterClass.Study.Experiment prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       *
       *
       * <pre>
       * An experiment within the study.
       * Next tag: 17
       * </pre>
       *
       * Protobuf type {@code variations.Study.Experiment}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageLite.Builder<
              org.chromium.components.variations.StudyOuterClass.Study.Experiment, Builder>
          implements
          // @@protoc_insertion_point(builder_implements:variations.Study.Experiment)
          org.chromium.components.variations.StudyOuterClass.Study.ExperimentOrBuilder {
        // Construct using
        private Builder() {
          super(DEFAULT_INSTANCE);
        }

        /**
         *
         *
         * <pre>
         * The name of the experiment within the study.
         * Ex: "bucketA"
         * </pre>
         *
         * <code>required string name = 1;</code>
         *
         * @return Whether the name field is set.
         */
        @java.lang.Override
        public boolean hasName() {
          return instance.hasName();
        }

        /**
         *
         *
         * <pre>
         * The name of the experiment within the study.
         * Ex: "bucketA"
         * </pre>
         *
         * <code>required string name = 1;</code>
         *
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          return instance.getName();
        }

        /**
         *
         *
         * <pre>
         * The name of the experiment within the study.
         * Ex: "bucketA"
         * </pre>
         *
         * <code>required string name = 1;</code>
         *
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getNameBytes() {
          return instance.getNameBytes();
        }

        /**
         *
         *
         * <pre>
         * The name of the experiment within the study.
         * Ex: "bucketA"
         * </pre>
         *
         * <code>required string name = 1;</code>
         *
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(java.lang.String value) {
          copyOnWrite();
          instance.setName(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The name of the experiment within the study.
         * Ex: "bucketA"
         * </pre>
         *
         * <code>required string name = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearName() {
          copyOnWrite();
          instance.clearName();
          return this;
        }

        /**
         *
         *
         * <pre>
         * The name of the experiment within the study.
         * Ex: "bucketA"
         * </pre>
         *
         * <code>required string name = 1;</code>
         *
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setNameBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The cut of the total probability taken for this experiment (the x in
         * x / N, where N is the sum of all x’s).  Ex: "50"
         * </pre>
         *
         * <code>required uint32 probability_weight = 2;</code>
         *
         * @return Whether the probabilityWeight field is set.
         */
        @java.lang.Override
        public boolean hasProbabilityWeight() {
          return instance.hasProbabilityWeight();
        }

        /**
         *
         *
         * <pre>
         * The cut of the total probability taken for this experiment (the x in
         * x / N, where N is the sum of all x’s).  Ex: "50"
         * </pre>
         *
         * <code>required uint32 probability_weight = 2;</code>
         *
         * @return The probabilityWeight.
         */
        @java.lang.Override
        public int getProbabilityWeight() {
          return instance.getProbabilityWeight();
        }

        /**
         *
         *
         * <pre>
         * The cut of the total probability taken for this experiment (the x in
         * x / N, where N is the sum of all x’s).  Ex: "50"
         * </pre>
         *
         * <code>required uint32 probability_weight = 2;</code>
         *
         * @param value The probabilityWeight to set.
         * @return This builder for chaining.
         */
        public Builder setProbabilityWeight(int value) {
          copyOnWrite();
          instance.setProbabilityWeight(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The cut of the total probability taken for this experiment (the x in
         * x / N, where N is the sum of all x’s).  Ex: "50"
         * </pre>
         *
         * <code>required uint32 probability_weight = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearProbabilityWeight() {
          copyOnWrite();
          instance.clearProbabilityWeight();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment for Google web
         * properties.
         * </pre>
         *
         * <code>optional uint64 google_web_experiment_id = 3;</code>
         *
         * @return Whether the googleWebExperimentId field is set.
         */
        @java.lang.Override
        public boolean hasGoogleWebExperimentId() {
          return instance.hasGoogleWebExperimentId();
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment for Google web
         * properties.
         * </pre>
         *
         * <code>optional uint64 google_web_experiment_id = 3;</code>
         *
         * @return The googleWebExperimentId.
         */
        @java.lang.Override
        public long getGoogleWebExperimentId() {
          return instance.getGoogleWebExperimentId();
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment for Google web
         * properties.
         * </pre>
         *
         * <code>optional uint64 google_web_experiment_id = 3;</code>
         *
         * @param value The googleWebExperimentId to set.
         * @return This builder for chaining.
         */
        public Builder setGoogleWebExperimentId(long value) {
          copyOnWrite();
          instance.setGoogleWebExperimentId(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment for Google web
         * properties.
         * </pre>
         *
         * <code>optional uint64 google_web_experiment_id = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearGoogleWebExperimentId() {
          copyOnWrite();
          instance.clearGoogleWebExperimentId();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id used to allow this experiment to trigger experimental
         * behavior on Google web properties.
         * </pre>
         *
         * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
         *
         * @return Whether the googleWebTriggerExperimentId field is set.
         */
        @java.lang.Override
        public boolean hasGoogleWebTriggerExperimentId() {
          return instance.hasGoogleWebTriggerExperimentId();
        }

        /**
         *
         *
         * <pre>
         * Optional id used to allow this experiment to trigger experimental
         * behavior on Google web properties.
         * </pre>
         *
         * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
         *
         * @return The googleWebTriggerExperimentId.
         */
        @java.lang.Override
        public long getGoogleWebTriggerExperimentId() {
          return instance.getGoogleWebTriggerExperimentId();
        }

        /**
         *
         *
         * <pre>
         * Optional id used to allow this experiment to trigger experimental
         * behavior on Google web properties.
         * </pre>
         *
         * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
         *
         * @param value The googleWebTriggerExperimentId to set.
         * @return This builder for chaining.
         */
        public Builder setGoogleWebTriggerExperimentId(long value) {
          copyOnWrite();
          instance.setGoogleWebTriggerExperimentId(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id used to allow this experiment to trigger experimental
         * behavior on Google web properties.
         * </pre>
         *
         * <code>optional uint64 google_web_trigger_experiment_id = 8;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearGoogleWebTriggerExperimentId() {
          copyOnWrite();
          instance.clearGoogleWebTriggerExperimentId();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id that specifies under which conditions Google web and web
         * trigger experiment ids are visible to Google web properties.
         * </pre>
         *
         * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
         *
         * @return Whether the googleWebVisibility field is set.
         */
        @java.lang.Override
        public boolean hasGoogleWebVisibility() {
          return instance.hasGoogleWebVisibility();
        }

        /**
         *
         *
         * <pre>
         * Optional id that specifies under which conditions Google web and web
         * trigger experiment ids are visible to Google web properties.
         * </pre>
         *
         * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
         *
         * @return The googleWebVisibility.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility
            getGoogleWebVisibility() {
          return instance.getGoogleWebVisibility();
        }

        /**
         *
         *
         * <pre>
         * Optional id that specifies under which conditions Google web and web
         * trigger experiment ids are visible to Google web properties.
         * </pre>
         *
         * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
         *
         * @param value The enum numeric value on the wire for googleWebVisibility to set.
         * @return This builder for chaining.
         */
        public Builder setGoogleWebVisibility(
            org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility value) {
          copyOnWrite();
          instance.setGoogleWebVisibility(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id that specifies under which conditions Google web and web
         * trigger experiment ids are visible to Google web properties.
         * </pre>
         *
         * <code>optional .variations.Study.GoogleWebVisibility google_web_visibility = 16;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearGoogleWebVisibility() {
          copyOnWrite();
          instance.clearGoogleWebVisibility();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment for Chrome Sync.
         * </pre>
         *
         * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
         *
         * @return Whether the chromeSyncExperimentId field is set.
         */
        @java.lang.Override
        public boolean hasChromeSyncExperimentId() {
          return instance.hasChromeSyncExperimentId();
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment for Chrome Sync.
         * </pre>
         *
         * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
         *
         * @return The chromeSyncExperimentId.
         */
        @java.lang.Override
        public long getChromeSyncExperimentId() {
          return instance.getChromeSyncExperimentId();
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment for Chrome Sync.
         * </pre>
         *
         * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
         *
         * @param value The chromeSyncExperimentId to set.
         * @return This builder for chaining.
         */
        public Builder setChromeSyncExperimentId(long value) {
          copyOnWrite();
          instance.setChromeSyncExperimentId(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment for Chrome Sync.
         * </pre>
         *
         * <code>optional uint64 chrome_sync_experiment_id = 10;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearChromeSyncExperimentId() {
          copyOnWrite();
          instance.clearChromeSyncExperimentId();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment when activating
         * integrations with the Android Google App.
         * IMPORTANT: This field is only approved for integrations with the Android
         * Google App and must receive a privacy review before extending to other
         * apps.
         * </pre>
         *
         * <code>optional uint64 google_app_experiment_id = 15;</code>
         *
         * @return Whether the googleAppExperimentId field is set.
         */
        @java.lang.Override
        public boolean hasGoogleAppExperimentId() {
          return instance.hasGoogleAppExperimentId();
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment when activating
         * integrations with the Android Google App.
         * IMPORTANT: This field is only approved for integrations with the Android
         * Google App and must receive a privacy review before extending to other
         * apps.
         * </pre>
         *
         * <code>optional uint64 google_app_experiment_id = 15;</code>
         *
         * @return The googleAppExperimentId.
         */
        @java.lang.Override
        public long getGoogleAppExperimentId() {
          return instance.getGoogleAppExperimentId();
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment when activating
         * integrations with the Android Google App.
         * IMPORTANT: This field is only approved for integrations with the Android
         * Google App and must receive a privacy review before extending to other
         * apps.
         * </pre>
         *
         * <code>optional uint64 google_app_experiment_id = 15;</code>
         *
         * @param value The googleAppExperimentId to set.
         * @return This builder for chaining.
         */
        public Builder setGoogleAppExperimentId(long value) {
          copyOnWrite();
          instance.setGoogleAppExperimentId(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional id used to uniquely identify this experiment when activating
         * integrations with the Android Google App.
         * IMPORTANT: This field is only approved for integrations with the Android
         * Google App and must receive a privacy review before extending to other
         * apps.
         * </pre>
         *
         * <code>optional uint64 google_app_experiment_id = 15;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearGoogleAppExperimentId() {
          copyOnWrite();
          instance.clearGoogleAppExperimentId();
          return this;
        }

        /**
         * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
         * </code>
         */
        @java.lang.Override
        public boolean hasFeatureAssociation() {
          return instance.hasFeatureAssociation();
        }

        /**
         * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
         * </code>
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.Experiment
                .FeatureAssociation
            getFeatureAssociation() {
          return instance.getFeatureAssociation();
        }

        /**
         * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
         * </code>
         */
        public Builder setFeatureAssociation(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
                value) {
          copyOnWrite();
          instance.setFeatureAssociation(value);
          return this;
        }

        /**
         * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
         * </code>
         */
        public Builder setFeatureAssociation(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
                    .Builder
                builderForValue) {
          copyOnWrite();
          instance.setFeatureAssociation(builderForValue.build());
          return this;
        }

        /**
         * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
         * </code>
         */
        public Builder mergeFeatureAssociation(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.FeatureAssociation
                value) {
          copyOnWrite();
          instance.mergeFeatureAssociation(value);
          return this;
        }

        /**
         * <code>optional .variations.Study.Experiment.FeatureAssociation feature_association = 12;
         * </code>
         */
        public Builder clearFeatureAssociation() {
          copyOnWrite();
          instance.clearFeatureAssociation();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional name of a Chrome flag that, when present, causes this experiment
         * to be forced. If the forcing_flag field is set, users will not be
         * assigned to this experiment unless that flag is present in Chrome's
         * command line.
         * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_flag = 5;</code>
         *
         * @return Whether the forcingFlag field is set.
         */
        @java.lang.Override
        public boolean hasForcingFlag() {
          return instance.hasForcingFlag();
        }

        /**
         *
         *
         * <pre>
         * Optional name of a Chrome flag that, when present, causes this experiment
         * to be forced. If the forcing_flag field is set, users will not be
         * assigned to this experiment unless that flag is present in Chrome's
         * command line.
         * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_flag = 5;</code>
         *
         * @return The forcingFlag.
         */
        @java.lang.Override
        public java.lang.String getForcingFlag() {
          return instance.getForcingFlag();
        }

        /**
         *
         *
         * <pre>
         * Optional name of a Chrome flag that, when present, causes this experiment
         * to be forced. If the forcing_flag field is set, users will not be
         * assigned to this experiment unless that flag is present in Chrome's
         * command line.
         * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_flag = 5;</code>
         *
         * @return The bytes for forcingFlag.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getForcingFlagBytes() {
          return instance.getForcingFlagBytes();
        }

        /**
         *
         *
         * <pre>
         * Optional name of a Chrome flag that, when present, causes this experiment
         * to be forced. If the forcing_flag field is set, users will not be
         * assigned to this experiment unless that flag is present in Chrome's
         * command line.
         * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_flag = 5;</code>
         *
         * @param value The forcingFlag to set.
         * @return This builder for chaining.
         */
        public Builder setForcingFlag(java.lang.String value) {
          copyOnWrite();
          instance.setForcingFlag(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional name of a Chrome flag that, when present, causes this experiment
         * to be forced. If the forcing_flag field is set, users will not be
         * assigned to this experiment unless that flag is present in Chrome's
         * command line.
         * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_flag = 5;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearForcingFlag() {
          copyOnWrite();
          instance.clearForcingFlag();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Optional name of a Chrome flag that, when present, causes this experiment
         * to be forced. If the forcing_flag field is set, users will not be
         * assigned to this experiment unless that flag is present in Chrome's
         * command line.
         * Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
         * having a non-zero |probability_weight|.
         * </pre>
         *
         * <code>optional string forcing_flag = 5;</code>
         *
         * @param value The bytes for forcingFlag to set.
         * @return This builder for chaining.
         */
        public Builder setForcingFlagBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setForcingFlagBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        @java.lang.Override
        public java.util.List<
                org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param>
            getParamList() {
          return java.util.Collections.unmodifiableList(instance.getParamList());
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        @java.lang.Override
        public int getParamCount() {
          return instance.getParamCount();
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param getParam(
            int index) {
          return instance.getParam(index);
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder setParam(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param value) {
          copyOnWrite();
          instance.setParam(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder setParam(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param.Builder
                builderForValue) {
          copyOnWrite();
          instance.setParam(index, builderForValue.build());
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder addParam(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param value) {
          copyOnWrite();
          instance.addParam(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder addParam(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param value) {
          copyOnWrite();
          instance.addParam(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder addParam(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param.Builder
                builderForValue) {
          copyOnWrite();
          instance.addParam(builderForValue.build());
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder addParam(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param.Builder
                builderForValue) {
          copyOnWrite();
          instance.addParam(index, builderForValue.build());
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder addAllParam(
            java.lang.Iterable<
                    ? extends
                        org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param>
                values) {
          copyOnWrite();
          instance.addAllParam(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder clearParam() {
          copyOnWrite();
          instance.clearParam();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Parameter values for this experiment.
         * </pre>
         *
         * <code>repeated .variations.Study.Experiment.Param param = 6;</code>
         */
        public Builder removeParam(int index) {
          copyOnWrite();
          instance.removeParam(index);
          return this;
        }

        /**
         * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
         *
         * @return Whether the type field is set.
         */
        @java.lang.Override
        public boolean hasType() {
          return instance.hasType();
        }

        /**
         * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
         *
         * @return The type.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type getType() {
          return instance.getType();
        }

        /**
         * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
         *
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setType(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type value) {
          copyOnWrite();
          instance.setType(value);
          return this;
        }

        /**
         * <code>optional .variations.Study.Experiment.Type type = 7 [default = NORMAL];</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearType() {
          copyOnWrite();
          instance.clearType();
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        @java.lang.Override
        public java.util.List<
                org.chromium.components.variations.StudyOuterClass.Study.Experiment
                    .OverrideUIString>
            getOverrideUiStringList() {
          return java.util.Collections.unmodifiableList(instance.getOverrideUiStringList());
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        @java.lang.Override
        public int getOverrideUiStringCount() {
          return instance.getOverrideUiStringCount();
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
            getOverrideUiString(int index) {
          return instance.getOverrideUiString(index);
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder setOverrideUiString(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
                value) {
          copyOnWrite();
          instance.setOverrideUiString(index, value);
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder setOverrideUiString(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
                    .Builder
                builderForValue) {
          copyOnWrite();
          instance.setOverrideUiString(index, builderForValue.build());
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder addOverrideUiString(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
                value) {
          copyOnWrite();
          instance.addOverrideUiString(value);
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder addOverrideUiString(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
                value) {
          copyOnWrite();
          instance.addOverrideUiString(index, value);
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder addOverrideUiString(
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
                    .Builder
                builderForValue) {
          copyOnWrite();
          instance.addOverrideUiString(builderForValue.build());
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder addOverrideUiString(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.Experiment.OverrideUIString
                    .Builder
                builderForValue) {
          copyOnWrite();
          instance.addOverrideUiString(index, builderForValue.build());
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder addAllOverrideUiString(
            java.lang.Iterable<
                    ? extends
                        org.chromium.components.variations.StudyOuterClass.Study.Experiment
                            .OverrideUIString>
                values) {
          copyOnWrite();
          instance.addAllOverrideUiString(values);
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder clearOverrideUiString() {
          copyOnWrite();
          instance.clearOverrideUiString();
          return this;
        }

        /**
         * <code>repeated .variations.Study.Experiment.OverrideUIString override_ui_string = 9;
         * </code>
         */
        public Builder removeOverrideUiString(int index) {
          copyOnWrite();
          instance.removeOverrideUiString(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:variations.Study.Experiment)
      }

      private byte memoizedIsInitialized = 2;

      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0,
          java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE:
            {
              return new org.chromium.components.variations.StudyOuterClass.Study.Experiment();
            }
          case NEW_BUILDER:
            {
              return new Builder();
            }
          case BUILD_MESSAGE_INFO:
            {
              java.lang.Object[] objects =
                  new java.lang.Object[] {
                    "bitField0_",
                    "name_",
                    "probabilityWeight_",
                    "googleWebExperimentId_",
                    "forcingFlag_",
                    "param_",
                    org.chromium.components.variations.StudyOuterClass.Study.Experiment.Param.class,
                    "type_",
                    org.chromium.components.variations.StudyOuterClass.Study.Experiment.Type
                        .internalGetVerifier(),
                    "googleWebTriggerExperimentId_",
                    "overrideUiString_",
                    org.chromium.components.variations.StudyOuterClass.Study.Experiment
                        .OverrideUIString.class,
                    "chromeSyncExperimentId_",
                    "featureAssociation_",
                    "googleAppExperimentId_",
                    "googleWebVisibility_",
                    org.chromium.components.variations.StudyOuterClass.Study.GoogleWebVisibility
                        .internalGetVerifier(),
                  };
              java.lang.String info =
                  "\u0001\f\u0000\u0001\u0001\u0010\f\u0000\u0002\u0002\u0001\u1508\u0000\u0002\u150b"
                      + "\u0001\u0003\u1003\u0002\u0005\u1008\b\u0006\u001b\u0007\u100c\t\b\u1003\u0003\t"
                      + "\u001b\n\u1003\u0005\f\u1009\u0007\u000f\u1003\u0006\u0010\u100c\u0004";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
          case GET_DEFAULT_INSTANCE:
            {
              return DEFAULT_INSTANCE;
            }
          case GET_PARSER:
            {
              com.google.protobuf.Parser<
                      org.chromium.components.variations.StudyOuterClass.Study.Experiment>
                  parser = PARSER;
              if (parser == null) {
                synchronized (
                    org.chromium.components.variations.StudyOuterClass.Study.Experiment.class) {
                  parser = PARSER;
                  if (parser == null) {
                    parser =
                        new DefaultInstanceBasedParser<
                            org.chromium.components.variations.StudyOuterClass.Study.Experiment>(
                            DEFAULT_INSTANCE);
                    PARSER = parser;
                  }
                }
              }
              return parser;
            }
          case GET_MEMOIZED_IS_INITIALIZED:
            {
              return memoizedIsInitialized;
            }
          case SET_MEMOIZED_IS_INITIALIZED:
            {
              memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
              return null;
            }
        }
        throw new UnsupportedOperationException();
      }

      // @@protoc_insertion_point(class_scope:variations.Study.Experiment)
      private static final org.chromium.components.variations.StudyOuterClass.Study.Experiment
          DEFAULT_INSTANCE;

      static {
        Experiment defaultInstance = new Experiment();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
            Experiment.class, defaultInstance);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Experiment
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Experiment> PARSER;

      public static com.google.protobuf.Parser<Experiment> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface FilterOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:variations.Study.Filter)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       *
       *
       * <pre>
       * The start date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 start_date = 1;</code>
       *
       * @return Whether the startDate field is set.
       */
      boolean hasStartDate();

      /**
       *
       *
       * <pre>
       * The start date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 start_date = 1;</code>
       *
       * @return The startDate.
       */
      long getStartDate();

      /**
       *
       *
       * <pre>
       * The end date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * Mutually exclusive with expiry_date. The difference between end_date and
       * expiry_date is that, when end_date is past, the field trial will not be
       * created. When expiry_date is past, the trial is still created, but will
       * be disabled, causing it to select its default group.
       * </pre>
       *
       * <code>optional int64 end_date = 13;</code>
       *
       * @return Whether the endDate field is set.
       */
      boolean hasEndDate();

      /**
       *
       *
       * <pre>
       * The end date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * Mutually exclusive with expiry_date. The difference between end_date and
       * expiry_date is that, when end_date is past, the field trial will not be
       * created. When expiry_date is past, the trial is still created, but will
       * be disabled, causing it to select its default group.
       * </pre>
       *
       * <code>optional int64 end_date = 13;</code>
       *
       * @return The endDate.
       */
      long getEndDate();

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       *
       * @return Whether the minVersion field is set.
       */
      boolean hasMinVersion();

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       *
       * @return The minVersion.
       */
      java.lang.String getMinVersion();

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       *
       * @return The bytes for minVersion.
       */
      com.google.protobuf.ByteString getMinVersionBytes();

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       *
       * @return Whether the maxVersion field is set.
       */
      boolean hasMaxVersion();

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       *
       * @return The maxVersion.
       */
      java.lang.String getMaxVersion();

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       *
       * @return The bytes for maxVersion.
       */
      com.google.protobuf.ByteString getMaxVersionBytes();

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       *
       * @return Whether the minOsVersion field is set.
       */
      boolean hasMinOsVersion();

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       *
       * @return The minOsVersion.
       */
      java.lang.String getMinOsVersion();

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       *
       * @return The bytes for minOsVersion.
       */
      com.google.protobuf.ByteString getMinOsVersionBytes();

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       *
       * @return Whether the maxOsVersion field is set.
       */
      boolean hasMaxOsVersion();

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       *
       * @return The maxOsVersion.
       */
      java.lang.String getMaxOsVersion();

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       *
       * @return The bytes for maxOsVersion.
       */
      com.google.protobuf.ByteString getMaxOsVersionBytes();

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @return A list containing the channel.
       */
      java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Channel>
          getChannelList();

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @return The count of channel.
       */
      int getChannelCount();

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @param index The index of the element to return.
       * @return The channel at the given index.
       */
      org.chromium.components.variations.StudyOuterClass.Study.Channel getChannel(int index);

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @return A list containing the platform.
       */
      java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Platform>
          getPlatformList();

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @return The count of platform.
       */
      int getPlatformCount();

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @param index The index of the element to return.
       * @return The platform at the given index.
       */
      org.chromium.components.variations.StudyOuterClass.Study.Platform getPlatform(int index);

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @return A list containing the locale.
       */
      java.util.List<java.lang.String> getLocaleList();

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @return The count of locale.
       */
      int getLocaleCount();

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @param index The index of the element to return.
       * @return The locale at the given index.
       */
      java.lang.String getLocale(int index);

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @param index The index of the element to return.
       * @return The locale at the given index.
       */
      com.google.protobuf.ByteString getLocaleBytes(int index);

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @return A list containing the excludeLocale.
       */
      java.util.List<java.lang.String> getExcludeLocaleList();

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @return The count of excludeLocale.
       */
      int getExcludeLocaleCount();

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeLocale at the given index.
       */
      java.lang.String getExcludeLocale(int index);

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeLocale at the given index.
       */
      com.google.protobuf.ByteString getExcludeLocaleBytes(int index);

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @return A list containing the formFactor.
       */
      java.util.List<org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
          getFormFactorList();

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @return The count of formFactor.
       */
      int getFormFactorCount();

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @param index The index of the element to return.
       * @return The formFactor at the given index.
       */
      org.chromium.components.variations.StudyOuterClass.Study.FormFactor getFormFactor(int index);

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @return A list containing the excludeFormFactor.
       */
      java.util.List<org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
          getExcludeFormFactorList();

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @return The count of excludeFormFactor.
       */
      int getExcludeFormFactorCount();

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeFormFactor at the given index.
       */
      org.chromium.components.variations.StudyOuterClass.Study.FormFactor getExcludeFormFactor(
          int index);

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @return A list containing the hardwareClass.
       */
      java.util.List<java.lang.String> getHardwareClassList();

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @return The count of hardwareClass.
       */
      int getHardwareClassCount();

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @param index The index of the element to return.
       * @return The hardwareClass at the given index.
       */
      java.lang.String getHardwareClass(int index);

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @param index The index of the element to return.
       * @return The hardwareClass at the given index.
       */
      com.google.protobuf.ByteString getHardwareClassBytes(int index);

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @return A list containing the excludeHardwareClass.
       */
      java.util.List<java.lang.String> getExcludeHardwareClassList();

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @return The count of excludeHardwareClass.
       */
      int getExcludeHardwareClassCount();

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeHardwareClass at the given index.
       */
      java.lang.String getExcludeHardwareClass(int index);

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeHardwareClass at the given index.
       */
      com.google.protobuf.ByteString getExcludeHardwareClassBytes(int index);

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @return A list containing the country.
       */
      java.util.List<java.lang.String> getCountryList();

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @return The count of country.
       */
      int getCountryCount();

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @param index The index of the element to return.
       * @return The country at the given index.
       */
      java.lang.String getCountry(int index);

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @param index The index of the element to return.
       * @return The country at the given index.
       */
      com.google.protobuf.ByteString getCountryBytes(int index);

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @return A list containing the excludeCountry.
       */
      java.util.List<java.lang.String> getExcludeCountryList();

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @return The count of excludeCountry.
       */
      int getExcludeCountryCount();

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeCountry at the given index.
       */
      java.lang.String getExcludeCountry(int index);

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeCountry at the given index.
       */
      com.google.protobuf.ByteString getExcludeCountryBytes(int index);

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to low-end devices only. This
       * is currently only supported on Android.
       * </pre>
       *
       * <code>optional bool is_low_end_device = 15;</code>
       *
       * @return Whether the isLowEndDevice field is set.
       */
      boolean hasIsLowEndDevice();

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to low-end devices only. This
       * is currently only supported on Android.
       * </pre>
       *
       * <code>optional bool is_low_end_device = 15;</code>
       *
       * @return The isLowEndDevice.
       */
      boolean getIsLowEndDevice();

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to enterprise or non-enterprise
       * only. If omitted, the config applies to both groups.
       * - On windows and mac, machines on a domain network are considered
       *   enterprise.
       * - On chromeOS, registered mode determines enterprise status.
       * - Android, iOS, and linux consider all clients as non-enterprise.
       * </pre>
       *
       * <code>optional bool is_enterprise = 18;</code>
       *
       * @return Whether the isEnterprise field is set.
       */
      boolean hasIsEnterprise();

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to enterprise or non-enterprise
       * only. If omitted, the config applies to both groups.
       * - On windows and mac, machines on a domain network are considered
       *   enterprise.
       * - On chromeOS, registered mode determines enterprise status.
       * - Android, iOS, and linux consider all clients as non-enterprise.
       * </pre>
       *
       * <code>optional bool is_enterprise = 18;</code>
       *
       * @return The isEnterprise.
       */
      boolean getIsEnterprise();

      /**
       *
       *
       * <pre>
       * Specifies the restrictions applied by the "ChromeVariations" policy to
       * the study. See the definition of the PolicyRestriction enum for details.
       * </pre>
       *
       * <code>
       * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
       * </code>
       *
       * @return Whether the policyRestriction field is set.
       */
      boolean hasPolicyRestriction();

      /**
       *
       *
       * <pre>
       * Specifies the restrictions applied by the "ChromeVariations" policy to
       * the study. See the definition of the PolicyRestriction enum for details.
       * </pre>
       *
       * <code>
       * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
       * </code>
       *
       * @return The policyRestriction.
       */
      org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction
          getPolicyRestriction();

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @return A list containing the cpuArchitecture.
       */
      java.util.List<org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
          getCpuArchitectureList();

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @return The count of cpuArchitecture.
       */
      int getCpuArchitectureCount();

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @param index The index of the element to return.
       * @return The cpuArchitecture at the given index.
       */
      org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture getCpuArchitecture(
          int index);

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @return A list containing the excludeCpuArchitecture.
       */
      java.util.List<org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
          getExcludeCpuArchitectureList();

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @return The count of excludeCpuArchitecture.
       */
      int getExcludeCpuArchitectureCount();

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeCpuArchitecture at the given index.
       */
      org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
          getExcludeCpuArchitecture(int index);

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @return A list containing the googleGroup.
       */
      java.util.List<java.lang.Long> getGoogleGroupList();

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @return The count of googleGroup.
       */
      int getGoogleGroupCount();

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @param index The index of the element to return.
       * @return The googleGroup at the given index.
       */
      long getGoogleGroup(int index);

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @return A list containing the excludeGoogleGroup.
       */
      java.util.List<java.lang.Long> getExcludeGoogleGroupList();

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @return The count of excludeGoogleGroup.
       */
      int getExcludeGoogleGroupCount();

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @param index The index of the element to return.
       * @return The excludeGoogleGroup at the given index.
       */
      long getExcludeGoogleGroup(int index);
    }

    /**
     *
     *
     * <pre>
     * Filtering criteria specifying whether this study is applicable to a given
     * Chrome instance.
     * Next tag: 24
     * </pre>
     *
     * Protobuf type {@code variations.Study.Filter}
     */
    public static final class Filter
        extends com.google.protobuf.GeneratedMessageLite<Filter, Filter.Builder>
        implements
        // @@protoc_insertion_point(message_implements:variations.Study.Filter)
        FilterOrBuilder {
      private Filter() {
        minVersion_ = "";
        maxVersion_ = "";
        minOsVersion_ = "";
        maxOsVersion_ = "";
        channel_ = emptyIntList();
        platform_ = emptyIntList();
        locale_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
        excludeLocale_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
        formFactor_ = emptyIntList();
        excludeFormFactor_ = emptyIntList();
        hardwareClass_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
        excludeHardwareClass_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
        country_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
        excludeCountry_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
        cpuArchitecture_ = emptyIntList();
        excludeCpuArchitecture_ = emptyIntList();
        googleGroup_ = emptyLongList();
        excludeGoogleGroup_ = emptyLongList();
      }

      private int bitField0_;
      public static final int START_DATE_FIELD_NUMBER = 1;
      private long startDate_;

      /**
       *
       *
       * <pre>
       * The start date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 start_date = 1;</code>
       *
       * @return Whether the startDate field is set.
       */
      @java.lang.Override
      public boolean hasStartDate() {
        return ((bitField0_ & 0x00000001) != 0);
      }

      /**
       *
       *
       * <pre>
       * The start date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 start_date = 1;</code>
       *
       * @return The startDate.
       */
      @java.lang.Override
      public long getStartDate() {
        return startDate_;
      }

      /**
       *
       *
       * <pre>
       * The start date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 start_date = 1;</code>
       *
       * @param value The startDate to set.
       */
      private void setStartDate(long value) {
        bitField0_ |= 0x00000001;
        startDate_ = value;
      }

      /**
       *
       *
       * <pre>
       * The start date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 start_date = 1;</code>
       */
      private void clearStartDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startDate_ = 0L;
      }

      public static final int END_DATE_FIELD_NUMBER = 13;
      private long endDate_;

      /**
       *
       *
       * <pre>
       * The end date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * Mutually exclusive with expiry_date. The difference between end_date and
       * expiry_date is that, when end_date is past, the field trial will not be
       * created. When expiry_date is past, the trial is still created, but will
       * be disabled, causing it to select its default group.
       * </pre>
       *
       * <code>optional int64 end_date = 13;</code>
       *
       * @return Whether the endDate field is set.
       */
      @java.lang.Override
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       *
       *
       * <pre>
       * The end date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * Mutually exclusive with expiry_date. The difference between end_date and
       * expiry_date is that, when end_date is past, the field trial will not be
       * created. When expiry_date is past, the trial is still created, but will
       * be disabled, causing it to select its default group.
       * </pre>
       *
       * <code>optional int64 end_date = 13;</code>
       *
       * @return The endDate.
       */
      @java.lang.Override
      public long getEndDate() {
        return endDate_;
      }

      /**
       *
       *
       * <pre>
       * The end date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * Mutually exclusive with expiry_date. The difference between end_date and
       * expiry_date is that, when end_date is past, the field trial will not be
       * created. When expiry_date is past, the trial is still created, but will
       * be disabled, causing it to select its default group.
       * </pre>
       *
       * <code>optional int64 end_date = 13;</code>
       *
       * @param value The endDate to set.
       */
      private void setEndDate(long value) {
        bitField0_ |= 0x00000002;
        endDate_ = value;
      }

      /**
       *
       *
       * <pre>
       * The end date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * Mutually exclusive with expiry_date. The difference between end_date and
       * expiry_date is that, when end_date is past, the field trial will not be
       * created. When expiry_date is past, the trial is still created, but will
       * be disabled, causing it to select its default group.
       * </pre>
       *
       * <code>optional int64 end_date = 13;</code>
       */
      private void clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endDate_ = 0L;
      }

      public static final int MIN_VERSION_FIELD_NUMBER = 2;
      private java.lang.String minVersion_;

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       *
       * @return Whether the minVersion field is set.
       */
      @java.lang.Override
      public boolean hasMinVersion() {
        return ((bitField0_ & 0x00000004) != 0);
      }

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       *
       * @return The minVersion.
       */
      @java.lang.Override
      public java.lang.String getMinVersion() {
        return minVersion_;
      }

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       *
       * @return The bytes for minVersion.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMinVersionBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(minVersion_);
      }

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       *
       * @param value The minVersion to set.
       */
      private void setMinVersion(java.lang.String value) {
        value.getClass();
        bitField0_ |= 0x00000004;
        minVersion_ = value;
      }

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       */
      private void clearMinVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        minVersion_ = getDefaultInstance().getMinVersion();
      }

      /**
       *
       *
       * <pre>
       * The minimum Chrome version for this study, allowing a trailing '*'
       * character for pattern matching. Inclusive. (To check for a match, iterate
       * over each component checking &gt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: "17.0.963.46", "17.0.963.*", "17.*"
       * </pre>
       *
       * <code>optional string min_version = 2;</code>
       *
       * @param value The bytes for minVersion to set.
       */
      private void setMinVersionBytes(com.google.protobuf.ByteString value) {
        minVersion_ = value.toStringUtf8();
        bitField0_ |= 0x00000004;
      }

      public static final int MAX_VERSION_FIELD_NUMBER = 3;
      private java.lang.String maxVersion_;

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       *
       * @return Whether the maxVersion field is set.
       */
      @java.lang.Override
      public boolean hasMaxVersion() {
        return ((bitField0_ & 0x00000008) != 0);
      }

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       *
       * @return The maxVersion.
       */
      @java.lang.Override
      public java.lang.String getMaxVersion() {
        return maxVersion_;
      }

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       *
       * @return The bytes for maxVersion.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMaxVersionBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(maxVersion_);
      }

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       *
       * @param value The maxVersion to set.
       */
      private void setMaxVersion(java.lang.String value) {
        value.getClass();
        bitField0_ |= 0x00000008;
        maxVersion_ = value;
      }

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       */
      private void clearMaxVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxVersion_ = getDefaultInstance().getMaxVersion();
      }

      /**
       *
       *
       * <pre>
       * The maximum Chrome version for this study; same formatting as
       * |min_version| above. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no maximum version.
       * Ex: "19.*"
       * </pre>
       *
       * <code>optional string max_version = 3;</code>
       *
       * @param value The bytes for maxVersion to set.
       */
      private void setMaxVersionBytes(com.google.protobuf.ByteString value) {
        maxVersion_ = value.toStringUtf8();
        bitField0_ |= 0x00000008;
      }

      public static final int MIN_OS_VERSION_FIELD_NUMBER = 16;
      private java.lang.String minOsVersion_;

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       *
       * @return Whether the minOsVersion field is set.
       */
      @java.lang.Override
      public boolean hasMinOsVersion() {
        return ((bitField0_ & 0x00000010) != 0);
      }

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       *
       * @return The minOsVersion.
       */
      @java.lang.Override
      public java.lang.String getMinOsVersion() {
        return minOsVersion_;
      }

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       *
       * @return The bytes for minOsVersion.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMinOsVersionBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(minOsVersion_);
      }

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       *
       * @param value The minOsVersion to set.
       */
      private void setMinOsVersion(java.lang.String value) {
        value.getClass();
        bitField0_ |= 0x00000010;
        minOsVersion_ = value;
      }

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       */
      private void clearMinOsVersion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        minOsVersion_ = getDefaultInstance().getMinOsVersion();
      }

      /**
       *
       *
       * <pre>
       * The minimum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &gt;= until a * or end of string is reached.) OS versions
       * are sanitized into a list of digits separated by dots like so:
       *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
       *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
       *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
       * Optional - if not specified, there is no minimum version.
       * </pre>
       *
       * <code>optional string min_os_version = 16;</code>
       *
       * @param value The bytes for minOsVersion to set.
       */
      private void setMinOsVersionBytes(com.google.protobuf.ByteString value) {
        minOsVersion_ = value.toStringUtf8();
        bitField0_ |= 0x00000010;
      }

      public static final int MAX_OS_VERSION_FIELD_NUMBER = 17;
      private java.lang.String maxOsVersion_;

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       *
       * @return Whether the maxOsVersion field is set.
       */
      @java.lang.Override
      public boolean hasMaxOsVersion() {
        return ((bitField0_ & 0x00000020) != 0);
      }

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       *
       * @return The maxOsVersion.
       */
      @java.lang.Override
      public java.lang.String getMaxOsVersion() {
        return maxOsVersion_;
      }

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       *
       * @return The bytes for maxOsVersion.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMaxOsVersionBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(maxOsVersion_);
      }

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       *
       * @param value The maxOsVersion to set.
       */
      private void setMaxOsVersion(java.lang.String value) {
        value.getClass();
        bitField0_ |= 0x00000020;
        maxOsVersion_ = value;
      }

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       */
      private void clearMaxOsVersion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxOsVersion_ = getDefaultInstance().getMaxOsVersion();
      }

      /**
       *
       *
       * <pre>
       * The maximum OS version for this study, allowing a trailing '*' character
       * for pattern matching. Inclusive. (To check for a match, iterate over each
       * component checking &lt;= until a * or end of string is reached.)
       * Optional - if not specified, there is no minimum version.
       * Ex: See |min_os_version| for details.
       * </pre>
       *
       * <code>optional string max_os_version = 17;</code>
       *
       * @param value The bytes for maxOsVersion to set.
       */
      private void setMaxOsVersionBytes(com.google.protobuf.ByteString value) {
        maxOsVersion_ = value.toStringUtf8();
        bitField0_ |= 0x00000020;
      }

      public static final int CHANNEL_FIELD_NUMBER = 4;
      private com.google.protobuf.Internal.IntList channel_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, org.chromium.components.variations.StudyOuterClass.Study.Channel>
          channel_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer,
                  org.chromium.components.variations.StudyOuterClass.Study.Channel>() {
                @java.lang.Override
                public org.chromium.components.variations.StudyOuterClass.Study.Channel convert(
                    java.lang.Integer from) {
                  org.chromium.components.variations.StudyOuterClass.Study.Channel result =
                      org.chromium.components.variations.StudyOuterClass.Study.Channel.forNumber(
                          from);
                  return result == null
                      ? org.chromium.components.variations.StudyOuterClass.Study.Channel.UNKNOWN
                      : result;
                }
              };

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @return A list containing the channel.
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Channel>
          getChannelList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.chromium.components.variations.StudyOuterClass.Study.Channel>(
            channel_, channel_converter_);
      }

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @return The count of channel.
       */
      @java.lang.Override
      public int getChannelCount() {
        return channel_.size();
      }

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @param index The index of the element to return.
       * @return The channel at the given index.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Channel getChannel(
          int index) {
        return channel_converter_.convert(channel_.getInt(index));
      }

      private void ensureChannelIsMutable() {
        com.google.protobuf.Internal.IntList tmp = channel_;
        if (!tmp.isModifiable()) {
          channel_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @param index The index to set the value at.
       * @param value The channel to set.
       */
      private void setChannel(
          int index, org.chromium.components.variations.StudyOuterClass.Study.Channel value) {
        value.getClass();
        ensureChannelIsMutable();
        channel_.setInt(index, value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @param value The channel to add.
       */
      private void addChannel(
          org.chromium.components.variations.StudyOuterClass.Study.Channel value) {
        value.getClass();
        ensureChannelIsMutable();
        channel_.addInt(value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       *
       * @param values The channel to add.
       */
      private void addAllChannel(
          java.lang.Iterable<
                  ? extends org.chromium.components.variations.StudyOuterClass.Study.Channel>
              values) {
        ensureChannelIsMutable();
        for (org.chromium.components.variations.StudyOuterClass.Study.Channel value : values) {
          channel_.addInt(value.getNumber());
        }
      }

      /**
       *
       *
       * <pre>
       * List of channels that will receive this study. If omitted, the study
       * applies to all channels.
       * Ex: [BETA, STABLE]
       * </pre>
       *
       * <code>repeated .variations.Study.Channel channel = 4;</code>
       */
      private void clearChannel() {
        channel_ = emptyIntList();
      }

      public static final int PLATFORM_FIELD_NUMBER = 5;
      private com.google.protobuf.Internal.IntList platform_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, org.chromium.components.variations.StudyOuterClass.Study.Platform>
          platform_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer,
                  org.chromium.components.variations.StudyOuterClass.Study.Platform>() {
                @java.lang.Override
                public org.chromium.components.variations.StudyOuterClass.Study.Platform convert(
                    java.lang.Integer from) {
                  org.chromium.components.variations.StudyOuterClass.Study.Platform result =
                      org.chromium.components.variations.StudyOuterClass.Study.Platform.forNumber(
                          from);
                  return result == null
                      ? org.chromium.components.variations.StudyOuterClass.Study.Platform
                          .PLATFORM_WINDOWS
                      : result;
                }
              };

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @return A list containing the platform.
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Platform>
          getPlatformList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.chromium.components.variations.StudyOuterClass.Study.Platform>(
            platform_, platform_converter_);
      }

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @return The count of platform.
       */
      @java.lang.Override
      public int getPlatformCount() {
        return platform_.size();
      }

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @param index The index of the element to return.
       * @return The platform at the given index.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Platform getPlatform(
          int index) {
        return platform_converter_.convert(platform_.getInt(index));
      }

      private void ensurePlatformIsMutable() {
        com.google.protobuf.Internal.IntList tmp = platform_;
        if (!tmp.isModifiable()) {
          platform_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @param index The index to set the value at.
       * @param value The platform to set.
       */
      private void setPlatform(
          int index, org.chromium.components.variations.StudyOuterClass.Study.Platform value) {
        value.getClass();
        ensurePlatformIsMutable();
        platform_.setInt(index, value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @param value The platform to add.
       */
      private void addPlatform(
          org.chromium.components.variations.StudyOuterClass.Study.Platform value) {
        value.getClass();
        ensurePlatformIsMutable();
        platform_.addInt(value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       *
       * @param values The platform to add.
       */
      private void addAllPlatform(
          java.lang.Iterable<
                  ? extends org.chromium.components.variations.StudyOuterClass.Study.Platform>
              values) {
        ensurePlatformIsMutable();
        for (org.chromium.components.variations.StudyOuterClass.Study.Platform value : values) {
          platform_.addInt(value.getNumber());
        }
      }

      /**
       *
       *
       * <pre>
       * List of platforms that will receive this study. If omitted, the study
       * applies to all platforms.
       * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
       * </pre>
       *
       * <code>repeated .variations.Study.Platform platform = 5;</code>
       */
      private void clearPlatform() {
        platform_ = emptyIntList();
      }

      public static final int LOCALE_FIELD_NUMBER = 6;
      private com.google.protobuf.Internal.ProtobufList<java.lang.String> locale_;

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @return A list containing the locale.
       */
      @java.lang.Override
      public java.util.List<java.lang.String> getLocaleList() {
        return locale_;
      }

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @return The count of locale.
       */
      @java.lang.Override
      public int getLocaleCount() {
        return locale_.size();
      }

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @param index The index of the element to return.
       * @return The locale at the given index.
       */
      @java.lang.Override
      public java.lang.String getLocale(int index) {
        return locale_.get(index);
      }

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the locale at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getLocaleBytes(int index) {
        return com.google.protobuf.ByteString.copyFromUtf8(locale_.get(index));
      }

      private void ensureLocaleIsMutable() {
        com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = locale_;
        if (!tmp.isModifiable()) {
          locale_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @param index The index to set the value at.
       * @param value The locale to set.
       */
      private void setLocale(int index, java.lang.String value) {
        value.getClass();
        ensureLocaleIsMutable();
        locale_.set(index, value);
      }

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @param value The locale to add.
       */
      private void addLocale(java.lang.String value) {
        value.getClass();
        ensureLocaleIsMutable();
        locale_.add(value);
      }

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @param values The locale to add.
       */
      private void addAllLocale(java.lang.Iterable<java.lang.String> values) {
        ensureLocaleIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, locale_);
      }

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       */
      private void clearLocale() {
        locale_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      }

      /**
       *
       *
       * <pre>
       * List of locales that will receive this study. If omitted, the study
       * applies to all locales, unless |exclude_locale| is specified. Mutually
       * exclusive with |exclude_locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string locale = 6;</code>
       *
       * @param value The bytes of the locale to add.
       */
      private void addLocaleBytes(com.google.protobuf.ByteString value) {
        ensureLocaleIsMutable();
        locale_.add(value.toStringUtf8());
      }

      public static final int EXCLUDE_LOCALE_FIELD_NUMBER = 12;
      private com.google.protobuf.Internal.ProtobufList<java.lang.String> excludeLocale_;

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @return A list containing the excludeLocale.
       */
      @java.lang.Override
      public java.util.List<java.lang.String> getExcludeLocaleList() {
        return excludeLocale_;
      }

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @return The count of excludeLocale.
       */
      @java.lang.Override
      public int getExcludeLocaleCount() {
        return excludeLocale_.size();
      }

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeLocale at the given index.
       */
      @java.lang.Override
      public java.lang.String getExcludeLocale(int index) {
        return excludeLocale_.get(index);
      }

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the excludeLocale at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getExcludeLocaleBytes(int index) {
        return com.google.protobuf.ByteString.copyFromUtf8(excludeLocale_.get(index));
      }

      private void ensureExcludeLocaleIsMutable() {
        com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = excludeLocale_;
        if (!tmp.isModifiable()) {
          excludeLocale_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @param index The index to set the value at.
       * @param value The excludeLocale to set.
       */
      private void setExcludeLocale(int index, java.lang.String value) {
        value.getClass();
        ensureExcludeLocaleIsMutable();
        excludeLocale_.set(index, value);
      }

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @param value The excludeLocale to add.
       */
      private void addExcludeLocale(java.lang.String value) {
        value.getClass();
        ensureExcludeLocaleIsMutable();
        excludeLocale_.add(value);
      }

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @param values The excludeLocale to add.
       */
      private void addAllExcludeLocale(java.lang.Iterable<java.lang.String> values) {
        ensureExcludeLocaleIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, excludeLocale_);
      }

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       */
      private void clearExcludeLocale() {
        excludeLocale_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      }

      /**
       *
       *
       * <pre>
       * List of locales that will be excluded from this study. If omitted, the
       * study applies to all locales unless |locale| is specified. Mutually
       * exclusive with |locale|.
       * Ex: ["en-US", "en-CA"]
       * </pre>
       *
       * <code>repeated string exclude_locale = 12;</code>
       *
       * @param value The bytes of the excludeLocale to add.
       */
      private void addExcludeLocaleBytes(com.google.protobuf.ByteString value) {
        ensureExcludeLocaleIsMutable();
        excludeLocale_.add(value.toStringUtf8());
      }

      public static final int FORM_FACTOR_FIELD_NUMBER = 7;
      private com.google.protobuf.Internal.IntList formFactor_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer,
              org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
          formFactor_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer,
                  org.chromium.components.variations.StudyOuterClass.Study.FormFactor>() {
                @java.lang.Override
                public org.chromium.components.variations.StudyOuterClass.Study.FormFactor convert(
                    java.lang.Integer from) {
                  org.chromium.components.variations.StudyOuterClass.Study.FormFactor result =
                      org.chromium.components.variations.StudyOuterClass.Study.FormFactor.forNumber(
                          from);
                  return result == null
                      ? org.chromium.components.variations.StudyOuterClass.Study.FormFactor.DESKTOP
                      : result;
                }
              };

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @return A list containing the formFactor.
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
          getFormFactorList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.chromium.components.variations.StudyOuterClass.Study.FormFactor>(
            formFactor_, formFactor_converter_);
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @return The count of formFactor.
       */
      @java.lang.Override
      public int getFormFactorCount() {
        return formFactor_.size();
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @param index The index of the element to return.
       * @return The formFactor at the given index.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.FormFactor getFormFactor(
          int index) {
        return formFactor_converter_.convert(formFactor_.getInt(index));
      }

      private void ensureFormFactorIsMutable() {
        com.google.protobuf.Internal.IntList tmp = formFactor_;
        if (!tmp.isModifiable()) {
          formFactor_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @param index The index to set the value at.
       * @param value The formFactor to set.
       */
      private void setFormFactor(
          int index, org.chromium.components.variations.StudyOuterClass.Study.FormFactor value) {
        value.getClass();
        ensureFormFactorIsMutable();
        formFactor_.setInt(index, value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @param value The formFactor to add.
       */
      private void addFormFactor(
          org.chromium.components.variations.StudyOuterClass.Study.FormFactor value) {
        value.getClass();
        ensureFormFactorIsMutable();
        formFactor_.addInt(value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       *
       * @param values The formFactor to add.
       */
      private void addAllFormFactor(
          java.lang.Iterable<
                  ? extends org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
              values) {
        ensureFormFactorIsMutable();
        for (org.chromium.components.variations.StudyOuterClass.Study.FormFactor value : values) {
          formFactor_.addInt(value.getNumber());
        }
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will receive this study. If omitted, the study
       * applies to all form factors, unless |exclude_form_factor| is specified.
       * Mutually exclusive with |exclude_form_factor|.
       * Ex: [PHONE, TABLET]
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
       */
      private void clearFormFactor() {
        formFactor_ = emptyIntList();
      }

      public static final int EXCLUDE_FORM_FACTOR_FIELD_NUMBER = 14;
      private com.google.protobuf.Internal.IntList excludeFormFactor_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer,
              org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
          excludeFormFactor_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer,
                  org.chromium.components.variations.StudyOuterClass.Study.FormFactor>() {
                @java.lang.Override
                public org.chromium.components.variations.StudyOuterClass.Study.FormFactor convert(
                    java.lang.Integer from) {
                  org.chromium.components.variations.StudyOuterClass.Study.FormFactor result =
                      org.chromium.components.variations.StudyOuterClass.Study.FormFactor.forNumber(
                          from);
                  return result == null
                      ? org.chromium.components.variations.StudyOuterClass.Study.FormFactor.DESKTOP
                      : result;
                }
              };

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @return A list containing the excludeFormFactor.
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
          getExcludeFormFactorList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.chromium.components.variations.StudyOuterClass.Study.FormFactor>(
            excludeFormFactor_, excludeFormFactor_converter_);
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @return The count of excludeFormFactor.
       */
      @java.lang.Override
      public int getExcludeFormFactorCount() {
        return excludeFormFactor_.size();
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeFormFactor at the given index.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.FormFactor
          getExcludeFormFactor(int index) {
        return excludeFormFactor_converter_.convert(excludeFormFactor_.getInt(index));
      }

      private void ensureExcludeFormFactorIsMutable() {
        com.google.protobuf.Internal.IntList tmp = excludeFormFactor_;
        if (!tmp.isModifiable()) {
          excludeFormFactor_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @param index The index to set the value at.
       * @param value The excludeFormFactor to set.
       */
      private void setExcludeFormFactor(
          int index, org.chromium.components.variations.StudyOuterClass.Study.FormFactor value) {
        value.getClass();
        ensureExcludeFormFactorIsMutable();
        excludeFormFactor_.setInt(index, value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @param value The excludeFormFactor to add.
       */
      private void addExcludeFormFactor(
          org.chromium.components.variations.StudyOuterClass.Study.FormFactor value) {
        value.getClass();
        ensureExcludeFormFactorIsMutable();
        excludeFormFactor_.addInt(value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       *
       * @param values The excludeFormFactor to add.
       */
      private void addAllExcludeFormFactor(
          java.lang.Iterable<
                  ? extends org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
              values) {
        ensureExcludeFormFactorIsMutable();
        for (org.chromium.components.variations.StudyOuterClass.Study.FormFactor value : values) {
          excludeFormFactor_.addInt(value.getNumber());
        }
      }

      /**
       *
       *
       * <pre>
       * List of form factors that will be excluded from this study. If omitted,
       * the study applies to all form factors unless |form_factor| is specified.
       * Mutually exclusive with |form_factor|.
       * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
       * </pre>
       *
       * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
       */
      private void clearExcludeFormFactor() {
        excludeFormFactor_ = emptyIntList();
      }

      public static final int HARDWARE_CLASS_FIELD_NUMBER = 8;
      private com.google.protobuf.Internal.ProtobufList<java.lang.String> hardwareClass_;

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @return A list containing the hardwareClass.
       */
      @java.lang.Override
      public java.util.List<java.lang.String> getHardwareClassList() {
        return hardwareClass_;
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @return The count of hardwareClass.
       */
      @java.lang.Override
      public int getHardwareClassCount() {
        return hardwareClass_.size();
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @param index The index of the element to return.
       * @return The hardwareClass at the given index.
       */
      @java.lang.Override
      public java.lang.String getHardwareClass(int index) {
        return hardwareClass_.get(index);
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the hardwareClass at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHardwareClassBytes(int index) {
        return com.google.protobuf.ByteString.copyFromUtf8(hardwareClass_.get(index));
      }

      private void ensureHardwareClassIsMutable() {
        com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = hardwareClass_;
        if (!tmp.isModifiable()) {
          hardwareClass_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @param index The index to set the value at.
       * @param value The hardwareClass to set.
       */
      private void setHardwareClass(int index, java.lang.String value) {
        value.getClass();
        ensureHardwareClassIsMutable();
        hardwareClass_.set(index, value);
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @param value The hardwareClass to add.
       */
      private void addHardwareClass(java.lang.String value) {
        value.getClass();
        ensureHardwareClassIsMutable();
        hardwareClass_.add(value);
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @param values The hardwareClass to add.
       */
      private void addAllHardwareClass(java.lang.Iterable<java.lang.String> values) {
        ensureHardwareClassIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, hardwareClass_);
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       */
      private void clearHardwareClass() {
        hardwareClass_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will receive this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |exclude_hardware_class| is specified. Mutually exclusive with
       * |exclude_hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string hardware_class = 8;</code>
       *
       * @param value The bytes of the hardwareClass to add.
       */
      private void addHardwareClassBytes(com.google.protobuf.ByteString value) {
        ensureHardwareClassIsMutable();
        hardwareClass_.add(value.toStringUtf8());
      }

      public static final int EXCLUDE_HARDWARE_CLASS_FIELD_NUMBER = 9;
      private com.google.protobuf.Internal.ProtobufList<java.lang.String> excludeHardwareClass_;

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @return A list containing the excludeHardwareClass.
       */
      @java.lang.Override
      public java.util.List<java.lang.String> getExcludeHardwareClassList() {
        return excludeHardwareClass_;
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @return The count of excludeHardwareClass.
       */
      @java.lang.Override
      public int getExcludeHardwareClassCount() {
        return excludeHardwareClass_.size();
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeHardwareClass at the given index.
       */
      @java.lang.Override
      public java.lang.String getExcludeHardwareClass(int index) {
        return excludeHardwareClass_.get(index);
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the excludeHardwareClass at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getExcludeHardwareClassBytes(int index) {
        return com.google.protobuf.ByteString.copyFromUtf8(excludeHardwareClass_.get(index));
      }

      private void ensureExcludeHardwareClassIsMutable() {
        com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = excludeHardwareClass_;
        if (!tmp.isModifiable()) {
          excludeHardwareClass_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @param index The index to set the value at.
       * @param value The excludeHardwareClass to set.
       */
      private void setExcludeHardwareClass(int index, java.lang.String value) {
        value.getClass();
        ensureExcludeHardwareClassIsMutable();
        excludeHardwareClass_.set(index, value);
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @param value The excludeHardwareClass to add.
       */
      private void addExcludeHardwareClass(java.lang.String value) {
        value.getClass();
        ensureExcludeHardwareClassIsMutable();
        excludeHardwareClass_.add(value);
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @param values The excludeHardwareClass to add.
       */
      private void addAllExcludeHardwareClass(java.lang.Iterable<java.lang.String> values) {
        ensureExcludeHardwareClassIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, excludeHardwareClass_);
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       */
      private void clearExcludeHardwareClass() {
        excludeHardwareClass_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      }

      /**
       *
       *
       * <pre>
       * List of hardware classes that will be excluded in this study.
       * This supports Chrome OS and as of M77, Android.
       * Starting with Chrome M67, this does a case insensitive match on the same
       * hardware class field that is reported to UMA in the SystemProfileProto's
       * |hardware.hardware_class| field.
       * Older versions did a case sensitive substring comparison, which was
       * problematic for short hardware classes like "eve" that existed as
       * substrings of other longer ones.
       * If omitted, the study applies to all hardware classes unless
       * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
       * Ex: ["veyron_minnie", "daisy"]
       * </pre>
       *
       * <code>repeated string exclude_hardware_class = 9;</code>
       *
       * @param value The bytes of the excludeHardwareClass to add.
       */
      private void addExcludeHardwareClassBytes(com.google.protobuf.ByteString value) {
        ensureExcludeHardwareClassIsMutable();
        excludeHardwareClass_.add(value.toStringUtf8());
      }

      public static final int COUNTRY_FIELD_NUMBER = 10;
      private com.google.protobuf.Internal.ProtobufList<java.lang.String> country_;

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @return A list containing the country.
       */
      @java.lang.Override
      public java.util.List<java.lang.String> getCountryList() {
        return country_;
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @return The count of country.
       */
      @java.lang.Override
      public int getCountryCount() {
        return country_.size();
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @param index The index of the element to return.
       * @return The country at the given index.
       */
      @java.lang.Override
      public java.lang.String getCountry(int index) {
        return country_.get(index);
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the country at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCountryBytes(int index) {
        return com.google.protobuf.ByteString.copyFromUtf8(country_.get(index));
      }

      private void ensureCountryIsMutable() {
        com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = country_;
        if (!tmp.isModifiable()) {
          country_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @param index The index to set the value at.
       * @param value The country to set.
       */
      private void setCountry(int index, java.lang.String value) {
        value.getClass();
        ensureCountryIsMutable();
        country_.set(index, value);
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @param value The country to add.
       */
      private void addCountry(java.lang.String value) {
        value.getClass();
        ensureCountryIsMutable();
        country_.add(value);
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @param values The country to add.
       */
      private void addAllCountry(java.lang.Iterable<java.lang.String> values) {
        ensureCountryIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, country_);
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       */
      private void clearCountry() {
        country_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
       * study. If omitted, the study applies to all countries unless
       * |exclude_country| is specified. Mutually exclusive with
       * |exclude_country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string country = 10;</code>
       *
       * @param value The bytes of the country to add.
       */
      private void addCountryBytes(com.google.protobuf.ByteString value) {
        ensureCountryIsMutable();
        country_.add(value.toStringUtf8());
      }

      public static final int EXCLUDE_COUNTRY_FIELD_NUMBER = 11;
      private com.google.protobuf.Internal.ProtobufList<java.lang.String> excludeCountry_;

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @return A list containing the excludeCountry.
       */
      @java.lang.Override
      public java.util.List<java.lang.String> getExcludeCountryList() {
        return excludeCountry_;
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @return The count of excludeCountry.
       */
      @java.lang.Override
      public int getExcludeCountryCount() {
        return excludeCountry_.size();
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeCountry at the given index.
       */
      @java.lang.Override
      public java.lang.String getExcludeCountry(int index) {
        return excludeCountry_.get(index);
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the excludeCountry at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getExcludeCountryBytes(int index) {
        return com.google.protobuf.ByteString.copyFromUtf8(excludeCountry_.get(index));
      }

      private void ensureExcludeCountryIsMutable() {
        com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp = excludeCountry_;
        if (!tmp.isModifiable()) {
          excludeCountry_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @param index The index to set the value at.
       * @param value The excludeCountry to set.
       */
      private void setExcludeCountry(int index, java.lang.String value) {
        value.getClass();
        ensureExcludeCountryIsMutable();
        excludeCountry_.set(index, value);
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @param value The excludeCountry to add.
       */
      private void addExcludeCountry(java.lang.String value) {
        value.getClass();
        ensureExcludeCountryIsMutable();
        excludeCountry_.add(value);
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @param values The excludeCountry to add.
       */
      private void addAllExcludeCountry(java.lang.Iterable<java.lang.String> values) {
        ensureExcludeCountryIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, excludeCountry_);
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       */
      private void clearExcludeCountry() {
        excludeCountry_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      }

      /**
       *
       *
       * <pre>
       * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
       * from this study. If omitted, the study applies to all countries unless
       * |country| is specified. Mutually exclusive with |country|.
       * Ex: ["in", "us"]
       * </pre>
       *
       * <code>repeated string exclude_country = 11;</code>
       *
       * @param value The bytes of the excludeCountry to add.
       */
      private void addExcludeCountryBytes(com.google.protobuf.ByteString value) {
        ensureExcludeCountryIsMutable();
        excludeCountry_.add(value.toStringUtf8());
      }

      public static final int IS_LOW_END_DEVICE_FIELD_NUMBER = 15;
      private boolean isLowEndDevice_;

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to low-end devices only. This
       * is currently only supported on Android.
       * </pre>
       *
       * <code>optional bool is_low_end_device = 15;</code>
       *
       * @return Whether the isLowEndDevice field is set.
       */
      @java.lang.Override
      public boolean hasIsLowEndDevice() {
        return ((bitField0_ & 0x00000040) != 0);
      }

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to low-end devices only. This
       * is currently only supported on Android.
       * </pre>
       *
       * <code>optional bool is_low_end_device = 15;</code>
       *
       * @return The isLowEndDevice.
       */
      @java.lang.Override
      public boolean getIsLowEndDevice() {
        return isLowEndDevice_;
      }

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to low-end devices only. This
       * is currently only supported on Android.
       * </pre>
       *
       * <code>optional bool is_low_end_device = 15;</code>
       *
       * @param value The isLowEndDevice to set.
       */
      private void setIsLowEndDevice(boolean value) {
        bitField0_ |= 0x00000040;
        isLowEndDevice_ = value;
      }

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to low-end devices only. This
       * is currently only supported on Android.
       * </pre>
       *
       * <code>optional bool is_low_end_device = 15;</code>
       */
      private void clearIsLowEndDevice() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isLowEndDevice_ = false;
      }

      public static final int IS_ENTERPRISE_FIELD_NUMBER = 18;
      private boolean isEnterprise_;

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to enterprise or non-enterprise
       * only. If omitted, the config applies to both groups.
       * - On windows and mac, machines on a domain network are considered
       *   enterprise.
       * - On chromeOS, registered mode determines enterprise status.
       * - Android, iOS, and linux consider all clients as non-enterprise.
       * </pre>
       *
       * <code>optional bool is_enterprise = 18;</code>
       *
       * @return Whether the isEnterprise field is set.
       */
      @java.lang.Override
      public boolean hasIsEnterprise() {
        return ((bitField0_ & 0x00000080) != 0);
      }

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to enterprise or non-enterprise
       * only. If omitted, the config applies to both groups.
       * - On windows and mac, machines on a domain network are considered
       *   enterprise.
       * - On chromeOS, registered mode determines enterprise status.
       * - Android, iOS, and linux consider all clients as non-enterprise.
       * </pre>
       *
       * <code>optional bool is_enterprise = 18;</code>
       *
       * @return The isEnterprise.
       */
      @java.lang.Override
      public boolean getIsEnterprise() {
        return isEnterprise_;
      }

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to enterprise or non-enterprise
       * only. If omitted, the config applies to both groups.
       * - On windows and mac, machines on a domain network are considered
       *   enterprise.
       * - On chromeOS, registered mode determines enterprise status.
       * - Android, iOS, and linux consider all clients as non-enterprise.
       * </pre>
       *
       * <code>optional bool is_enterprise = 18;</code>
       *
       * @param value The isEnterprise to set.
       */
      private void setIsEnterprise(boolean value) {
        bitField0_ |= 0x00000080;
        isEnterprise_ = value;
      }

      /**
       *
       *
       * <pre>
       * Specifies whether the config should apply to enterprise or non-enterprise
       * only. If omitted, the config applies to both groups.
       * - On windows and mac, machines on a domain network are considered
       *   enterprise.
       * - On chromeOS, registered mode determines enterprise status.
       * - Android, iOS, and linux consider all clients as non-enterprise.
       * </pre>
       *
       * <code>optional bool is_enterprise = 18;</code>
       */
      private void clearIsEnterprise() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isEnterprise_ = false;
      }

      public static final int POLICY_RESTRICTION_FIELD_NUMBER = 19;
      private int policyRestriction_;

      /**
       *
       *
       * <pre>
       * Specifies the restrictions applied by the "ChromeVariations" policy to
       * the study. See the definition of the PolicyRestriction enum for details.
       * </pre>
       *
       * <code>
       * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
       * </code>
       *
       * @return Whether the policyRestriction field is set.
       */
      @java.lang.Override
      public boolean hasPolicyRestriction() {
        return ((bitField0_ & 0x00000100) != 0);
      }

      /**
       *
       *
       * <pre>
       * Specifies the restrictions applied by the "ChromeVariations" policy to
       * the study. See the definition of the PolicyRestriction enum for details.
       * </pre>
       *
       * <code>
       * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
       * </code>
       *
       * @return The policyRestriction.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction
          getPolicyRestriction() {
        org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction result =
            org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction.forNumber(
                policyRestriction_);
        return result == null
            ? org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction.NONE
            : result;
      }

      /**
       *
       *
       * <pre>
       * Specifies the restrictions applied by the "ChromeVariations" policy to
       * the study. See the definition of the PolicyRestriction enum for details.
       * </pre>
       *
       * <code>
       * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
       * </code>
       *
       * @param value The policyRestriction to set.
       */
      private void setPolicyRestriction(
          org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction value) {
        policyRestriction_ = value.getNumber();
        bitField0_ |= 0x00000100;
      }

      /**
       *
       *
       * <pre>
       * Specifies the restrictions applied by the "ChromeVariations" policy to
       * the study. See the definition of the PolicyRestriction enum for details.
       * </pre>
       *
       * <code>
       * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
       * </code>
       */
      private void clearPolicyRestriction() {
        bitField0_ = (bitField0_ & ~0x00000100);
        policyRestriction_ = 0;
      }

      public static final int CPU_ARCHITECTURE_FIELD_NUMBER = 20;
      private com.google.protobuf.Internal.IntList cpuArchitecture_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer,
              org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
          cpuArchitecture_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer,
                  org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>() {
                @java.lang.Override
                public org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
                    convert(java.lang.Integer from) {
                  org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture result =
                      org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
                          .forNumber(from);
                  return result == null
                      ? org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
                          .X86_64
                      : result;
                }
              };

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @return A list containing the cpuArchitecture.
       */
      @java.lang.Override
      public java.util.List<
              org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
          getCpuArchitectureList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer,
            org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>(
            cpuArchitecture_, cpuArchitecture_converter_);
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @return The count of cpuArchitecture.
       */
      @java.lang.Override
      public int getCpuArchitectureCount() {
        return cpuArchitecture_.size();
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @param index The index of the element to return.
       * @return The cpuArchitecture at the given index.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
          getCpuArchitecture(int index) {
        return cpuArchitecture_converter_.convert(cpuArchitecture_.getInt(index));
      }

      private void ensureCpuArchitectureIsMutable() {
        com.google.protobuf.Internal.IntList tmp = cpuArchitecture_;
        if (!tmp.isModifiable()) {
          cpuArchitecture_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @param index The index to set the value at.
       * @param value The cpuArchitecture to set.
       */
      private void setCpuArchitecture(
          int index,
          org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value) {
        value.getClass();
        ensureCpuArchitectureIsMutable();
        cpuArchitecture_.setInt(index, value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @param value The cpuArchitecture to add.
       */
      private void addCpuArchitecture(
          org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value) {
        value.getClass();
        ensureCpuArchitectureIsMutable();
        cpuArchitecture_.addInt(value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       *
       * @param values The cpuArchitecture to add.
       */
      private void addAllCpuArchitecture(
          java.lang.Iterable<
                  ? extends
                      org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
              values) {
        ensureCpuArchitectureIsMutable();
        for (org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value :
            values) {
          cpuArchitecture_.addInt(value.getNumber());
        }
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will receive this study. If omitted, the
       * study applies to all architectures, unless |exclude_cpu_architecture| is
       * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
       * [X86_32, ARM64]
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
       */
      private void clearCpuArchitecture() {
        cpuArchitecture_ = emptyIntList();
      }

      public static final int EXCLUDE_CPU_ARCHITECTURE_FIELD_NUMBER = 21;
      private com.google.protobuf.Internal.IntList excludeCpuArchitecture_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer,
              org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
          excludeCpuArchitecture_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer,
                  org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>() {
                @java.lang.Override
                public org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
                    convert(java.lang.Integer from) {
                  org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture result =
                      org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
                          .forNumber(from);
                  return result == null
                      ? org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
                          .X86_64
                      : result;
                }
              };

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @return A list containing the excludeCpuArchitecture.
       */
      @java.lang.Override
      public java.util.List<
              org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
          getExcludeCpuArchitectureList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer,
            org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>(
            excludeCpuArchitecture_, excludeCpuArchitecture_converter_);
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @return The count of excludeCpuArchitecture.
       */
      @java.lang.Override
      public int getExcludeCpuArchitectureCount() {
        return excludeCpuArchitecture_.size();
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @param index The index of the element to return.
       * @return The excludeCpuArchitecture at the given index.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
          getExcludeCpuArchitecture(int index) {
        return excludeCpuArchitecture_converter_.convert(excludeCpuArchitecture_.getInt(index));
      }

      private void ensureExcludeCpuArchitectureIsMutable() {
        com.google.protobuf.Internal.IntList tmp = excludeCpuArchitecture_;
        if (!tmp.isModifiable()) {
          excludeCpuArchitecture_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @param index The index to set the value at.
       * @param value The excludeCpuArchitecture to set.
       */
      private void setExcludeCpuArchitecture(
          int index,
          org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value) {
        value.getClass();
        ensureExcludeCpuArchitectureIsMutable();
        excludeCpuArchitecture_.setInt(index, value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @param value The excludeCpuArchitecture to add.
       */
      private void addExcludeCpuArchitecture(
          org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value) {
        value.getClass();
        ensureExcludeCpuArchitectureIsMutable();
        excludeCpuArchitecture_.addInt(value.getNumber());
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       *
       * @param values The excludeCpuArchitecture to add.
       */
      private void addAllExcludeCpuArchitecture(
          java.lang.Iterable<
                  ? extends
                      org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
              values) {
        ensureExcludeCpuArchitectureIsMutable();
        for (org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value :
            values) {
          excludeCpuArchitecture_.addInt(value.getNumber());
        }
      }

      /**
       *
       *
       * <pre>
       * List of CPU architectures that will be excluded from this study. If
       * omitted, the study applies to all architectures unless |cpu_architecture|
       * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
       * range of values as cpu_architecture, e.g. [X86_32, ARM64].
       * </pre>
       *
       * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
       */
      private void clearExcludeCpuArchitecture() {
        excludeCpuArchitecture_ = emptyIntList();
      }

      public static final int GOOGLE_GROUP_FIELD_NUMBER = 22;
      private com.google.protobuf.Internal.LongList googleGroup_;

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @return A list containing the googleGroup.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long> getGoogleGroupList() {
        return googleGroup_;
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @return The count of googleGroup.
       */
      @java.lang.Override
      public int getGoogleGroupCount() {
        return googleGroup_.size();
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @param index The index of the element to return.
       * @return The googleGroup at the given index.
       */
      @java.lang.Override
      public long getGoogleGroup(int index) {
        return googleGroup_.getLong(index);
      }

      private int googleGroupMemoizedSerializedSize = -1;

      private void ensureGoogleGroupIsMutable() {
        com.google.protobuf.Internal.LongList tmp = googleGroup_;
        if (!tmp.isModifiable()) {
          googleGroup_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @param index The index to set the value at.
       * @param value The googleGroup to set.
       */
      private void setGoogleGroup(int index, long value) {
        ensureGoogleGroupIsMutable();
        googleGroup_.setLong(index, value);
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @param value The googleGroup to add.
       */
      private void addGoogleGroup(long value) {
        ensureGoogleGroupIsMutable();
        googleGroup_.addLong(value);
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       *
       * @param values The googleGroup to add.
       */
      private void addAllGoogleGroup(java.lang.Iterable<? extends java.lang.Long> values) {
        ensureGoogleGroupIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, googleGroup_);
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where at least
       * one of the signed in users is a member of at least one of the specified
       * groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |exclude_google_group|.
       * </pre>
       *
       * <code>repeated int64 google_group = 22 [packed = true];</code>
       */
      private void clearGoogleGroup() {
        googleGroup_ = emptyLongList();
      }

      public static final int EXCLUDE_GOOGLE_GROUP_FIELD_NUMBER = 23;
      private com.google.protobuf.Internal.LongList excludeGoogleGroup_;

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @return A list containing the excludeGoogleGroup.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long> getExcludeGoogleGroupList() {
        return excludeGoogleGroup_;
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @return The count of excludeGoogleGroup.
       */
      @java.lang.Override
      public int getExcludeGoogleGroupCount() {
        return excludeGoogleGroup_.size();
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @param index The index of the element to return.
       * @return The excludeGoogleGroup at the given index.
       */
      @java.lang.Override
      public long getExcludeGoogleGroup(int index) {
        return excludeGoogleGroup_.getLong(index);
      }

      private int excludeGoogleGroupMemoizedSerializedSize = -1;

      private void ensureExcludeGoogleGroupIsMutable() {
        com.google.protobuf.Internal.LongList tmp = excludeGoogleGroup_;
        if (!tmp.isModifiable()) {
          excludeGoogleGroup_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @param index The index to set the value at.
       * @param value The excludeGoogleGroup to set.
       */
      private void setExcludeGoogleGroup(int index, long value) {
        ensureExcludeGoogleGroupIsMutable();
        excludeGoogleGroup_.setLong(index, value);
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @param value The excludeGoogleGroup to add.
       */
      private void addExcludeGoogleGroup(long value) {
        ensureExcludeGoogleGroupIsMutable();
        excludeGoogleGroup_.addLong(value);
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       *
       * @param values The excludeGoogleGroup to add.
       */
      private void addAllExcludeGoogleGroup(java.lang.Iterable<? extends java.lang.Long> values) {
        ensureExcludeGoogleGroupIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, excludeGoogleGroup_);
      }

      /**
       *
       *
       * <pre>
       * Specifies that the config should apply only to clients where none
       * of the signed in users are a member of any of the specified groups.
       * The values are the gaia ID of the google group.
       * Mutually exclusive with |google_group|.
       * </pre>
       *
       * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
       */
      private void clearExcludeGoogleGroup() {
        excludeGoogleGroup_ = emptyLongList();
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }

      public static Builder newBuilder(
          org.chromium.components.variations.StudyOuterClass.Study.Filter prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       *
       *
       * <pre>
       * Filtering criteria specifying whether this study is applicable to a given
       * Chrome instance.
       * Next tag: 24
       * </pre>
       *
       * Protobuf type {@code variations.Study.Filter}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageLite.Builder<
              org.chromium.components.variations.StudyOuterClass.Study.Filter, Builder>
          implements
          // @@protoc_insertion_point(builder_implements:variations.Study.Filter)
          org.chromium.components.variations.StudyOuterClass.Study.FilterOrBuilder {
        // Construct using
        private Builder() {
          super(DEFAULT_INSTANCE);
        }

        /**
         *
         *
         * <pre>
         * The start date of the study in Unix time format. (Seconds since midnight
         * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
         * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
         * </pre>
         *
         * <code>optional int64 start_date = 1;</code>
         *
         * @return Whether the startDate field is set.
         */
        @java.lang.Override
        public boolean hasStartDate() {
          return instance.hasStartDate();
        }

        /**
         *
         *
         * <pre>
         * The start date of the study in Unix time format. (Seconds since midnight
         * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
         * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
         * </pre>
         *
         * <code>optional int64 start_date = 1;</code>
         *
         * @return The startDate.
         */
        @java.lang.Override
        public long getStartDate() {
          return instance.getStartDate();
        }

        /**
         *
         *
         * <pre>
         * The start date of the study in Unix time format. (Seconds since midnight
         * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
         * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
         * </pre>
         *
         * <code>optional int64 start_date = 1;</code>
         *
         * @param value The startDate to set.
         * @return This builder for chaining.
         */
        public Builder setStartDate(long value) {
          copyOnWrite();
          instance.setStartDate(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The start date of the study in Unix time format. (Seconds since midnight
         * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
         * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
         * </pre>
         *
         * <code>optional int64 start_date = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearStartDate() {
          copyOnWrite();
          instance.clearStartDate();
          return this;
        }

        /**
         *
         *
         * <pre>
         * The end date of the study in Unix time format. (Seconds since midnight
         * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
         * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
         * Mutually exclusive with expiry_date. The difference between end_date and
         * expiry_date is that, when end_date is past, the field trial will not be
         * created. When expiry_date is past, the trial is still created, but will
         * be disabled, causing it to select its default group.
         * </pre>
         *
         * <code>optional int64 end_date = 13;</code>
         *
         * @return Whether the endDate field is set.
         */
        @java.lang.Override
        public boolean hasEndDate() {
          return instance.hasEndDate();
        }

        /**
         *
         *
         * <pre>
         * The end date of the study in Unix time format. (Seconds since midnight
         * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
         * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
         * Mutually exclusive with expiry_date. The difference between end_date and
         * expiry_date is that, when end_date is past, the field trial will not be
         * created. When expiry_date is past, the trial is still created, but will
         * be disabled, causing it to select its default group.
         * </pre>
         *
         * <code>optional int64 end_date = 13;</code>
         *
         * @return The endDate.
         */
        @java.lang.Override
        public long getEndDate() {
          return instance.getEndDate();
        }

        /**
         *
         *
         * <pre>
         * The end date of the study in Unix time format. (Seconds since midnight
         * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
         * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
         * Mutually exclusive with expiry_date. The difference between end_date and
         * expiry_date is that, when end_date is past, the field trial will not be
         * created. When expiry_date is past, the trial is still created, but will
         * be disabled, causing it to select its default group.
         * </pre>
         *
         * <code>optional int64 end_date = 13;</code>
         *
         * @param value The endDate to set.
         * @return This builder for chaining.
         */
        public Builder setEndDate(long value) {
          copyOnWrite();
          instance.setEndDate(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The end date of the study in Unix time format. (Seconds since midnight
         * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
         * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
         * Mutually exclusive with expiry_date. The difference between end_date and
         * expiry_date is that, when end_date is past, the field trial will not be
         * created. When expiry_date is past, the trial is still created, but will
         * be disabled, causing it to select its default group.
         * </pre>
         *
         * <code>optional int64 end_date = 13;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearEndDate() {
          copyOnWrite();
          instance.clearEndDate();
          return this;
        }

        /**
         *
         *
         * <pre>
         * The minimum Chrome version for this study, allowing a trailing '*'
         * character for pattern matching. Inclusive. (To check for a match, iterate
         * over each component checking &gt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: "17.0.963.46", "17.0.963.*", "17.*"
         * </pre>
         *
         * <code>optional string min_version = 2;</code>
         *
         * @return Whether the minVersion field is set.
         */
        @java.lang.Override
        public boolean hasMinVersion() {
          return instance.hasMinVersion();
        }

        /**
         *
         *
         * <pre>
         * The minimum Chrome version for this study, allowing a trailing '*'
         * character for pattern matching. Inclusive. (To check for a match, iterate
         * over each component checking &gt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: "17.0.963.46", "17.0.963.*", "17.*"
         * </pre>
         *
         * <code>optional string min_version = 2;</code>
         *
         * @return The minVersion.
         */
        @java.lang.Override
        public java.lang.String getMinVersion() {
          return instance.getMinVersion();
        }

        /**
         *
         *
         * <pre>
         * The minimum Chrome version for this study, allowing a trailing '*'
         * character for pattern matching. Inclusive. (To check for a match, iterate
         * over each component checking &gt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: "17.0.963.46", "17.0.963.*", "17.*"
         * </pre>
         *
         * <code>optional string min_version = 2;</code>
         *
         * @return The bytes for minVersion.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getMinVersionBytes() {
          return instance.getMinVersionBytes();
        }

        /**
         *
         *
         * <pre>
         * The minimum Chrome version for this study, allowing a trailing '*'
         * character for pattern matching. Inclusive. (To check for a match, iterate
         * over each component checking &gt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: "17.0.963.46", "17.0.963.*", "17.*"
         * </pre>
         *
         * <code>optional string min_version = 2;</code>
         *
         * @param value The minVersion to set.
         * @return This builder for chaining.
         */
        public Builder setMinVersion(java.lang.String value) {
          copyOnWrite();
          instance.setMinVersion(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The minimum Chrome version for this study, allowing a trailing '*'
         * character for pattern matching. Inclusive. (To check for a match, iterate
         * over each component checking &gt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: "17.0.963.46", "17.0.963.*", "17.*"
         * </pre>
         *
         * <code>optional string min_version = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearMinVersion() {
          copyOnWrite();
          instance.clearMinVersion();
          return this;
        }

        /**
         *
         *
         * <pre>
         * The minimum Chrome version for this study, allowing a trailing '*'
         * character for pattern matching. Inclusive. (To check for a match, iterate
         * over each component checking &gt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: "17.0.963.46", "17.0.963.*", "17.*"
         * </pre>
         *
         * <code>optional string min_version = 2;</code>
         *
         * @param value The bytes for minVersion to set.
         * @return This builder for chaining.
         */
        public Builder setMinVersionBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setMinVersionBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The maximum Chrome version for this study; same formatting as
         * |min_version| above. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no maximum version.
         * Ex: "19.*"
         * </pre>
         *
         * <code>optional string max_version = 3;</code>
         *
         * @return Whether the maxVersion field is set.
         */
        @java.lang.Override
        public boolean hasMaxVersion() {
          return instance.hasMaxVersion();
        }

        /**
         *
         *
         * <pre>
         * The maximum Chrome version for this study; same formatting as
         * |min_version| above. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no maximum version.
         * Ex: "19.*"
         * </pre>
         *
         * <code>optional string max_version = 3;</code>
         *
         * @return The maxVersion.
         */
        @java.lang.Override
        public java.lang.String getMaxVersion() {
          return instance.getMaxVersion();
        }

        /**
         *
         *
         * <pre>
         * The maximum Chrome version for this study; same formatting as
         * |min_version| above. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no maximum version.
         * Ex: "19.*"
         * </pre>
         *
         * <code>optional string max_version = 3;</code>
         *
         * @return The bytes for maxVersion.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getMaxVersionBytes() {
          return instance.getMaxVersionBytes();
        }

        /**
         *
         *
         * <pre>
         * The maximum Chrome version for this study; same formatting as
         * |min_version| above. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no maximum version.
         * Ex: "19.*"
         * </pre>
         *
         * <code>optional string max_version = 3;</code>
         *
         * @param value The maxVersion to set.
         * @return This builder for chaining.
         */
        public Builder setMaxVersion(java.lang.String value) {
          copyOnWrite();
          instance.setMaxVersion(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The maximum Chrome version for this study; same formatting as
         * |min_version| above. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no maximum version.
         * Ex: "19.*"
         * </pre>
         *
         * <code>optional string max_version = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearMaxVersion() {
          copyOnWrite();
          instance.clearMaxVersion();
          return this;
        }

        /**
         *
         *
         * <pre>
         * The maximum Chrome version for this study; same formatting as
         * |min_version| above. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no maximum version.
         * Ex: "19.*"
         * </pre>
         *
         * <code>optional string max_version = 3;</code>
         *
         * @param value The bytes for maxVersion to set.
         * @return This builder for chaining.
         */
        public Builder setMaxVersionBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setMaxVersionBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The minimum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &gt;= until a * or end of string is reached.) OS versions
         * are sanitized into a list of digits separated by dots like so:
         *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
         *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
         *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
         * Optional - if not specified, there is no minimum version.
         * </pre>
         *
         * <code>optional string min_os_version = 16;</code>
         *
         * @return Whether the minOsVersion field is set.
         */
        @java.lang.Override
        public boolean hasMinOsVersion() {
          return instance.hasMinOsVersion();
        }

        /**
         *
         *
         * <pre>
         * The minimum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &gt;= until a * or end of string is reached.) OS versions
         * are sanitized into a list of digits separated by dots like so:
         *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
         *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
         *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
         * Optional - if not specified, there is no minimum version.
         * </pre>
         *
         * <code>optional string min_os_version = 16;</code>
         *
         * @return The minOsVersion.
         */
        @java.lang.Override
        public java.lang.String getMinOsVersion() {
          return instance.getMinOsVersion();
        }

        /**
         *
         *
         * <pre>
         * The minimum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &gt;= until a * or end of string is reached.) OS versions
         * are sanitized into a list of digits separated by dots like so:
         *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
         *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
         *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
         * Optional - if not specified, there is no minimum version.
         * </pre>
         *
         * <code>optional string min_os_version = 16;</code>
         *
         * @return The bytes for minOsVersion.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getMinOsVersionBytes() {
          return instance.getMinOsVersionBytes();
        }

        /**
         *
         *
         * <pre>
         * The minimum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &gt;= until a * or end of string is reached.) OS versions
         * are sanitized into a list of digits separated by dots like so:
         *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
         *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
         *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
         * Optional - if not specified, there is no minimum version.
         * </pre>
         *
         * <code>optional string min_os_version = 16;</code>
         *
         * @param value The minOsVersion to set.
         * @return This builder for chaining.
         */
        public Builder setMinOsVersion(java.lang.String value) {
          copyOnWrite();
          instance.setMinOsVersion(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The minimum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &gt;= until a * or end of string is reached.) OS versions
         * are sanitized into a list of digits separated by dots like so:
         *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
         *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
         *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
         * Optional - if not specified, there is no minimum version.
         * </pre>
         *
         * <code>optional string min_os_version = 16;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearMinOsVersion() {
          copyOnWrite();
          instance.clearMinOsVersion();
          return this;
        }

        /**
         *
         *
         * <pre>
         * The minimum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &gt;= until a * or end of string is reached.) OS versions
         * are sanitized into a list of digits separated by dots like so:
         *  Windows:  "6.2.7601 SP1"      --&gt; "6.2.7601.1"
         *  Mac OS X: "10.11.2"           --&gt; "10.11.2"
         *  Linux:    "4.13.0-27-generic" --&gt; "4.13.0"
         * Optional - if not specified, there is no minimum version.
         * </pre>
         *
         * <code>optional string min_os_version = 16;</code>
         *
         * @param value The bytes for minOsVersion to set.
         * @return This builder for chaining.
         */
        public Builder setMinOsVersionBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setMinOsVersionBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The maximum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: See |min_os_version| for details.
         * </pre>
         *
         * <code>optional string max_os_version = 17;</code>
         *
         * @return Whether the maxOsVersion field is set.
         */
        @java.lang.Override
        public boolean hasMaxOsVersion() {
          return instance.hasMaxOsVersion();
        }

        /**
         *
         *
         * <pre>
         * The maximum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: See |min_os_version| for details.
         * </pre>
         *
         * <code>optional string max_os_version = 17;</code>
         *
         * @return The maxOsVersion.
         */
        @java.lang.Override
        public java.lang.String getMaxOsVersion() {
          return instance.getMaxOsVersion();
        }

        /**
         *
         *
         * <pre>
         * The maximum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: See |min_os_version| for details.
         * </pre>
         *
         * <code>optional string max_os_version = 17;</code>
         *
         * @return The bytes for maxOsVersion.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getMaxOsVersionBytes() {
          return instance.getMaxOsVersionBytes();
        }

        /**
         *
         *
         * <pre>
         * The maximum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: See |min_os_version| for details.
         * </pre>
         *
         * <code>optional string max_os_version = 17;</code>
         *
         * @param value The maxOsVersion to set.
         * @return This builder for chaining.
         */
        public Builder setMaxOsVersion(java.lang.String value) {
          copyOnWrite();
          instance.setMaxOsVersion(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * The maximum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: See |min_os_version| for details.
         * </pre>
         *
         * <code>optional string max_os_version = 17;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearMaxOsVersion() {
          copyOnWrite();
          instance.clearMaxOsVersion();
          return this;
        }

        /**
         *
         *
         * <pre>
         * The maximum OS version for this study, allowing a trailing '*' character
         * for pattern matching. Inclusive. (To check for a match, iterate over each
         * component checking &lt;= until a * or end of string is reached.)
         * Optional - if not specified, there is no minimum version.
         * Ex: See |min_os_version| for details.
         * </pre>
         *
         * <code>optional string max_os_version = 17;</code>
         *
         * @param value The bytes for maxOsVersion to set.
         * @return This builder for chaining.
         */
        public Builder setMaxOsVersionBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setMaxOsVersionBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of channels that will receive this study. If omitted, the study
         * applies to all channels.
         * Ex: [BETA, STABLE]
         * </pre>
         *
         * <code>repeated .variations.Study.Channel channel = 4;</code>
         *
         * @return A list containing the channel.
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Channel>
            getChannelList() {
          return instance.getChannelList();
        }

        /**
         *
         *
         * <pre>
         * List of channels that will receive this study. If omitted, the study
         * applies to all channels.
         * Ex: [BETA, STABLE]
         * </pre>
         *
         * <code>repeated .variations.Study.Channel channel = 4;</code>
         *
         * @return The count of channel.
         */
        @java.lang.Override
        public int getChannelCount() {
          return instance.getChannelCount();
        }

        /**
         *
         *
         * <pre>
         * List of channels that will receive this study. If omitted, the study
         * applies to all channels.
         * Ex: [BETA, STABLE]
         * </pre>
         *
         * <code>repeated .variations.Study.Channel channel = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The channel at the given index.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.Channel getChannel(
            int index) {
          return instance.getChannel(index);
        }

        /**
         *
         *
         * <pre>
         * List of channels that will receive this study. If omitted, the study
         * applies to all channels.
         * Ex: [BETA, STABLE]
         * </pre>
         *
         * <code>repeated .variations.Study.Channel channel = 4;</code>
         *
         * @param index The index to set the value at.
         * @param value The channel to set.
         * @return This builder for chaining.
         */
        public Builder setChannel(
            int index, org.chromium.components.variations.StudyOuterClass.Study.Channel value) {
          copyOnWrite();
          instance.setChannel(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of channels that will receive this study. If omitted, the study
         * applies to all channels.
         * Ex: [BETA, STABLE]
         * </pre>
         *
         * <code>repeated .variations.Study.Channel channel = 4;</code>
         *
         * @param value The channel to add.
         * @return This builder for chaining.
         */
        public Builder addChannel(
            org.chromium.components.variations.StudyOuterClass.Study.Channel value) {
          copyOnWrite();
          instance.addChannel(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of channels that will receive this study. If omitted, the study
         * applies to all channels.
         * Ex: [BETA, STABLE]
         * </pre>
         *
         * <code>repeated .variations.Study.Channel channel = 4;</code>
         *
         * @param values The channel to add.
         * @return This builder for chaining.
         */
        public Builder addAllChannel(
            java.lang.Iterable<
                    ? extends org.chromium.components.variations.StudyOuterClass.Study.Channel>
                values) {
          copyOnWrite();
          instance.addAllChannel(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of channels that will receive this study. If omitted, the study
         * applies to all channels.
         * Ex: [BETA, STABLE]
         * </pre>
         *
         * <code>repeated .variations.Study.Channel channel = 4;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearChannel() {
          copyOnWrite();
          instance.clearChannel();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of platforms that will receive this study. If omitted, the study
         * applies to all platforms.
         * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
         * </pre>
         *
         * <code>repeated .variations.Study.Platform platform = 5;</code>
         *
         * @return A list containing the platform.
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Platform>
            getPlatformList() {
          return instance.getPlatformList();
        }

        /**
         *
         *
         * <pre>
         * List of platforms that will receive this study. If omitted, the study
         * applies to all platforms.
         * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
         * </pre>
         *
         * <code>repeated .variations.Study.Platform platform = 5;</code>
         *
         * @return The count of platform.
         */
        @java.lang.Override
        public int getPlatformCount() {
          return instance.getPlatformCount();
        }

        /**
         *
         *
         * <pre>
         * List of platforms that will receive this study. If omitted, the study
         * applies to all platforms.
         * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
         * </pre>
         *
         * <code>repeated .variations.Study.Platform platform = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The platform at the given index.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.Platform getPlatform(
            int index) {
          return instance.getPlatform(index);
        }

        /**
         *
         *
         * <pre>
         * List of platforms that will receive this study. If omitted, the study
         * applies to all platforms.
         * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
         * </pre>
         *
         * <code>repeated .variations.Study.Platform platform = 5;</code>
         *
         * @param index The index to set the value at.
         * @param value The platform to set.
         * @return This builder for chaining.
         */
        public Builder setPlatform(
            int index, org.chromium.components.variations.StudyOuterClass.Study.Platform value) {
          copyOnWrite();
          instance.setPlatform(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of platforms that will receive this study. If omitted, the study
         * applies to all platforms.
         * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
         * </pre>
         *
         * <code>repeated .variations.Study.Platform platform = 5;</code>
         *
         * @param value The platform to add.
         * @return This builder for chaining.
         */
        public Builder addPlatform(
            org.chromium.components.variations.StudyOuterClass.Study.Platform value) {
          copyOnWrite();
          instance.addPlatform(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of platforms that will receive this study. If omitted, the study
         * applies to all platforms.
         * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
         * </pre>
         *
         * <code>repeated .variations.Study.Platform platform = 5;</code>
         *
         * @param values The platform to add.
         * @return This builder for chaining.
         */
        public Builder addAllPlatform(
            java.lang.Iterable<
                    ? extends org.chromium.components.variations.StudyOuterClass.Study.Platform>
                values) {
          copyOnWrite();
          instance.addAllPlatform(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of platforms that will receive this study. If omitted, the study
         * applies to all platforms.
         * Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
         * </pre>
         *
         * <code>repeated .variations.Study.Platform platform = 5;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearPlatform() {
          copyOnWrite();
          instance.clearPlatform();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @return A list containing the locale.
         */
        @java.lang.Override
        public java.util.List<java.lang.String> getLocaleList() {
          return java.util.Collections.unmodifiableList(instance.getLocaleList());
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @return The count of locale.
         */
        @java.lang.Override
        public int getLocaleCount() {
          return instance.getLocaleCount();
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @param index The index of the element to return.
         * @return The locale at the given index.
         */
        @java.lang.Override
        public java.lang.String getLocale(int index) {
          return instance.getLocale(index);
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the locale at the given index.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getLocaleBytes(int index) {
          return instance.getLocaleBytes(index);
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @param index The index to set the value at.
         * @param value The locale to set.
         * @return This builder for chaining.
         */
        public Builder setLocale(int index, java.lang.String value) {
          copyOnWrite();
          instance.setLocale(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @param value The locale to add.
         * @return This builder for chaining.
         */
        public Builder addLocale(java.lang.String value) {
          copyOnWrite();
          instance.addLocale(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @param values The locale to add.
         * @return This builder for chaining.
         */
        public Builder addAllLocale(java.lang.Iterable<java.lang.String> values) {
          copyOnWrite();
          instance.addAllLocale(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearLocale() {
          copyOnWrite();
          instance.clearLocale();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will receive this study. If omitted, the study
         * applies to all locales, unless |exclude_locale| is specified. Mutually
         * exclusive with |exclude_locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string locale = 6;</code>
         *
         * @param value The bytes of the locale to add.
         * @return This builder for chaining.
         */
        public Builder addLocaleBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.addLocaleBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @return A list containing the excludeLocale.
         */
        @java.lang.Override
        public java.util.List<java.lang.String> getExcludeLocaleList() {
          return java.util.Collections.unmodifiableList(instance.getExcludeLocaleList());
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @return The count of excludeLocale.
         */
        @java.lang.Override
        public int getExcludeLocaleCount() {
          return instance.getExcludeLocaleCount();
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @param index The index of the element to return.
         * @return The excludeLocale at the given index.
         */
        @java.lang.Override
        public java.lang.String getExcludeLocale(int index) {
          return instance.getExcludeLocale(index);
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the excludeLocale at the given index.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getExcludeLocaleBytes(int index) {
          return instance.getExcludeLocaleBytes(index);
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @param index The index to set the value at.
         * @param value The excludeLocale to set.
         * @return This builder for chaining.
         */
        public Builder setExcludeLocale(int index, java.lang.String value) {
          copyOnWrite();
          instance.setExcludeLocale(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @param value The excludeLocale to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeLocale(java.lang.String value) {
          copyOnWrite();
          instance.addExcludeLocale(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @param values The excludeLocale to add.
         * @return This builder for chaining.
         */
        public Builder addAllExcludeLocale(java.lang.Iterable<java.lang.String> values) {
          copyOnWrite();
          instance.addAllExcludeLocale(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearExcludeLocale() {
          copyOnWrite();
          instance.clearExcludeLocale();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of locales that will be excluded from this study. If omitted, the
         * study applies to all locales unless |locale| is specified. Mutually
         * exclusive with |locale|.
         * Ex: ["en-US", "en-CA"]
         * </pre>
         *
         * <code>repeated string exclude_locale = 12;</code>
         *
         * @param value The bytes of the excludeLocale to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeLocaleBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.addExcludeLocaleBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will receive this study. If omitted, the study
         * applies to all form factors, unless |exclude_form_factor| is specified.
         * Mutually exclusive with |exclude_form_factor|.
         * Ex: [PHONE, TABLET]
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
         *
         * @return A list containing the formFactor.
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
            getFormFactorList() {
          return instance.getFormFactorList();
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will receive this study. If omitted, the study
         * applies to all form factors, unless |exclude_form_factor| is specified.
         * Mutually exclusive with |exclude_form_factor|.
         * Ex: [PHONE, TABLET]
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
         *
         * @return The count of formFactor.
         */
        @java.lang.Override
        public int getFormFactorCount() {
          return instance.getFormFactorCount();
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will receive this study. If omitted, the study
         * applies to all form factors, unless |exclude_form_factor| is specified.
         * Mutually exclusive with |exclude_form_factor|.
         * Ex: [PHONE, TABLET]
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
         *
         * @param index The index of the element to return.
         * @return The formFactor at the given index.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.FormFactor getFormFactor(
            int index) {
          return instance.getFormFactor(index);
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will receive this study. If omitted, the study
         * applies to all form factors, unless |exclude_form_factor| is specified.
         * Mutually exclusive with |exclude_form_factor|.
         * Ex: [PHONE, TABLET]
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
         *
         * @param index The index to set the value at.
         * @param value The formFactor to set.
         * @return This builder for chaining.
         */
        public Builder setFormFactor(
            int index, org.chromium.components.variations.StudyOuterClass.Study.FormFactor value) {
          copyOnWrite();
          instance.setFormFactor(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will receive this study. If omitted, the study
         * applies to all form factors, unless |exclude_form_factor| is specified.
         * Mutually exclusive with |exclude_form_factor|.
         * Ex: [PHONE, TABLET]
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
         *
         * @param value The formFactor to add.
         * @return This builder for chaining.
         */
        public Builder addFormFactor(
            org.chromium.components.variations.StudyOuterClass.Study.FormFactor value) {
          copyOnWrite();
          instance.addFormFactor(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will receive this study. If omitted, the study
         * applies to all form factors, unless |exclude_form_factor| is specified.
         * Mutually exclusive with |exclude_form_factor|.
         * Ex: [PHONE, TABLET]
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
         *
         * @param values The formFactor to add.
         * @return This builder for chaining.
         */
        public Builder addAllFormFactor(
            java.lang.Iterable<
                    ? extends org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
                values) {
          copyOnWrite();
          instance.addAllFormFactor(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will receive this study. If omitted, the study
         * applies to all form factors, unless |exclude_form_factor| is specified.
         * Mutually exclusive with |exclude_form_factor|.
         * Ex: [PHONE, TABLET]
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor form_factor = 7;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearFormFactor() {
          copyOnWrite();
          instance.clearFormFactor();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will be excluded from this study. If omitted,
         * the study applies to all form factors unless |form_factor| is specified.
         * Mutually exclusive with |form_factor|.
         * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
         *
         * @return A list containing the excludeFormFactor.
         */
        @java.lang.Override
        public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
            getExcludeFormFactorList() {
          return instance.getExcludeFormFactorList();
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will be excluded from this study. If omitted,
         * the study applies to all form factors unless |form_factor| is specified.
         * Mutually exclusive with |form_factor|.
         * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
         *
         * @return The count of excludeFormFactor.
         */
        @java.lang.Override
        public int getExcludeFormFactorCount() {
          return instance.getExcludeFormFactorCount();
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will be excluded from this study. If omitted,
         * the study applies to all form factors unless |form_factor| is specified.
         * Mutually exclusive with |form_factor|.
         * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
         *
         * @param index The index of the element to return.
         * @return The excludeFormFactor at the given index.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.FormFactor
            getExcludeFormFactor(int index) {
          return instance.getExcludeFormFactor(index);
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will be excluded from this study. If omitted,
         * the study applies to all form factors unless |form_factor| is specified.
         * Mutually exclusive with |form_factor|.
         * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
         *
         * @param index The index to set the value at.
         * @param value The excludeFormFactor to set.
         * @return This builder for chaining.
         */
        public Builder setExcludeFormFactor(
            int index, org.chromium.components.variations.StudyOuterClass.Study.FormFactor value) {
          copyOnWrite();
          instance.setExcludeFormFactor(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will be excluded from this study. If omitted,
         * the study applies to all form factors unless |form_factor| is specified.
         * Mutually exclusive with |form_factor|.
         * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
         *
         * @param value The excludeFormFactor to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeFormFactor(
            org.chromium.components.variations.StudyOuterClass.Study.FormFactor value) {
          copyOnWrite();
          instance.addExcludeFormFactor(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will be excluded from this study. If omitted,
         * the study applies to all form factors unless |form_factor| is specified.
         * Mutually exclusive with |form_factor|.
         * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
         *
         * @param values The excludeFormFactor to add.
         * @return This builder for chaining.
         */
        public Builder addAllExcludeFormFactor(
            java.lang.Iterable<
                    ? extends org.chromium.components.variations.StudyOuterClass.Study.FormFactor>
                values) {
          copyOnWrite();
          instance.addAllExcludeFormFactor(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of form factors that will be excluded from this study. If omitted,
         * the study applies to all form factors unless |form_factor| is specified.
         * Mutually exclusive with |form_factor|.
         * Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
         * </pre>
         *
         * <code>repeated .variations.Study.FormFactor exclude_form_factor = 14;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearExcludeFormFactor() {
          copyOnWrite();
          instance.clearExcludeFormFactor();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @return A list containing the hardwareClass.
         */
        @java.lang.Override
        public java.util.List<java.lang.String> getHardwareClassList() {
          return java.util.Collections.unmodifiableList(instance.getHardwareClassList());
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @return The count of hardwareClass.
         */
        @java.lang.Override
        public int getHardwareClassCount() {
          return instance.getHardwareClassCount();
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @param index The index of the element to return.
         * @return The hardwareClass at the given index.
         */
        @java.lang.Override
        public java.lang.String getHardwareClass(int index) {
          return instance.getHardwareClass(index);
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the hardwareClass at the given index.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getHardwareClassBytes(int index) {
          return instance.getHardwareClassBytes(index);
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @param index The index to set the value at.
         * @param value The hardwareClass to set.
         * @return This builder for chaining.
         */
        public Builder setHardwareClass(int index, java.lang.String value) {
          copyOnWrite();
          instance.setHardwareClass(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @param value The hardwareClass to add.
         * @return This builder for chaining.
         */
        public Builder addHardwareClass(java.lang.String value) {
          copyOnWrite();
          instance.addHardwareClass(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @param values The hardwareClass to add.
         * @return This builder for chaining.
         */
        public Builder addAllHardwareClass(java.lang.Iterable<java.lang.String> values) {
          copyOnWrite();
          instance.addAllHardwareClass(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearHardwareClass() {
          copyOnWrite();
          instance.clearHardwareClass();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will receive this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |exclude_hardware_class| is specified. Mutually exclusive with
         * |exclude_hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string hardware_class = 8;</code>
         *
         * @param value The bytes of the hardwareClass to add.
         * @return This builder for chaining.
         */
        public Builder addHardwareClassBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.addHardwareClassBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @return A list containing the excludeHardwareClass.
         */
        @java.lang.Override
        public java.util.List<java.lang.String> getExcludeHardwareClassList() {
          return java.util.Collections.unmodifiableList(instance.getExcludeHardwareClassList());
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @return The count of excludeHardwareClass.
         */
        @java.lang.Override
        public int getExcludeHardwareClassCount() {
          return instance.getExcludeHardwareClassCount();
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @param index The index of the element to return.
         * @return The excludeHardwareClass at the given index.
         */
        @java.lang.Override
        public java.lang.String getExcludeHardwareClass(int index) {
          return instance.getExcludeHardwareClass(index);
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the excludeHardwareClass at the given index.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getExcludeHardwareClassBytes(int index) {
          return instance.getExcludeHardwareClassBytes(index);
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @param index The index to set the value at.
         * @param value The excludeHardwareClass to set.
         * @return This builder for chaining.
         */
        public Builder setExcludeHardwareClass(int index, java.lang.String value) {
          copyOnWrite();
          instance.setExcludeHardwareClass(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @param value The excludeHardwareClass to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeHardwareClass(java.lang.String value) {
          copyOnWrite();
          instance.addExcludeHardwareClass(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @param values The excludeHardwareClass to add.
         * @return This builder for chaining.
         */
        public Builder addAllExcludeHardwareClass(java.lang.Iterable<java.lang.String> values) {
          copyOnWrite();
          instance.addAllExcludeHardwareClass(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearExcludeHardwareClass() {
          copyOnWrite();
          instance.clearExcludeHardwareClass();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of hardware classes that will be excluded in this study.
         * This supports Chrome OS and as of M77, Android.
         * Starting with Chrome M67, this does a case insensitive match on the same
         * hardware class field that is reported to UMA in the SystemProfileProto's
         * |hardware.hardware_class| field.
         * Older versions did a case sensitive substring comparison, which was
         * problematic for short hardware classes like "eve" that existed as
         * substrings of other longer ones.
         * If omitted, the study applies to all hardware classes unless
         * |hardware_class| is specified. Mutually exclusive with |hardware_class|.
         * Ex: ["veyron_minnie", "daisy"]
         * </pre>
         *
         * <code>repeated string exclude_hardware_class = 9;</code>
         *
         * @param value The bytes of the excludeHardwareClass to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeHardwareClassBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.addExcludeHardwareClassBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @return A list containing the country.
         */
        @java.lang.Override
        public java.util.List<java.lang.String> getCountryList() {
          return java.util.Collections.unmodifiableList(instance.getCountryList());
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @return The count of country.
         */
        @java.lang.Override
        public int getCountryCount() {
          return instance.getCountryCount();
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @param index The index of the element to return.
         * @return The country at the given index.
         */
        @java.lang.Override
        public java.lang.String getCountry(int index) {
          return instance.getCountry(index);
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the country at the given index.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getCountryBytes(int index) {
          return instance.getCountryBytes(index);
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @param index The index to set the value at.
         * @param value The country to set.
         * @return This builder for chaining.
         */
        public Builder setCountry(int index, java.lang.String value) {
          copyOnWrite();
          instance.setCountry(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @param value The country to add.
         * @return This builder for chaining.
         */
        public Builder addCountry(java.lang.String value) {
          copyOnWrite();
          instance.addCountry(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @param values The country to add.
         * @return This builder for chaining.
         */
        public Builder addAllCountry(java.lang.Iterable<java.lang.String> values) {
          copyOnWrite();
          instance.addAllCountry(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearCountry() {
          copyOnWrite();
          instance.clearCountry();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
         * study. If omitted, the study applies to all countries unless
         * |exclude_country| is specified. Mutually exclusive with
         * |exclude_country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string country = 10;</code>
         *
         * @param value The bytes of the country to add.
         * @return This builder for chaining.
         */
        public Builder addCountryBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.addCountryBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @return A list containing the excludeCountry.
         */
        @java.lang.Override
        public java.util.List<java.lang.String> getExcludeCountryList() {
          return java.util.Collections.unmodifiableList(instance.getExcludeCountryList());
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @return The count of excludeCountry.
         */
        @java.lang.Override
        public int getExcludeCountryCount() {
          return instance.getExcludeCountryCount();
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @param index The index of the element to return.
         * @return The excludeCountry at the given index.
         */
        @java.lang.Override
        public java.lang.String getExcludeCountry(int index) {
          return instance.getExcludeCountry(index);
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the excludeCountry at the given index.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getExcludeCountryBytes(int index) {
          return instance.getExcludeCountryBytes(index);
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @param index The index to set the value at.
         * @param value The excludeCountry to set.
         * @return This builder for chaining.
         */
        public Builder setExcludeCountry(int index, java.lang.String value) {
          copyOnWrite();
          instance.setExcludeCountry(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @param value The excludeCountry to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeCountry(java.lang.String value) {
          copyOnWrite();
          instance.addExcludeCountry(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @param values The excludeCountry to add.
         * @return This builder for chaining.
         */
        public Builder addAllExcludeCountry(java.lang.Iterable<java.lang.String> values) {
          copyOnWrite();
          instance.addAllExcludeCountry(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearExcludeCountry() {
          copyOnWrite();
          instance.clearExcludeCountry();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
         * from this study. If omitted, the study applies to all countries unless
         * |country| is specified. Mutually exclusive with |country|.
         * Ex: ["in", "us"]
         * </pre>
         *
         * <code>repeated string exclude_country = 11;</code>
         *
         * @param value The bytes of the excludeCountry to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeCountryBytes(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.addExcludeCountryBytes(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies whether the config should apply to low-end devices only. This
         * is currently only supported on Android.
         * </pre>
         *
         * <code>optional bool is_low_end_device = 15;</code>
         *
         * @return Whether the isLowEndDevice field is set.
         */
        @java.lang.Override
        public boolean hasIsLowEndDevice() {
          return instance.hasIsLowEndDevice();
        }

        /**
         *
         *
         * <pre>
         * Specifies whether the config should apply to low-end devices only. This
         * is currently only supported on Android.
         * </pre>
         *
         * <code>optional bool is_low_end_device = 15;</code>
         *
         * @return The isLowEndDevice.
         */
        @java.lang.Override
        public boolean getIsLowEndDevice() {
          return instance.getIsLowEndDevice();
        }

        /**
         *
         *
         * <pre>
         * Specifies whether the config should apply to low-end devices only. This
         * is currently only supported on Android.
         * </pre>
         *
         * <code>optional bool is_low_end_device = 15;</code>
         *
         * @param value The isLowEndDevice to set.
         * @return This builder for chaining.
         */
        public Builder setIsLowEndDevice(boolean value) {
          copyOnWrite();
          instance.setIsLowEndDevice(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies whether the config should apply to low-end devices only. This
         * is currently only supported on Android.
         * </pre>
         *
         * <code>optional bool is_low_end_device = 15;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearIsLowEndDevice() {
          copyOnWrite();
          instance.clearIsLowEndDevice();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies whether the config should apply to enterprise or non-enterprise
         * only. If omitted, the config applies to both groups.
         * - On windows and mac, machines on a domain network are considered
         *   enterprise.
         * - On chromeOS, registered mode determines enterprise status.
         * - Android, iOS, and linux consider all clients as non-enterprise.
         * </pre>
         *
         * <code>optional bool is_enterprise = 18;</code>
         *
         * @return Whether the isEnterprise field is set.
         */
        @java.lang.Override
        public boolean hasIsEnterprise() {
          return instance.hasIsEnterprise();
        }

        /**
         *
         *
         * <pre>
         * Specifies whether the config should apply to enterprise or non-enterprise
         * only. If omitted, the config applies to both groups.
         * - On windows and mac, machines on a domain network are considered
         *   enterprise.
         * - On chromeOS, registered mode determines enterprise status.
         * - Android, iOS, and linux consider all clients as non-enterprise.
         * </pre>
         *
         * <code>optional bool is_enterprise = 18;</code>
         *
         * @return The isEnterprise.
         */
        @java.lang.Override
        public boolean getIsEnterprise() {
          return instance.getIsEnterprise();
        }

        /**
         *
         *
         * <pre>
         * Specifies whether the config should apply to enterprise or non-enterprise
         * only. If omitted, the config applies to both groups.
         * - On windows and mac, machines on a domain network are considered
         *   enterprise.
         * - On chromeOS, registered mode determines enterprise status.
         * - Android, iOS, and linux consider all clients as non-enterprise.
         * </pre>
         *
         * <code>optional bool is_enterprise = 18;</code>
         *
         * @param value The isEnterprise to set.
         * @return This builder for chaining.
         */
        public Builder setIsEnterprise(boolean value) {
          copyOnWrite();
          instance.setIsEnterprise(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies whether the config should apply to enterprise or non-enterprise
         * only. If omitted, the config applies to both groups.
         * - On windows and mac, machines on a domain network are considered
         *   enterprise.
         * - On chromeOS, registered mode determines enterprise status.
         * - Android, iOS, and linux consider all clients as non-enterprise.
         * </pre>
         *
         * <code>optional bool is_enterprise = 18;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearIsEnterprise() {
          copyOnWrite();
          instance.clearIsEnterprise();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies the restrictions applied by the "ChromeVariations" policy to
         * the study. See the definition of the PolicyRestriction enum for details.
         * </pre>
         *
         * <code>
         * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
         * </code>
         *
         * @return Whether the policyRestriction field is set.
         */
        @java.lang.Override
        public boolean hasPolicyRestriction() {
          return instance.hasPolicyRestriction();
        }

        /**
         *
         *
         * <pre>
         * Specifies the restrictions applied by the "ChromeVariations" policy to
         * the study. See the definition of the PolicyRestriction enum for details.
         * </pre>
         *
         * <code>
         * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
         * </code>
         *
         * @return The policyRestriction.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction
            getPolicyRestriction() {
          return instance.getPolicyRestriction();
        }

        /**
         *
         *
         * <pre>
         * Specifies the restrictions applied by the "ChromeVariations" policy to
         * the study. See the definition of the PolicyRestriction enum for details.
         * </pre>
         *
         * <code>
         * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
         * </code>
         *
         * @param value The enum numeric value on the wire for policyRestriction to set.
         * @return This builder for chaining.
         */
        public Builder setPolicyRestriction(
            org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction value) {
          copyOnWrite();
          instance.setPolicyRestriction(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies the restrictions applied by the "ChromeVariations" policy to
         * the study. See the definition of the PolicyRestriction enum for details.
         * </pre>
         *
         * <code>
         * optional .variations.Study.PolicyRestriction policy_restriction = 19 [default = NONE];
         * </code>
         *
         * @return This builder for chaining.
         */
        public Builder clearPolicyRestriction() {
          copyOnWrite();
          instance.clearPolicyRestriction();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will receive this study. If omitted, the
         * study applies to all architectures, unless |exclude_cpu_architecture| is
         * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
         * [X86_32, ARM64]
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
         *
         * @return A list containing the cpuArchitecture.
         */
        @java.lang.Override
        public java.util.List<
                org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
            getCpuArchitectureList() {
          return instance.getCpuArchitectureList();
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will receive this study. If omitted, the
         * study applies to all architectures, unless |exclude_cpu_architecture| is
         * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
         * [X86_32, ARM64]
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
         *
         * @return The count of cpuArchitecture.
         */
        @java.lang.Override
        public int getCpuArchitectureCount() {
          return instance.getCpuArchitectureCount();
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will receive this study. If omitted, the
         * study applies to all architectures, unless |exclude_cpu_architecture| is
         * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
         * [X86_32, ARM64]
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
         *
         * @param index The index of the element to return.
         * @return The cpuArchitecture at the given index.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
            getCpuArchitecture(int index) {
          return instance.getCpuArchitecture(index);
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will receive this study. If omitted, the
         * study applies to all architectures, unless |exclude_cpu_architecture| is
         * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
         * [X86_32, ARM64]
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
         *
         * @param index The index to set the value at.
         * @param value The cpuArchitecture to set.
         * @return This builder for chaining.
         */
        public Builder setCpuArchitecture(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value) {
          copyOnWrite();
          instance.setCpuArchitecture(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will receive this study. If omitted, the
         * study applies to all architectures, unless |exclude_cpu_architecture| is
         * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
         * [X86_32, ARM64]
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
         *
         * @param value The cpuArchitecture to add.
         * @return This builder for chaining.
         */
        public Builder addCpuArchitecture(
            org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value) {
          copyOnWrite();
          instance.addCpuArchitecture(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will receive this study. If omitted, the
         * study applies to all architectures, unless |exclude_cpu_architecture| is
         * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
         * [X86_32, ARM64]
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
         *
         * @param values The cpuArchitecture to add.
         * @return This builder for chaining.
         */
        public Builder addAllCpuArchitecture(
            java.lang.Iterable<
                    ? extends
                        org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
                values) {
          copyOnWrite();
          instance.addAllCpuArchitecture(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will receive this study. If omitted, the
         * study applies to all architectures, unless |exclude_cpu_architecture| is
         * specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
         * [X86_32, ARM64]
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture cpu_architecture = 20;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearCpuArchitecture() {
          copyOnWrite();
          instance.clearCpuArchitecture();
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will be excluded from this study. If
         * omitted, the study applies to all architectures unless |cpu_architecture|
         * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
         * range of values as cpu_architecture, e.g. [X86_32, ARM64].
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
         *
         * @return A list containing the excludeCpuArchitecture.
         */
        @java.lang.Override
        public java.util.List<
                org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
            getExcludeCpuArchitectureList() {
          return instance.getExcludeCpuArchitectureList();
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will be excluded from this study. If
         * omitted, the study applies to all architectures unless |cpu_architecture|
         * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
         * range of values as cpu_architecture, e.g. [X86_32, ARM64].
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
         *
         * @return The count of excludeCpuArchitecture.
         */
        @java.lang.Override
        public int getExcludeCpuArchitectureCount() {
          return instance.getExcludeCpuArchitectureCount();
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will be excluded from this study. If
         * omitted, the study applies to all architectures unless |cpu_architecture|
         * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
         * range of values as cpu_architecture, e.g. [X86_32, ARM64].
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
         *
         * @param index The index of the element to return.
         * @return The excludeCpuArchitecture at the given index.
         */
        @java.lang.Override
        public org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
            getExcludeCpuArchitecture(int index) {
          return instance.getExcludeCpuArchitecture(index);
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will be excluded from this study. If
         * omitted, the study applies to all architectures unless |cpu_architecture|
         * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
         * range of values as cpu_architecture, e.g. [X86_32, ARM64].
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
         *
         * @param index The index to set the value at.
         * @param value The excludeCpuArchitecture to set.
         * @return This builder for chaining.
         */
        public Builder setExcludeCpuArchitecture(
            int index,
            org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value) {
          copyOnWrite();
          instance.setExcludeCpuArchitecture(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will be excluded from this study. If
         * omitted, the study applies to all architectures unless |cpu_architecture|
         * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
         * range of values as cpu_architecture, e.g. [X86_32, ARM64].
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
         *
         * @param value The excludeCpuArchitecture to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeCpuArchitecture(
            org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture value) {
          copyOnWrite();
          instance.addExcludeCpuArchitecture(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will be excluded from this study. If
         * omitted, the study applies to all architectures unless |cpu_architecture|
         * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
         * range of values as cpu_architecture, e.g. [X86_32, ARM64].
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
         *
         * @param values The excludeCpuArchitecture to add.
         * @return This builder for chaining.
         */
        public Builder addAllExcludeCpuArchitecture(
            java.lang.Iterable<
                    ? extends
                        org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture>
                values) {
          copyOnWrite();
          instance.addAllExcludeCpuArchitecture(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * List of CPU architectures that will be excluded from this study. If
         * omitted, the study applies to all architectures unless |cpu_architecture|
         * is specified. Mutually exclusive with |cpu_architecture|. Takes the same
         * range of values as cpu_architecture, e.g. [X86_32, ARM64].
         * </pre>
         *
         * <code>repeated .variations.Study.CpuArchitecture exclude_cpu_architecture = 21;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearExcludeCpuArchitecture() {
          copyOnWrite();
          instance.clearExcludeCpuArchitecture();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where at least
         * one of the signed in users is a member of at least one of the specified
         * groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |exclude_google_group|.
         * </pre>
         *
         * <code>repeated int64 google_group = 22 [packed = true];</code>
         *
         * @return A list containing the googleGroup.
         */
        @java.lang.Override
        public java.util.List<java.lang.Long> getGoogleGroupList() {
          return java.util.Collections.unmodifiableList(instance.getGoogleGroupList());
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where at least
         * one of the signed in users is a member of at least one of the specified
         * groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |exclude_google_group|.
         * </pre>
         *
         * <code>repeated int64 google_group = 22 [packed = true];</code>
         *
         * @return The count of googleGroup.
         */
        @java.lang.Override
        public int getGoogleGroupCount() {
          return instance.getGoogleGroupCount();
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where at least
         * one of the signed in users is a member of at least one of the specified
         * groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |exclude_google_group|.
         * </pre>
         *
         * <code>repeated int64 google_group = 22 [packed = true];</code>
         *
         * @param index The index of the element to return.
         * @return The googleGroup at the given index.
         */
        @java.lang.Override
        public long getGoogleGroup(int index) {
          return instance.getGoogleGroup(index);
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where at least
         * one of the signed in users is a member of at least one of the specified
         * groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |exclude_google_group|.
         * </pre>
         *
         * <code>repeated int64 google_group = 22 [packed = true];</code>
         *
         * @param value The googleGroup to set.
         * @return This builder for chaining.
         */
        public Builder setGoogleGroup(int index, long value) {
          copyOnWrite();
          instance.setGoogleGroup(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where at least
         * one of the signed in users is a member of at least one of the specified
         * groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |exclude_google_group|.
         * </pre>
         *
         * <code>repeated int64 google_group = 22 [packed = true];</code>
         *
         * @param value The googleGroup to add.
         * @return This builder for chaining.
         */
        public Builder addGoogleGroup(long value) {
          copyOnWrite();
          instance.addGoogleGroup(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where at least
         * one of the signed in users is a member of at least one of the specified
         * groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |exclude_google_group|.
         * </pre>
         *
         * <code>repeated int64 google_group = 22 [packed = true];</code>
         *
         * @param values The googleGroup to add.
         * @return This builder for chaining.
         */
        public Builder addAllGoogleGroup(java.lang.Iterable<? extends java.lang.Long> values) {
          copyOnWrite();
          instance.addAllGoogleGroup(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where at least
         * one of the signed in users is a member of at least one of the specified
         * groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |exclude_google_group|.
         * </pre>
         *
         * <code>repeated int64 google_group = 22 [packed = true];</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearGoogleGroup() {
          copyOnWrite();
          instance.clearGoogleGroup();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where none
         * of the signed in users are a member of any of the specified groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |google_group|.
         * </pre>
         *
         * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
         *
         * @return A list containing the excludeGoogleGroup.
         */
        @java.lang.Override
        public java.util.List<java.lang.Long> getExcludeGoogleGroupList() {
          return java.util.Collections.unmodifiableList(instance.getExcludeGoogleGroupList());
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where none
         * of the signed in users are a member of any of the specified groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |google_group|.
         * </pre>
         *
         * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
         *
         * @return The count of excludeGoogleGroup.
         */
        @java.lang.Override
        public int getExcludeGoogleGroupCount() {
          return instance.getExcludeGoogleGroupCount();
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where none
         * of the signed in users are a member of any of the specified groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |google_group|.
         * </pre>
         *
         * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
         *
         * @param index The index of the element to return.
         * @return The excludeGoogleGroup at the given index.
         */
        @java.lang.Override
        public long getExcludeGoogleGroup(int index) {
          return instance.getExcludeGoogleGroup(index);
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where none
         * of the signed in users are a member of any of the specified groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |google_group|.
         * </pre>
         *
         * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
         *
         * @param value The excludeGoogleGroup to set.
         * @return This builder for chaining.
         */
        public Builder setExcludeGoogleGroup(int index, long value) {
          copyOnWrite();
          instance.setExcludeGoogleGroup(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where none
         * of the signed in users are a member of any of the specified groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |google_group|.
         * </pre>
         *
         * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
         *
         * @param value The excludeGoogleGroup to add.
         * @return This builder for chaining.
         */
        public Builder addExcludeGoogleGroup(long value) {
          copyOnWrite();
          instance.addExcludeGoogleGroup(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where none
         * of the signed in users are a member of any of the specified groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |google_group|.
         * </pre>
         *
         * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
         *
         * @param values The excludeGoogleGroup to add.
         * @return This builder for chaining.
         */
        public Builder addAllExcludeGoogleGroup(
            java.lang.Iterable<? extends java.lang.Long> values) {
          copyOnWrite();
          instance.addAllExcludeGoogleGroup(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Specifies that the config should apply only to clients where none
         * of the signed in users are a member of any of the specified groups.
         * The values are the gaia ID of the google group.
         * Mutually exclusive with |google_group|.
         * </pre>
         *
         * <code>repeated int64 exclude_google_group = 23 [packed = true];</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearExcludeGoogleGroup() {
          copyOnWrite();
          instance.clearExcludeGoogleGroup();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:variations.Study.Filter)
      }

      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0,
          java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE:
            {
              return new org.chromium.components.variations.StudyOuterClass.Study.Filter();
            }
          case NEW_BUILDER:
            {
              return new Builder();
            }
          case BUILD_MESSAGE_INFO:
            {
              java.lang.Object[] objects =
                  new java.lang.Object[] {
                    "bitField0_",
                    "startDate_",
                    "minVersion_",
                    "maxVersion_",
                    "channel_",
                    org.chromium.components.variations.StudyOuterClass.Study.Channel
                        .internalGetVerifier(),
                    "platform_",
                    org.chromium.components.variations.StudyOuterClass.Study.Platform
                        .internalGetVerifier(),
                    "locale_",
                    "formFactor_",
                    org.chromium.components.variations.StudyOuterClass.Study.FormFactor
                        .internalGetVerifier(),
                    "hardwareClass_",
                    "excludeHardwareClass_",
                    "country_",
                    "excludeCountry_",
                    "excludeLocale_",
                    "endDate_",
                    "excludeFormFactor_",
                    org.chromium.components.variations.StudyOuterClass.Study.FormFactor
                        .internalGetVerifier(),
                    "isLowEndDevice_",
                    "minOsVersion_",
                    "maxOsVersion_",
                    "isEnterprise_",
                    "policyRestriction_",
                    org.chromium.components.variations.StudyOuterClass.Study.PolicyRestriction
                        .internalGetVerifier(),
                    "cpuArchitecture_",
                    org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
                        .internalGetVerifier(),
                    "excludeCpuArchitecture_",
                    org.chromium.components.variations.StudyOuterClass.Study.CpuArchitecture
                        .internalGetVerifier(),
                    "googleGroup_",
                    "excludeGoogleGroup_",
                  };
              java.lang.String info =
                  "\u0001\u0017\u0000\u0001\u0001\u0017\u0017\u0000\u000e\u0000\u0001\u1002\u0000\u0002"
                      + "\u1008\u0002\u0003\u1008\u0003\u0004\u001e\u0005\u001e\u0006\u001a\u0007\u001e\b"
                      + "\u001a\t\u001a\n\u001a\u000b\u001a\f\u001a\r\u1002\u0001\u000e\u001e\u000f\u1007"
                      + "\u0006\u0010\u1008\u0004\u0011\u1008\u0005\u0012\u1007\u0007\u0013\u100c\b\u0014"
                      + "\u001e\u0015\u001e\u0016%\u0017%";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
          case GET_DEFAULT_INSTANCE:
            {
              return DEFAULT_INSTANCE;
            }
          case GET_PARSER:
            {
              com.google.protobuf.Parser<
                      org.chromium.components.variations.StudyOuterClass.Study.Filter>
                  parser = PARSER;
              if (parser == null) {
                synchronized (
                    org.chromium.components.variations.StudyOuterClass.Study.Filter.class) {
                  parser = PARSER;
                  if (parser == null) {
                    parser =
                        new DefaultInstanceBasedParser<
                            org.chromium.components.variations.StudyOuterClass.Study.Filter>(
                            DEFAULT_INSTANCE);
                    PARSER = parser;
                  }
                }
              }
              return parser;
            }
          case GET_MEMOIZED_IS_INITIALIZED:
            {
              return (byte) 1;
            }
          case SET_MEMOIZED_IS_INITIALIZED:
            {
              return null;
            }
        }
        throw new UnsupportedOperationException();
      }

      // @@protoc_insertion_point(class_scope:variations.Study.Filter)
      private static final org.chromium.components.variations.StudyOuterClass.Study.Filter
          DEFAULT_INSTANCE;

      static {
        Filter defaultInstance = new Filter();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
            Filter.class, defaultInstance);
      }

      public static org.chromium.components.variations.StudyOuterClass.Study.Filter
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Filter> PARSER;

      public static com.google.protobuf.Parser<Filter> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     *
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     *
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return name_;
    }

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     *
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     *
     * @param value The name to set.
     */
    private void setName(java.lang.String value) {
      value.getClass();
      bitField0_ |= 0x00000001;
      name_ = value;
    }

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }

    /**
     *
     *
     * <pre>
     * The name of the study. Should not contain spaces or special characters.
     * Ex: "my_study"
     * </pre>
     *
     * <code>required string name = 1;</code>
     *
     * @param value The bytes for name to set.
     */
    private void setNameBytes(com.google.protobuf.ByteString value) {
      name_ = value.toStringUtf8();
      bitField0_ |= 0x00000001;
    }

    public static final int EXPIRY_DATE_FIELD_NUMBER = 3;
    private long expiryDate_;

    /**
     *
     *
     * <pre>
     * DEPRECATED: Prefer end_date instead.
     * The expiry date of the study in Unix time format. (Seconds since midnight
     * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
     * A study that has expired will be disabled, and users will be assigned
     * groups based on the default_experiment_name. This will take precedence over
     * a corresponding hardcoded field trial in the client.
     * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
     * </pre>
     *
     * <code>optional int64 expiry_date = 3;</code>
     *
     * @return Whether the expiryDate field is set.
     */
    @java.lang.Override
    public boolean hasExpiryDate() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * DEPRECATED: Prefer end_date instead.
     * The expiry date of the study in Unix time format. (Seconds since midnight
     * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
     * A study that has expired will be disabled, and users will be assigned
     * groups based on the default_experiment_name. This will take precedence over
     * a corresponding hardcoded field trial in the client.
     * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
     * </pre>
     *
     * <code>optional int64 expiry_date = 3;</code>
     *
     * @return The expiryDate.
     */
    @java.lang.Override
    public long getExpiryDate() {
      return expiryDate_;
    }

    /**
     *
     *
     * <pre>
     * DEPRECATED: Prefer end_date instead.
     * The expiry date of the study in Unix time format. (Seconds since midnight
     * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
     * A study that has expired will be disabled, and users will be assigned
     * groups based on the default_experiment_name. This will take precedence over
     * a corresponding hardcoded field trial in the client.
     * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
     * </pre>
     *
     * <code>optional int64 expiry_date = 3;</code>
     *
     * @param value The expiryDate to set.
     */
    private void setExpiryDate(long value) {
      bitField0_ |= 0x00000002;
      expiryDate_ = value;
    }

    /**
     *
     *
     * <pre>
     * DEPRECATED: Prefer end_date instead.
     * The expiry date of the study in Unix time format. (Seconds since midnight
     * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
     * A study that has expired will be disabled, and users will be assigned
     * groups based on the default_experiment_name. This will take precedence over
     * a corresponding hardcoded field trial in the client.
     * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
     * </pre>
     *
     * <code>optional int64 expiry_date = 3;</code>
     */
    private void clearExpiryDate() {
      bitField0_ = (bitField0_ & ~0x00000002);
      expiryDate_ = 0L;
    }

    public static final int CONSISTENCY_FIELD_NUMBER = 7;
    private int consistency_;

    /**
     *
     *
     * <pre>
     * Consistency setting for this study. Optional - defaults to SESSION.
     * Ex: PERMANENT
     * </pre>
     *
     * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
     *
     * @return Whether the consistency field is set.
     */
    @java.lang.Override
    public boolean hasConsistency() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     *
     *
     * <pre>
     * Consistency setting for this study. Optional - defaults to SESSION.
     * Ex: PERMANENT
     * </pre>
     *
     * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
     *
     * @return The consistency.
     */
    @java.lang.Override
    public org.chromium.components.variations.StudyOuterClass.Study.Consistency getConsistency() {
      org.chromium.components.variations.StudyOuterClass.Study.Consistency result =
          org.chromium.components.variations.StudyOuterClass.Study.Consistency.forNumber(
              consistency_);
      return result == null
          ? org.chromium.components.variations.StudyOuterClass.Study.Consistency.SESSION
          : result;
    }

    /**
     *
     *
     * <pre>
     * Consistency setting for this study. Optional - defaults to SESSION.
     * Ex: PERMANENT
     * </pre>
     *
     * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
     *
     * @param value The consistency to set.
     */
    private void setConsistency(
        org.chromium.components.variations.StudyOuterClass.Study.Consistency value) {
      consistency_ = value.getNumber();
      bitField0_ |= 0x00000004;
    }

    /**
     *
     *
     * <pre>
     * Consistency setting for this study. Optional - defaults to SESSION.
     * Ex: PERMANENT
     * </pre>
     *
     * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
     */
    private void clearConsistency() {
      bitField0_ = (bitField0_ & ~0x00000004);
      consistency_ = 0;
    }

    public static final int LAYER_FIELD_NUMBER = 16;
    private org.chromium.components.variations.LayerOuterClass.LayerMemberReference layer_;

    /**
     *
     *
     * <pre>
     * Optionally specifies which layer the study is a part of, which will
     * ensure only one study per layer is enabled for a client. A study must
     * specify both the ID of the layer and the ID of the LayerMember within
     * that layer that the study should be associated with.
     * </pre>
     *
     * <code>optional .variations.LayerMemberReference layer = 16;</code>
     */
    @java.lang.Override
    public boolean hasLayer() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optionally specifies which layer the study is a part of, which will
     * ensure only one study per layer is enabled for a client. A study must
     * specify both the ID of the layer and the ID of the LayerMember within
     * that layer that the study should be associated with.
     * </pre>
     *
     * <code>optional .variations.LayerMemberReference layer = 16;</code>
     */
    @java.lang.Override
    public org.chromium.components.variations.LayerOuterClass.LayerMemberReference getLayer() {
      return layer_ == null
          ? org.chromium.components.variations.LayerOuterClass.LayerMemberReference
              .getDefaultInstance()
          : layer_;
    }

    /**
     *
     *
     * <pre>
     * Optionally specifies which layer the study is a part of, which will
     * ensure only one study per layer is enabled for a client. A study must
     * specify both the ID of the layer and the ID of the LayerMember within
     * that layer that the study should be associated with.
     * </pre>
     *
     * <code>optional .variations.LayerMemberReference layer = 16;</code>
     */
    private void setLayer(
        org.chromium.components.variations.LayerOuterClass.LayerMemberReference value) {
      value.getClass();
      layer_ = value;
      bitField0_ |= 0x00000008;
    }

    /**
     *
     *
     * <pre>
     * Optionally specifies which layer the study is a part of, which will
     * ensure only one study per layer is enabled for a client. A study must
     * specify both the ID of the layer and the ID of the LayerMember within
     * that layer that the study should be associated with.
     * </pre>
     *
     * <code>optional .variations.LayerMemberReference layer = 16;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLayer(
        org.chromium.components.variations.LayerOuterClass.LayerMemberReference value) {
      value.getClass();
      if (layer_ != null
          && layer_
              != org.chromium.components.variations.LayerOuterClass.LayerMemberReference
                  .getDefaultInstance()) {
        layer_ =
            org.chromium.components.variations.LayerOuterClass.LayerMemberReference.newBuilder(
                    layer_)
                .mergeFrom(value)
                .buildPartial();
      } else {
        layer_ = value;
      }
      bitField0_ |= 0x00000008;
    }

    /**
     *
     *
     * <pre>
     * Optionally specifies which layer the study is a part of, which will
     * ensure only one study per layer is enabled for a client. A study must
     * specify both the ID of the layer and the ID of the LayerMember within
     * that layer that the study should be associated with.
     * </pre>
     *
     * <code>optional .variations.LayerMemberReference layer = 16;</code>
     */
    private void clearLayer() {
      layer_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int DEFAULT_EXPERIMENT_NAME_FIELD_NUMBER = 8;
    private java.lang.String defaultExperimentName_;

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     *
     * @return Whether the defaultExperimentName field is set.
     */
    @java.lang.Override
    public boolean hasDefaultExperimentName() {
      return ((bitField0_ & 0x00000010) != 0);
    }

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     *
     * @return The defaultExperimentName.
     */
    @java.lang.Override
    public java.lang.String getDefaultExperimentName() {
      return defaultExperimentName_;
    }

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     *
     * @return The bytes for defaultExperimentName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDefaultExperimentNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(defaultExperimentName_);
    }

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     *
     * @param value The defaultExperimentName to set.
     */
    private void setDefaultExperimentName(java.lang.String value) {
      value.getClass();
      bitField0_ |= 0x00000010;
      defaultExperimentName_ = value;
    }

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     */
    private void clearDefaultExperimentName() {
      bitField0_ = (bitField0_ & ~0x00000010);
      defaultExperimentName_ = getDefaultInstance().getDefaultExperimentName();
    }

    /**
     *
     *
     * <pre>
     * Name of the experiment that gets the default experience. This experiment
     * must be included in the list below. If not specified, a generic default
     * experiment name is used.
     * Ex: "default"
     * </pre>
     *
     * <code>optional string default_experiment_name = 8;</code>
     *
     * @param value The bytes for defaultExperimentName to set.
     */
    private void setDefaultExperimentNameBytes(com.google.protobuf.ByteString value) {
      defaultExperimentName_ = value.toStringUtf8();
      bitField0_ |= 0x00000010;
    }

    public static final int EXPERIMENT_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.ProtobufList<
            org.chromium.components.variations.StudyOuterClass.Study.Experiment>
        experiment_;

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Experiment>
        getExperimentList() {
      return experiment_;
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    public java.util.List<
            ? extends org.chromium.components.variations.StudyOuterClass.Study.ExperimentOrBuilder>
        getExperimentOrBuilderList() {
      return experiment_;
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    @java.lang.Override
    public int getExperimentCount() {
      return experiment_.size();
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    @java.lang.Override
    public org.chromium.components.variations.StudyOuterClass.Study.Experiment getExperiment(
        int index) {
      return experiment_.get(index);
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    public org.chromium.components.variations.StudyOuterClass.Study.ExperimentOrBuilder
        getExperimentOrBuilder(int index) {
      return experiment_.get(index);
    }

    private void ensureExperimentIsMutable() {
      com.google.protobuf.Internal.ProtobufList<
              org.chromium.components.variations.StudyOuterClass.Study.Experiment>
          tmp = experiment_;
      if (!tmp.isModifiable()) {
        experiment_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    private void setExperiment(
        int index, org.chromium.components.variations.StudyOuterClass.Study.Experiment value) {
      value.getClass();
      ensureExperimentIsMutable();
      experiment_.set(index, value);
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    private void addExperiment(
        org.chromium.components.variations.StudyOuterClass.Study.Experiment value) {
      value.getClass();
      ensureExperimentIsMutable();
      experiment_.add(value);
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    private void addExperiment(
        int index, org.chromium.components.variations.StudyOuterClass.Study.Experiment value) {
      value.getClass();
      ensureExperimentIsMutable();
      experiment_.add(index, value);
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    private void addAllExperiment(
        java.lang.Iterable<
                ? extends org.chromium.components.variations.StudyOuterClass.Study.Experiment>
            values) {
      ensureExperimentIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(values, experiment_);
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    private void clearExperiment() {
      experiment_ = emptyProtobufList();
    }

    /**
     *
     *
     * <pre>
     * List of experiments in this study. This list should include the default /
     * control experiment.
     * For example, to specify that 99% of users get the default behavior, while
     * 0.5% of users get experience "A" and 0.5% of users get experience "B",
     * specify the values below.
     * Ex: { "default": 990, "A": 5, "B": 5 }
     * </pre>
     *
     * <code>repeated .variations.Study.Experiment experiment = 9;</code>
     */
    private void removeExperiment(int index) {
      ensureExperimentIsMutable();
      experiment_.remove(index);
    }

    public static final int FILTER_FIELD_NUMBER = 10;
    private org.chromium.components.variations.StudyOuterClass.Study.Filter filter_;

    /**
     *
     *
     * <pre>
     * Filtering criteria for this study. A study that is filtered out for a given
     * client is equivalent to that study not being sent at all.
     * </pre>
     *
     * <code>optional .variations.Study.Filter filter = 10;</code>
     */
    @java.lang.Override
    public boolean hasFilter() {
      return ((bitField0_ & 0x00000020) != 0);
    }

    /**
     *
     *
     * <pre>
     * Filtering criteria for this study. A study that is filtered out for a given
     * client is equivalent to that study not being sent at all.
     * </pre>
     *
     * <code>optional .variations.Study.Filter filter = 10;</code>
     */
    @java.lang.Override
    public org.chromium.components.variations.StudyOuterClass.Study.Filter getFilter() {
      return filter_ == null
          ? org.chromium.components.variations.StudyOuterClass.Study.Filter.getDefaultInstance()
          : filter_;
    }

    /**
     *
     *
     * <pre>
     * Filtering criteria for this study. A study that is filtered out for a given
     * client is equivalent to that study not being sent at all.
     * </pre>
     *
     * <code>optional .variations.Study.Filter filter = 10;</code>
     */
    private void setFilter(org.chromium.components.variations.StudyOuterClass.Study.Filter value) {
      value.getClass();
      filter_ = value;
      bitField0_ |= 0x00000020;
    }

    /**
     *
     *
     * <pre>
     * Filtering criteria for this study. A study that is filtered out for a given
     * client is equivalent to that study not being sent at all.
     * </pre>
     *
     * <code>optional .variations.Study.Filter filter = 10;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeFilter(
        org.chromium.components.variations.StudyOuterClass.Study.Filter value) {
      value.getClass();
      if (filter_ != null
          && filter_
              != org.chromium.components.variations.StudyOuterClass.Study.Filter
                  .getDefaultInstance()) {
        filter_ =
            org.chromium.components.variations.StudyOuterClass.Study.Filter.newBuilder(filter_)
                .mergeFrom(value)
                .buildPartial();
      } else {
        filter_ = value;
      }
      bitField0_ |= 0x00000020;
    }

    /**
     *
     *
     * <pre>
     * Filtering criteria for this study. A study that is filtered out for a given
     * client is equivalent to that study not being sent at all.
     * </pre>
     *
     * <code>optional .variations.Study.Filter filter = 10;</code>
     */
    private void clearFilter() {
      filter_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int RANDOMIZATION_SEED_FIELD_NUMBER = 11;
    private int randomizationSeed_;

    /**
     *
     *
     * <pre>
     * Randomization seed to be used when |consistency| is set to PERMANENT. If
     * not specified, randomization will be done using the trial name.
     * </pre>
     *
     * <code>optional uint32 randomization_seed = 11;</code>
     *
     * @return Whether the randomizationSeed field is set.
     */
    @java.lang.Override
    public boolean hasRandomizationSeed() {
      return ((bitField0_ & 0x00000040) != 0);
    }

    /**
     *
     *
     * <pre>
     * Randomization seed to be used when |consistency| is set to PERMANENT. If
     * not specified, randomization will be done using the trial name.
     * </pre>
     *
     * <code>optional uint32 randomization_seed = 11;</code>
     *
     * @return The randomizationSeed.
     */
    @java.lang.Override
    public int getRandomizationSeed() {
      return randomizationSeed_;
    }

    /**
     *
     *
     * <pre>
     * Randomization seed to be used when |consistency| is set to PERMANENT. If
     * not specified, randomization will be done using the trial name.
     * </pre>
     *
     * <code>optional uint32 randomization_seed = 11;</code>
     *
     * @param value The randomizationSeed to set.
     */
    private void setRandomizationSeed(int value) {
      bitField0_ |= 0x00000040;
      randomizationSeed_ = value;
    }

    /**
     *
     *
     * <pre>
     * Randomization seed to be used when |consistency| is set to PERMANENT. If
     * not specified, randomization will be done using the trial name.
     * </pre>
     *
     * <code>optional uint32 randomization_seed = 11;</code>
     */
    private void clearRandomizationSeed() {
      bitField0_ = (bitField0_ & ~0x00000040);
      randomizationSeed_ = 0;
    }

    public static final int ACTIVATION_TYPE_FIELD_NUMBER = 12;
    private int activationType_;

    /**
     *
     *
     * <pre>
     * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
     * </pre>
     *
     * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
     *
     * @return Whether the activationType field is set.
     */
    @java.lang.Override
    public boolean hasActivationType() {
      return ((bitField0_ & 0x00000080) != 0);
    }

    /**
     *
     *
     * <pre>
     * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
     * </pre>
     *
     * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
     *
     * @return The activationType.
     */
    @java.lang.Override
    public org.chromium.components.variations.StudyOuterClass.Study.ActivationType
        getActivationType() {
      org.chromium.components.variations.StudyOuterClass.Study.ActivationType result =
          org.chromium.components.variations.StudyOuterClass.Study.ActivationType.forNumber(
              activationType_);
      return result == null
          ? org.chromium.components.variations.StudyOuterClass.Study.ActivationType
              .ACTIVATE_ON_QUERY
          : result;
    }

    /**
     *
     *
     * <pre>
     * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
     * </pre>
     *
     * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
     *
     * @param value The activationType to set.
     */
    private void setActivationType(
        org.chromium.components.variations.StudyOuterClass.Study.ActivationType value) {
      activationType_ = value.getNumber();
      bitField0_ |= 0x00000080;
    }

    /**
     *
     *
     * <pre>
     * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
     * </pre>
     *
     * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
     */
    private void clearActivationType() {
      bitField0_ = (bitField0_ & ~0x00000080);
      activationType_ = 0;
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(
        org.chromium.components.variations.StudyOuterClass.Study prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * This defines the Protocol Buffer representation of a Chrome Variations study
     * as sent to clients of the Variations server.
     * Next tag: 13
     * </pre>
     *
     * Protobuf type {@code variations.Study}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.variations.StudyOuterClass.Study, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:variations.Study)
        org.chromium.components.variations.StudyOuterClass.StudyOrBuilder {
      // Construct using org.chromium.components.variations.StudyOuterClass.Study.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * The name of the study. Should not contain spaces or special characters.
       * Ex: "my_study"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return instance.hasName();
      }

      /**
       *
       *
       * <pre>
       * The name of the study. Should not contain spaces or special characters.
       * Ex: "my_study"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        return instance.getName();
      }

      /**
       *
       *
       * <pre>
       * The name of the study. Should not contain spaces or special characters.
       * Ex: "my_study"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getNameBytes() {
        return instance.getNameBytes();
      }

      /**
       *
       *
       * <pre>
       * The name of the study. Should not contain spaces or special characters.
       * Ex: "my_study"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * The name of the study. Should not contain spaces or special characters.
       * Ex: "my_study"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }

      /**
       *
       *
       * <pre>
       * The name of the study. Should not contain spaces or special characters.
       * Ex: "my_study"
       * </pre>
       *
       * <code>required string name = 1;</code>
       *
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * DEPRECATED: Prefer end_date instead.
       * The expiry date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * A study that has expired will be disabled, and users will be assigned
       * groups based on the default_experiment_name. This will take precedence over
       * a corresponding hardcoded field trial in the client.
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 expiry_date = 3;</code>
       *
       * @return Whether the expiryDate field is set.
       */
      @java.lang.Override
      public boolean hasExpiryDate() {
        return instance.hasExpiryDate();
      }

      /**
       *
       *
       * <pre>
       * DEPRECATED: Prefer end_date instead.
       * The expiry date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * A study that has expired will be disabled, and users will be assigned
       * groups based on the default_experiment_name. This will take precedence over
       * a corresponding hardcoded field trial in the client.
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 expiry_date = 3;</code>
       *
       * @return The expiryDate.
       */
      @java.lang.Override
      public long getExpiryDate() {
        return instance.getExpiryDate();
      }

      /**
       *
       *
       * <pre>
       * DEPRECATED: Prefer end_date instead.
       * The expiry date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * A study that has expired will be disabled, and users will be assigned
       * groups based on the default_experiment_name. This will take precedence over
       * a corresponding hardcoded field trial in the client.
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 expiry_date = 3;</code>
       *
       * @param value The expiryDate to set.
       * @return This builder for chaining.
       */
      public Builder setExpiryDate(long value) {
        copyOnWrite();
        instance.setExpiryDate(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * DEPRECATED: Prefer end_date instead.
       * The expiry date of the study in Unix time format. (Seconds since midnight
       * January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
       * A study that has expired will be disabled, and users will be assigned
       * groups based on the default_experiment_name. This will take precedence over
       * a corresponding hardcoded field trial in the client.
       * Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
       * </pre>
       *
       * <code>optional int64 expiry_date = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearExpiryDate() {
        copyOnWrite();
        instance.clearExpiryDate();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Consistency setting for this study. Optional - defaults to SESSION.
       * Ex: PERMANENT
       * </pre>
       *
       * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
       *
       * @return Whether the consistency field is set.
       */
      @java.lang.Override
      public boolean hasConsistency() {
        return instance.hasConsistency();
      }

      /**
       *
       *
       * <pre>
       * Consistency setting for this study. Optional - defaults to SESSION.
       * Ex: PERMANENT
       * </pre>
       *
       * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
       *
       * @return The consistency.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Consistency getConsistency() {
        return instance.getConsistency();
      }

      /**
       *
       *
       * <pre>
       * Consistency setting for this study. Optional - defaults to SESSION.
       * Ex: PERMANENT
       * </pre>
       *
       * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
       *
       * @param value The enum numeric value on the wire for consistency to set.
       * @return This builder for chaining.
       */
      public Builder setConsistency(
          org.chromium.components.variations.StudyOuterClass.Study.Consistency value) {
        copyOnWrite();
        instance.setConsistency(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Consistency setting for this study. Optional - defaults to SESSION.
       * Ex: PERMANENT
       * </pre>
       *
       * <code>optional .variations.Study.Consistency consistency = 7 [default = SESSION];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearConsistency() {
        copyOnWrite();
        instance.clearConsistency();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optionally specifies which layer the study is a part of, which will
       * ensure only one study per layer is enabled for a client. A study must
       * specify both the ID of the layer and the ID of the LayerMember within
       * that layer that the study should be associated with.
       * </pre>
       *
       * <code>optional .variations.LayerMemberReference layer = 16;</code>
       */
      @java.lang.Override
      public boolean hasLayer() {
        return instance.hasLayer();
      }

      /**
       *
       *
       * <pre>
       * Optionally specifies which layer the study is a part of, which will
       * ensure only one study per layer is enabled for a client. A study must
       * specify both the ID of the layer and the ID of the LayerMember within
       * that layer that the study should be associated with.
       * </pre>
       *
       * <code>optional .variations.LayerMemberReference layer = 16;</code>
       */
      @java.lang.Override
      public org.chromium.components.variations.LayerOuterClass.LayerMemberReference getLayer() {
        return instance.getLayer();
      }

      /**
       *
       *
       * <pre>
       * Optionally specifies which layer the study is a part of, which will
       * ensure only one study per layer is enabled for a client. A study must
       * specify both the ID of the layer and the ID of the LayerMember within
       * that layer that the study should be associated with.
       * </pre>
       *
       * <code>optional .variations.LayerMemberReference layer = 16;</code>
       */
      public Builder setLayer(
          org.chromium.components.variations.LayerOuterClass.LayerMemberReference value) {
        copyOnWrite();
        instance.setLayer(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optionally specifies which layer the study is a part of, which will
       * ensure only one study per layer is enabled for a client. A study must
       * specify both the ID of the layer and the ID of the LayerMember within
       * that layer that the study should be associated with.
       * </pre>
       *
       * <code>optional .variations.LayerMemberReference layer = 16;</code>
       */
      public Builder setLayer(
          org.chromium.components.variations.LayerOuterClass.LayerMemberReference.Builder
              builderForValue) {
        copyOnWrite();
        instance.setLayer(builderForValue.build());
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optionally specifies which layer the study is a part of, which will
       * ensure only one study per layer is enabled for a client. A study must
       * specify both the ID of the layer and the ID of the LayerMember within
       * that layer that the study should be associated with.
       * </pre>
       *
       * <code>optional .variations.LayerMemberReference layer = 16;</code>
       */
      public Builder mergeLayer(
          org.chromium.components.variations.LayerOuterClass.LayerMemberReference value) {
        copyOnWrite();
        instance.mergeLayer(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optionally specifies which layer the study is a part of, which will
       * ensure only one study per layer is enabled for a client. A study must
       * specify both the ID of the layer and the ID of the LayerMember within
       * that layer that the study should be associated with.
       * </pre>
       *
       * <code>optional .variations.LayerMemberReference layer = 16;</code>
       */
      public Builder clearLayer() {
        copyOnWrite();
        instance.clearLayer();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Name of the experiment that gets the default experience. This experiment
       * must be included in the list below. If not specified, a generic default
       * experiment name is used.
       * Ex: "default"
       * </pre>
       *
       * <code>optional string default_experiment_name = 8;</code>
       *
       * @return Whether the defaultExperimentName field is set.
       */
      @java.lang.Override
      public boolean hasDefaultExperimentName() {
        return instance.hasDefaultExperimentName();
      }

      /**
       *
       *
       * <pre>
       * Name of the experiment that gets the default experience. This experiment
       * must be included in the list below. If not specified, a generic default
       * experiment name is used.
       * Ex: "default"
       * </pre>
       *
       * <code>optional string default_experiment_name = 8;</code>
       *
       * @return The defaultExperimentName.
       */
      @java.lang.Override
      public java.lang.String getDefaultExperimentName() {
        return instance.getDefaultExperimentName();
      }

      /**
       *
       *
       * <pre>
       * Name of the experiment that gets the default experience. This experiment
       * must be included in the list below. If not specified, a generic default
       * experiment name is used.
       * Ex: "default"
       * </pre>
       *
       * <code>optional string default_experiment_name = 8;</code>
       *
       * @return The bytes for defaultExperimentName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDefaultExperimentNameBytes() {
        return instance.getDefaultExperimentNameBytes();
      }

      /**
       *
       *
       * <pre>
       * Name of the experiment that gets the default experience. This experiment
       * must be included in the list below. If not specified, a generic default
       * experiment name is used.
       * Ex: "default"
       * </pre>
       *
       * <code>optional string default_experiment_name = 8;</code>
       *
       * @param value The defaultExperimentName to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultExperimentName(java.lang.String value) {
        copyOnWrite();
        instance.setDefaultExperimentName(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Name of the experiment that gets the default experience. This experiment
       * must be included in the list below. If not specified, a generic default
       * experiment name is used.
       * Ex: "default"
       * </pre>
       *
       * <code>optional string default_experiment_name = 8;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearDefaultExperimentName() {
        copyOnWrite();
        instance.clearDefaultExperimentName();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Name of the experiment that gets the default experience. This experiment
       * must be included in the list below. If not specified, a generic default
       * experiment name is used.
       * Ex: "default"
       * </pre>
       *
       * <code>optional string default_experiment_name = 8;</code>
       *
       * @param value The bytes for defaultExperimentName to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultExperimentNameBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDefaultExperimentNameBytes(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.variations.StudyOuterClass.Study.Experiment>
          getExperimentList() {
        return java.util.Collections.unmodifiableList(instance.getExperimentList());
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      @java.lang.Override
      public int getExperimentCount() {
        return instance.getExperimentCount();
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Experiment getExperiment(
          int index) {
        return instance.getExperiment(index);
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder setExperiment(
          int index, org.chromium.components.variations.StudyOuterClass.Study.Experiment value) {
        copyOnWrite();
        instance.setExperiment(index, value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder setExperiment(
          int index,
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.Builder
              builderForValue) {
        copyOnWrite();
        instance.setExperiment(index, builderForValue.build());
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder addExperiment(
          org.chromium.components.variations.StudyOuterClass.Study.Experiment value) {
        copyOnWrite();
        instance.addExperiment(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder addExperiment(
          int index, org.chromium.components.variations.StudyOuterClass.Study.Experiment value) {
        copyOnWrite();
        instance.addExperiment(index, value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder addExperiment(
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.Builder
              builderForValue) {
        copyOnWrite();
        instance.addExperiment(builderForValue.build());
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder addExperiment(
          int index,
          org.chromium.components.variations.StudyOuterClass.Study.Experiment.Builder
              builderForValue) {
        copyOnWrite();
        instance.addExperiment(index, builderForValue.build());
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder addAllExperiment(
          java.lang.Iterable<
                  ? extends org.chromium.components.variations.StudyOuterClass.Study.Experiment>
              values) {
        copyOnWrite();
        instance.addAllExperiment(values);
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder clearExperiment() {
        copyOnWrite();
        instance.clearExperiment();
        return this;
      }

      /**
       *
       *
       * <pre>
       * List of experiments in this study. This list should include the default /
       * control experiment.
       * For example, to specify that 99% of users get the default behavior, while
       * 0.5% of users get experience "A" and 0.5% of users get experience "B",
       * specify the values below.
       * Ex: { "default": 990, "A": 5, "B": 5 }
       * </pre>
       *
       * <code>repeated .variations.Study.Experiment experiment = 9;</code>
       */
      public Builder removeExperiment(int index) {
        copyOnWrite();
        instance.removeExperiment(index);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Filtering criteria for this study. A study that is filtered out for a given
       * client is equivalent to that study not being sent at all.
       * </pre>
       *
       * <code>optional .variations.Study.Filter filter = 10;</code>
       */
      @java.lang.Override
      public boolean hasFilter() {
        return instance.hasFilter();
      }

      /**
       *
       *
       * <pre>
       * Filtering criteria for this study. A study that is filtered out for a given
       * client is equivalent to that study not being sent at all.
       * </pre>
       *
       * <code>optional .variations.Study.Filter filter = 10;</code>
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.Filter getFilter() {
        return instance.getFilter();
      }

      /**
       *
       *
       * <pre>
       * Filtering criteria for this study. A study that is filtered out for a given
       * client is equivalent to that study not being sent at all.
       * </pre>
       *
       * <code>optional .variations.Study.Filter filter = 10;</code>
       */
      public Builder setFilter(
          org.chromium.components.variations.StudyOuterClass.Study.Filter value) {
        copyOnWrite();
        instance.setFilter(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Filtering criteria for this study. A study that is filtered out for a given
       * client is equivalent to that study not being sent at all.
       * </pre>
       *
       * <code>optional .variations.Study.Filter filter = 10;</code>
       */
      public Builder setFilter(
          org.chromium.components.variations.StudyOuterClass.Study.Filter.Builder builderForValue) {
        copyOnWrite();
        instance.setFilter(builderForValue.build());
        return this;
      }

      /**
       *
       *
       * <pre>
       * Filtering criteria for this study. A study that is filtered out for a given
       * client is equivalent to that study not being sent at all.
       * </pre>
       *
       * <code>optional .variations.Study.Filter filter = 10;</code>
       */
      public Builder mergeFilter(
          org.chromium.components.variations.StudyOuterClass.Study.Filter value) {
        copyOnWrite();
        instance.mergeFilter(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Filtering criteria for this study. A study that is filtered out for a given
       * client is equivalent to that study not being sent at all.
       * </pre>
       *
       * <code>optional .variations.Study.Filter filter = 10;</code>
       */
      public Builder clearFilter() {
        copyOnWrite();
        instance.clearFilter();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Randomization seed to be used when |consistency| is set to PERMANENT. If
       * not specified, randomization will be done using the trial name.
       * </pre>
       *
       * <code>optional uint32 randomization_seed = 11;</code>
       *
       * @return Whether the randomizationSeed field is set.
       */
      @java.lang.Override
      public boolean hasRandomizationSeed() {
        return instance.hasRandomizationSeed();
      }

      /**
       *
       *
       * <pre>
       * Randomization seed to be used when |consistency| is set to PERMANENT. If
       * not specified, randomization will be done using the trial name.
       * </pre>
       *
       * <code>optional uint32 randomization_seed = 11;</code>
       *
       * @return The randomizationSeed.
       */
      @java.lang.Override
      public int getRandomizationSeed() {
        return instance.getRandomizationSeed();
      }

      /**
       *
       *
       * <pre>
       * Randomization seed to be used when |consistency| is set to PERMANENT. If
       * not specified, randomization will be done using the trial name.
       * </pre>
       *
       * <code>optional uint32 randomization_seed = 11;</code>
       *
       * @param value The randomizationSeed to set.
       * @return This builder for chaining.
       */
      public Builder setRandomizationSeed(int value) {
        copyOnWrite();
        instance.setRandomizationSeed(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Randomization seed to be used when |consistency| is set to PERMANENT. If
       * not specified, randomization will be done using the trial name.
       * </pre>
       *
       * <code>optional uint32 randomization_seed = 11;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearRandomizationSeed() {
        copyOnWrite();
        instance.clearRandomizationSeed();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
       * </pre>
       *
       * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
       *
       * @return Whether the activationType field is set.
       */
      @java.lang.Override
      public boolean hasActivationType() {
        return instance.hasActivationType();
      }

      /**
       *
       *
       * <pre>
       * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
       * </pre>
       *
       * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
       *
       * @return The activationType.
       */
      @java.lang.Override
      public org.chromium.components.variations.StudyOuterClass.Study.ActivationType
          getActivationType() {
        return instance.getActivationType();
      }

      /**
       *
       *
       * <pre>
       * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
       * </pre>
       *
       * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
       *
       * @param value The enum numeric value on the wire for activationType to set.
       * @return This builder for chaining.
       */
      public Builder setActivationType(
          org.chromium.components.variations.StudyOuterClass.Study.ActivationType value) {
        copyOnWrite();
        instance.setActivationType(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
       * </pre>
       *
       * <code>optional .variations.Study.ActivationType activation_type = 12;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearActivationType() {
        copyOnWrite();
        instance.clearActivationType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:variations.Study)
    }

    private byte memoizedIsInitialized = 2;

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new org.chromium.components.variations.StudyOuterClass.Study();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "bitField0_",
                  "name_",
                  "expiryDate_",
                  "consistency_",
                  org.chromium.components.variations.StudyOuterClass.Study.Consistency
                      .internalGetVerifier(),
                  "defaultExperimentName_",
                  "experiment_",
                  org.chromium.components.variations.StudyOuterClass.Study.Experiment.class,
                  "filter_",
                  "randomizationSeed_",
                  "activationType_",
                  org.chromium.components.variations.StudyOuterClass.Study.ActivationType
                      .internalGetVerifier(),
                  "layer_",
                };
            java.lang.String info =
                "\u0001\t\u0000\u0001\u0001\u0010\t\u0000\u0001\u0002\u0001\u1508\u0000\u0003\u1002"
                    + "\u0001\u0007\u100c\u0002\b\u1008\u0004\t\u041b\n\u1009\u0005\u000b\u100b\u0006\f"
                    + "\u100c\u0007\u0010\u1009\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<org.chromium.components.variations.StudyOuterClass.Study>
                parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.variations.StudyOuterClass.Study.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<
                          org.chromium.components.variations.StudyOuterClass.Study>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return memoizedIsInitialized;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:variations.Study)
    private static final org.chromium.components.variations.StudyOuterClass.Study DEFAULT_INSTANCE;

    static {
      Study defaultInstance = new Study();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Study.class, defaultInstance);
    }

    public static org.chromium.components.variations.StudyOuterClass.Study getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Study> PARSER;

    public static com.google.protobuf.Parser<Study> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
