// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_variations.proto

package org.chromium.components.variations;

public final class ClientVariationsOuterClass {
  private ClientVariationsOuterClass() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public interface ClientVariationsOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:variations.ClientVariations)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @return A list containing the variationId.
     */
    java.util.List<java.lang.Integer> getVariationIdList();

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @return The count of variationId.
     */
    int getVariationIdCount();

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The variationId at the given index.
     */
    int getVariationId(int index);

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @return A list containing the triggerVariationId.
     */
    java.util.List<java.lang.Integer> getTriggerVariationIdList();

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @return The count of triggerVariationId.
     */
    int getTriggerVariationIdCount();

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @param index The index of the element to return.
     * @return The triggerVariationId at the given index.
     */
    int getTriggerVariationId(int index);
  }

  /**
   *
   *
   * <pre>
   * NOTE: If you update this proto, you'll also need to rebuild the JS parser for
   * devtools. See //components/variations/proto/devtools/BUILD.gn for details.
   * </pre>
   *
   * Protobuf type {@code variations.ClientVariations}
   */
  public static final class ClientVariations
      extends com.google.protobuf.GeneratedMessageLite<ClientVariations, ClientVariations.Builder>
      implements
      // @@protoc_insertion_point(message_implements:variations.ClientVariations)
      ClientVariationsOrBuilder {
    private ClientVariations() {
      variationId_ = emptyIntList();
      triggerVariationId_ = emptyIntList();
    }

    public static final int VARIATION_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList variationId_;

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @return A list containing the variationId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer> getVariationIdList() {
      return variationId_;
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @return The count of variationId.
     */
    @java.lang.Override
    public int getVariationIdCount() {
      return variationId_.size();
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The variationId at the given index.
     */
    @java.lang.Override
    public int getVariationId(int index) {
      return variationId_.getInt(index);
    }

    private void ensureVariationIdIsMutable() {
      com.google.protobuf.Internal.IntList tmp = variationId_;
      if (!tmp.isModifiable()) {
        variationId_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @param index The index to set the value at.
     * @param value The variationId to set.
     */
    private void setVariationId(int index, int value) {
      ensureVariationIdIsMutable();
      variationId_.setInt(index, value);
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @param value The variationId to add.
     */
    private void addVariationId(int value) {
      ensureVariationIdIsMutable();
      variationId_.addInt(value);
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     *
     * @param values The variationId to add.
     */
    private void addAllVariationId(java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureVariationIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(values, variationId_);
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs.
     * </pre>
     *
     * <code>repeated int32 variation_id = 1;</code>
     */
    private void clearVariationId() {
      variationId_ = emptyIntList();
    }

    public static final int TRIGGER_VARIATION_ID_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList triggerVariationId_;

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @return A list containing the triggerVariationId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer> getTriggerVariationIdList() {
      return triggerVariationId_;
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @return The count of triggerVariationId.
     */
    @java.lang.Override
    public int getTriggerVariationIdCount() {
      return triggerVariationId_.size();
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @param index The index of the element to return.
     * @return The triggerVariationId at the given index.
     */
    @java.lang.Override
    public int getTriggerVariationId(int index) {
      return triggerVariationId_.getInt(index);
    }

    private void ensureTriggerVariationIdIsMutable() {
      com.google.protobuf.Internal.IntList tmp = triggerVariationId_;
      if (!tmp.isModifiable()) {
        triggerVariationId_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @param index The index to set the value at.
     * @param value The triggerVariationId to set.
     */
    private void setTriggerVariationId(int index, int value) {
      ensureTriggerVariationIdIsMutable();
      triggerVariationId_.setInt(index, value);
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @param value The triggerVariationId to add.
     */
    private void addTriggerVariationId(int value) {
      ensureTriggerVariationIdIsMutable();
      triggerVariationId_.addInt(value);
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     *
     * @param values The triggerVariationId to add.
     */
    private void addAllTriggerVariationId(java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureTriggerVariationIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(values, triggerVariationId_);
    }

    /**
     *
     *
     * <pre>
     * Active client experiment variation IDs that trigger server-side behavior.
     * </pre>
     *
     * <code>repeated int32 trigger_variation_id = 3;</code>
     */
    private void clearTriggerVariationId() {
      triggerVariationId_ = emptyIntList();
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(
        org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * NOTE: If you update this proto, you'll also need to rebuild the JS parser for
     * devtools. See //components/variations/proto/devtools/BUILD.gn for details.
     * </pre>
     *
     * Protobuf type {@code variations.ClientVariations}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:variations.ClientVariations)
        org.chromium.components.variations.ClientVariationsOuterClass.ClientVariationsOrBuilder {
      // Construct using
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs.
       * </pre>
       *
       * <code>repeated int32 variation_id = 1;</code>
       *
       * @return A list containing the variationId.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer> getVariationIdList() {
        return java.util.Collections.unmodifiableList(instance.getVariationIdList());
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs.
       * </pre>
       *
       * <code>repeated int32 variation_id = 1;</code>
       *
       * @return The count of variationId.
       */
      @java.lang.Override
      public int getVariationIdCount() {
        return instance.getVariationIdCount();
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs.
       * </pre>
       *
       * <code>repeated int32 variation_id = 1;</code>
       *
       * @param index The index of the element to return.
       * @return The variationId at the given index.
       */
      @java.lang.Override
      public int getVariationId(int index) {
        return instance.getVariationId(index);
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs.
       * </pre>
       *
       * <code>repeated int32 variation_id = 1;</code>
       *
       * @param value The variationId to set.
       * @return This builder for chaining.
       */
      public Builder setVariationId(int index, int value) {
        copyOnWrite();
        instance.setVariationId(index, value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs.
       * </pre>
       *
       * <code>repeated int32 variation_id = 1;</code>
       *
       * @param value The variationId to add.
       * @return This builder for chaining.
       */
      public Builder addVariationId(int value) {
        copyOnWrite();
        instance.addVariationId(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs.
       * </pre>
       *
       * <code>repeated int32 variation_id = 1;</code>
       *
       * @param values The variationId to add.
       * @return This builder for chaining.
       */
      public Builder addAllVariationId(java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllVariationId(values);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs.
       * </pre>
       *
       * <code>repeated int32 variation_id = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearVariationId() {
        copyOnWrite();
        instance.clearVariationId();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs that trigger server-side behavior.
       * </pre>
       *
       * <code>repeated int32 trigger_variation_id = 3;</code>
       *
       * @return A list containing the triggerVariationId.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer> getTriggerVariationIdList() {
        return java.util.Collections.unmodifiableList(instance.getTriggerVariationIdList());
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs that trigger server-side behavior.
       * </pre>
       *
       * <code>repeated int32 trigger_variation_id = 3;</code>
       *
       * @return The count of triggerVariationId.
       */
      @java.lang.Override
      public int getTriggerVariationIdCount() {
        return instance.getTriggerVariationIdCount();
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs that trigger server-side behavior.
       * </pre>
       *
       * <code>repeated int32 trigger_variation_id = 3;</code>
       *
       * @param index The index of the element to return.
       * @return The triggerVariationId at the given index.
       */
      @java.lang.Override
      public int getTriggerVariationId(int index) {
        return instance.getTriggerVariationId(index);
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs that trigger server-side behavior.
       * </pre>
       *
       * <code>repeated int32 trigger_variation_id = 3;</code>
       *
       * @param value The triggerVariationId to set.
       * @return This builder for chaining.
       */
      public Builder setTriggerVariationId(int index, int value) {
        copyOnWrite();
        instance.setTriggerVariationId(index, value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs that trigger server-side behavior.
       * </pre>
       *
       * <code>repeated int32 trigger_variation_id = 3;</code>
       *
       * @param value The triggerVariationId to add.
       * @return This builder for chaining.
       */
      public Builder addTriggerVariationId(int value) {
        copyOnWrite();
        instance.addTriggerVariationId(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs that trigger server-side behavior.
       * </pre>
       *
       * <code>repeated int32 trigger_variation_id = 3;</code>
       *
       * @param values The triggerVariationId to add.
       * @return This builder for chaining.
       */
      public Builder addAllTriggerVariationId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllTriggerVariationId(values);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Active client experiment variation IDs that trigger server-side behavior.
       * </pre>
       *
       * <code>repeated int32 trigger_variation_id = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearTriggerVariationId() {
        copyOnWrite();
        instance.clearTriggerVariationId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:variations.ClientVariations)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new org.chromium.components.variations.ClientVariationsOuterClass
                .ClientVariations();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "variationId_", "triggerVariationId_",
                };
            java.lang.String info =
                "\u0001\u0002\u0000\u0000\u0001\u0003\u0002\u0000\u0002\u0000\u0001\u0016\u0003\u0016"
                    + "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<
                    org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations>
                parser = PARSER;
            if (parser == null) {
              synchronized (
                  org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
                      .class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<
                          org.chromium.components.variations.ClientVariationsOuterClass
                              .ClientVariations>(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:variations.ClientVariations)
    private static final org.chromium.components.variations.ClientVariationsOuterClass
            .ClientVariations
        DEFAULT_INSTANCE;

    static {
      ClientVariations defaultInstance = new ClientVariations();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          ClientVariations.class, defaultInstance);
    }

    public static org.chromium.components.variations.ClientVariationsOuterClass.ClientVariations
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ClientVariations> PARSER;

    public static com.google.protobuf.Parser<ClientVariations> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
