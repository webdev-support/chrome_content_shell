// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: layer.proto

package org.chromium.components.variations;

public final class LayerOuterClass {
  private LayerOuterClass() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public interface LayerOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:variations.Layer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * ID for the layer, must be unique across all layers. Studies will specify
     * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     *
     * @return Whether the id field is set.
     */
    boolean hasId();

    /**
     *
     *
     * <pre>
     * ID for the layer, must be unique across all layers. Studies will specify
     * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     *
     * @return The id.
     */
    int getId();

    /**
     *
     *
     * <pre>
     * Total number of slots within the layer. There are constraints on the number
     * of slots when a low entropy source is used (100, initially) to alleviate
     * skew in the bucket populations.
     * </pre>
     *
     * <code>optional uint32 num_slots = 2;</code>
     *
     * @return Whether the numSlots field is set.
     */
    boolean hasNumSlots();

    /**
     *
     *
     * <pre>
     * Total number of slots within the layer. There are constraints on the number
     * of slots when a low entropy source is used (100, initially) to alleviate
     * skew in the bucket populations.
     * </pre>
     *
     * <code>optional uint32 num_slots = 2;</code>
     *
     * @return The numSlots.
     */
    int getNumSlots();

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    java.util.List<org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>
        getMembersList();

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    org.chromium.components.variations.LayerOuterClass.Layer.LayerMember getMembers(int index);

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    int getMembersCount();

    /**
     *
     *
     * <pre>
     * A salt which is used as an input to a hash function together with the
     * output of the chosen entropy source, to choose an active slot within the
     * layer. If salt is unset or 0, the layer id will be used instead.
     * </pre>
     *
     * <code>optional uint32 salt = 4;</code>
     *
     * @return Whether the salt field is set.
     */
    boolean hasSalt();

    /**
     *
     *
     * <pre>
     * A salt which is used as an input to a hash function together with the
     * output of the chosen entropy source, to choose an active slot within the
     * layer. If salt is unset or 0, the layer id will be used instead.
     * </pre>
     *
     * <code>optional uint32 salt = 4;</code>
     *
     * @return The salt.
     */
    int getSalt();

    /**
     *
     *
     * <pre>
     * Which of the above entropy modes should be used to select a slot.
     * </pre>
     *
     * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
     *
     * @return Whether the entropyMode field is set.
     */
    boolean hasEntropyMode();

    /**
     *
     *
     * <pre>
     * Which of the above entropy modes should be used to select a slot.
     * </pre>
     *
     * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
     *
     * @return The entropyMode.
     */
    org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode getEntropyMode();
  }

  /**
   *
   *
   * <pre>
   * Next tag: 6
   * </pre>
   *
   * Protobuf type {@code variations.Layer}
   */
  public static final class Layer
      extends com.google.protobuf.GeneratedMessageLite<Layer, Layer.Builder>
      implements
      // @@protoc_insertion_point(message_implements:variations.Layer)
      LayerOrBuilder {
    private Layer() {
      members_ = emptyProtobufList();
    }

    /** Protobuf enum {@code variations.Layer.EntropyMode} */
    public enum EntropyMode implements com.google.protobuf.Internal.EnumLite {
      /**
       *
       *
       * <pre>
       * Use the default entropy source when selecting slots. This will use the
       * high entropy source for the clients that have it, and falls back to the
       * low entropy source for other clients.
       * </pre>
       *
       * <code>DEFAULT = 0;</code>
       */
      DEFAULT(0),
      /**
       *
       *
       * <pre>
       * Use the low entropy source.
       * </pre>
       *
       * <code>LOW = 1;</code>
       */
      LOW(1),
      /**
       *
       *
       * <pre>
       * Use the limited entropy source.
       * </pre>
       *
       * <code>LIMITED = 2;</code>
       */
      LIMITED(2),
      ;

      /**
       *
       *
       * <pre>
       * Use the default entropy source when selecting slots. This will use the
       * high entropy source for the clients that have it, and falls back to the
       * low entropy source for other clients.
       * </pre>
       *
       * <code>DEFAULT = 0;</code>
       */
      public static final int DEFAULT_VALUE = 0;

      /**
       *
       *
       * <pre>
       * Use the low entropy source.
       * </pre>
       *
       * <code>LOW = 1;</code>
       */
      public static final int LOW_VALUE = 1;

      /**
       *
       *
       * <pre>
       * Use the limited entropy source.
       * </pre>
       *
       * <code>LIMITED = 2;</code>
       */
      public static final int LIMITED_VALUE = 2;

      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EntropyMode valueOf(int value) {
        return forNumber(value);
      }

      public static EntropyMode forNumber(int value) {
        switch (value) {
          case 0:
            return DEFAULT;
          case 1:
            return LOW;
          case 2:
            return LIMITED;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EntropyMode> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<EntropyMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EntropyMode>() {
            @java.lang.Override
            public EntropyMode findValueByNumber(int number) {
              return EntropyMode.forNumber(number);
            }
          };

      public static com.google.protobuf.Internal.EnumVerifier internalGetVerifier() {
        return EntropyModeVerifier.INSTANCE;
      }

      private static final class EntropyModeVerifier
          implements com.google.protobuf.Internal.EnumVerifier {
        static final com.google.protobuf.Internal.EnumVerifier INSTANCE = new EntropyModeVerifier();

        @java.lang.Override
        public boolean isInRange(int number) {
          return EntropyMode.forNumber(number) != null;
        }
      }
      ;

      private final int value;

      private EntropyMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:variations.Layer.EntropyMode)
    }

    public interface LayerMemberOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:variations.Layer.LayerMember)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       *
       *
       * <pre>
       * An id (unique within the Layer) that studies will use to refer to this
       * particular member.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @return Whether the id field is set.
       */
      boolean hasId();

      /**
       *
       *
       * <pre>
       * An id (unique within the Layer) that studies will use to refer to this
       * particular member.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @return The id.
       */
      int getId();

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      java.util.List<org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange>
          getSlotsList();

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange getSlots(
          int index);

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      int getSlotsCount();
    }

    /** Protobuf type {@code variations.Layer.LayerMember} */
    public static final class LayerMember
        extends com.google.protobuf.GeneratedMessageLite<LayerMember, LayerMember.Builder>
        implements
        // @@protoc_insertion_point(message_implements:variations.Layer.LayerMember)
        LayerMemberOrBuilder {
      private LayerMember() {
        slots_ = emptyProtobufList();
      }

      public interface SlotRangeOrBuilder
          extends
          // @@protoc_insertion_point(interface_extends:variations.Layer.LayerMember.SlotRange)
          com.google.protobuf.MessageLiteOrBuilder {

        /**
         *
         *
         * <pre>
         * First slot in the range (inclusive). This range has to be
         * in the [0..`num_slots`) range of the layer.
         * </pre>
         *
         * <code>optional uint32 start = 1;</code>
         *
         * @return Whether the start field is set.
         */
        boolean hasStart();

        /**
         *
         *
         * <pre>
         * First slot in the range (inclusive). This range has to be
         * in the [0..`num_slots`) range of the layer.
         * </pre>
         *
         * <code>optional uint32 start = 1;</code>
         *
         * @return The start.
         */
        int getStart();

        /**
         *
         *
         * <pre>
         * Last slot in the range (inclusive).
         * </pre>
         *
         * <code>optional uint32 end = 2;</code>
         *
         * @return Whether the end field is set.
         */
        boolean hasEnd();

        /**
         *
         *
         * <pre>
         * Last slot in the range (inclusive).
         * </pre>
         *
         * <code>optional uint32 end = 2;</code>
         *
         * @return The end.
         */
        int getEnd();
      }

      /** Protobuf type {@code variations.Layer.LayerMember.SlotRange} */
      public static final class SlotRange
          extends com.google.protobuf.GeneratedMessageLite<SlotRange, SlotRange.Builder>
          implements
          // @@protoc_insertion_point(message_implements:variations.Layer.LayerMember.SlotRange)
          SlotRangeOrBuilder {
        private SlotRange() {}

        private int bitField0_;
        public static final int START_FIELD_NUMBER = 1;
        private int start_;

        /**
         *
         *
         * <pre>
         * First slot in the range (inclusive). This range has to be
         * in the [0..`num_slots`) range of the layer.
         * </pre>
         *
         * <code>optional uint32 start = 1;</code>
         *
         * @return Whether the start field is set.
         */
        @java.lang.Override
        public boolean hasStart() {
          return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         *
         *
         * <pre>
         * First slot in the range (inclusive). This range has to be
         * in the [0..`num_slots`) range of the layer.
         * </pre>
         *
         * <code>optional uint32 start = 1;</code>
         *
         * @return The start.
         */
        @java.lang.Override
        public int getStart() {
          return start_;
        }

        /**
         *
         *
         * <pre>
         * First slot in the range (inclusive). This range has to be
         * in the [0..`num_slots`) range of the layer.
         * </pre>
         *
         * <code>optional uint32 start = 1;</code>
         *
         * @param value The start to set.
         */
        private void setStart(int value) {
          bitField0_ |= 0x00000001;
          start_ = value;
        }

        /**
         *
         *
         * <pre>
         * First slot in the range (inclusive). This range has to be
         * in the [0..`num_slots`) range of the layer.
         * </pre>
         *
         * <code>optional uint32 start = 1;</code>
         */
        private void clearStart() {
          bitField0_ = (bitField0_ & ~0x00000001);
          start_ = 0;
        }

        public static final int END_FIELD_NUMBER = 2;
        private int end_;

        /**
         *
         *
         * <pre>
         * Last slot in the range (inclusive).
         * </pre>
         *
         * <code>optional uint32 end = 2;</code>
         *
         * @return Whether the end field is set.
         */
        @java.lang.Override
        public boolean hasEnd() {
          return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         *
         *
         * <pre>
         * Last slot in the range (inclusive).
         * </pre>
         *
         * <code>optional uint32 end = 2;</code>
         *
         * @return The end.
         */
        @java.lang.Override
        public int getEnd() {
          return end_;
        }

        /**
         *
         *
         * <pre>
         * Last slot in the range (inclusive).
         * </pre>
         *
         * <code>optional uint32 end = 2;</code>
         *
         * @param value The end to set.
         */
        private void setEnd(int value) {
          bitField0_ |= 0x00000002;
          end_ = value;
        }

        /**
         *
         *
         * <pre>
         * Last slot in the range (inclusive).
         * </pre>
         *
         * <code>optional uint32 end = 2;</code>
         */
        private void clearEnd() {
          bitField0_ = (bitField0_ & ~0x00000002);
          end_ = 0;
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(java.io.InputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
          return (Builder) DEFAULT_INSTANCE.createBuilder();
        }

        public static Builder newBuilder(
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
                prototype) {
          return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
        }

        /** Protobuf type {@code variations.Layer.LayerMember.SlotRange} */
        public static final class Builder
            extends com.google.protobuf.GeneratedMessageLite.Builder<
                org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange,
                Builder>
            implements
            // @@protoc_insertion_point(builder_implements:variations.Layer.LayerMember.SlotRange)
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
                .SlotRangeOrBuilder {
          // Construct using
          private Builder() {
            super(DEFAULT_INSTANCE);
          }

          /**
           *
           *
           * <pre>
           * First slot in the range (inclusive). This range has to be
           * in the [0..`num_slots`) range of the layer.
           * </pre>
           *
           * <code>optional uint32 start = 1;</code>
           *
           * @return Whether the start field is set.
           */
          @java.lang.Override
          public boolean hasStart() {
            return instance.hasStart();
          }

          /**
           *
           *
           * <pre>
           * First slot in the range (inclusive). This range has to be
           * in the [0..`num_slots`) range of the layer.
           * </pre>
           *
           * <code>optional uint32 start = 1;</code>
           *
           * @return The start.
           */
          @java.lang.Override
          public int getStart() {
            return instance.getStart();
          }

          /**
           *
           *
           * <pre>
           * First slot in the range (inclusive). This range has to be
           * in the [0..`num_slots`) range of the layer.
           * </pre>
           *
           * <code>optional uint32 start = 1;</code>
           *
           * @param value The start to set.
           * @return This builder for chaining.
           */
          public Builder setStart(int value) {
            copyOnWrite();
            instance.setStart(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * First slot in the range (inclusive). This range has to be
           * in the [0..`num_slots`) range of the layer.
           * </pre>
           *
           * <code>optional uint32 start = 1;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearStart() {
            copyOnWrite();
            instance.clearStart();
            return this;
          }

          /**
           *
           *
           * <pre>
           * Last slot in the range (inclusive).
           * </pre>
           *
           * <code>optional uint32 end = 2;</code>
           *
           * @return Whether the end field is set.
           */
          @java.lang.Override
          public boolean hasEnd() {
            return instance.hasEnd();
          }

          /**
           *
           *
           * <pre>
           * Last slot in the range (inclusive).
           * </pre>
           *
           * <code>optional uint32 end = 2;</code>
           *
           * @return The end.
           */
          @java.lang.Override
          public int getEnd() {
            return instance.getEnd();
          }

          /**
           *
           *
           * <pre>
           * Last slot in the range (inclusive).
           * </pre>
           *
           * <code>optional uint32 end = 2;</code>
           *
           * @param value The end to set.
           * @return This builder for chaining.
           */
          public Builder setEnd(int value) {
            copyOnWrite();
            instance.setEnd(value);
            return this;
          }

          /**
           *
           *
           * <pre>
           * Last slot in the range (inclusive).
           * </pre>
           *
           * <code>optional uint32 end = 2;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearEnd() {
            copyOnWrite();
            instance.clearEnd();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:variations.Layer.LayerMember.SlotRange)
        }

        @java.lang.Override
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(
            com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
            java.lang.Object arg0,
            java.lang.Object arg1) {
          switch (method) {
            case NEW_MUTABLE_INSTANCE:
              {
                return new org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
                    .SlotRange();
              }
            case NEW_BUILDER:
              {
                return new Builder();
              }
            case BUILD_MESSAGE_INFO:
              {
                java.lang.Object[] objects =
                    new java.lang.Object[] {
                      "bitField0_", "start_", "end_",
                    };
                java.lang.String info =
                    "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u100b\u0000\u0002"
                        + "\u100b\u0001";
                return newMessageInfo(DEFAULT_INSTANCE, info, objects);
              }
              // fall through
            case GET_DEFAULT_INSTANCE:
              {
                return DEFAULT_INSTANCE;
              }
            case GET_PARSER:
              {
                com.google.protobuf.Parser<
                        org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
                            .SlotRange>
                    parser = PARSER;
                if (parser == null) {
                  synchronized (
                      org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
                          .class) {
                    parser = PARSER;
                    if (parser == null) {
                      parser =
                          new DefaultInstanceBasedParser<
                              org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
                                  .SlotRange>(DEFAULT_INSTANCE);
                      PARSER = parser;
                    }
                  }
                }
                return parser;
              }
            case GET_MEMOIZED_IS_INITIALIZED:
              {
                return (byte) 1;
              }
            case SET_MEMOIZED_IS_INITIALIZED:
              {
                return null;
              }
          }
          throw new UnsupportedOperationException();
        }

        // @@protoc_insertion_point(class_scope:variations.Layer.LayerMember.SlotRange)
        private static final org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
                .SlotRange
            DEFAULT_INSTANCE;

        static {
          SlotRange defaultInstance = new SlotRange();
          // New instances are implicitly immutable so no need to make
          // immutable.
          DEFAULT_INSTANCE = defaultInstance;
          com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
              SlotRange.class, defaultInstance);
        }

        public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<SlotRange> PARSER;

        public static com.google.protobuf.Parser<SlotRange> parser() {
          return DEFAULT_INSTANCE.getParserForType();
        }
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;

      /**
       *
       *
       * <pre>
       * An id (unique within the Layer) that studies will use to refer to this
       * particular member.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }

      /**
       *
       *
       * <pre>
       * An id (unique within the Layer) that studies will use to refer to this
       * particular member.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      /**
       *
       *
       * <pre>
       * An id (unique within the Layer) that studies will use to refer to this
       * particular member.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @param value The id to set.
       */
      private void setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
      }

      /**
       *
       *
       * <pre>
       * An id (unique within the Layer) that studies will use to refer to this
       * particular member.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       */
      private void clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
      }

      public static final int SLOTS_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.ProtobufList<
              org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange>
          slots_;

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      @java.lang.Override
      public java.util.List<
              org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange>
          getSlotsList() {
        return slots_;
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      public java.util.List<
              ? extends
                  org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
                      .SlotRangeOrBuilder>
          getSlotsOrBuilderList() {
        return slots_;
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      @java.lang.Override
      public int getSlotsCount() {
        return slots_.size();
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      @java.lang.Override
      public org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
          getSlots(int index) {
        return slots_.get(index);
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      public org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRangeOrBuilder
          getSlotsOrBuilder(int index) {
        return slots_.get(index);
      }

      private void ensureSlotsIsMutable() {
        com.google.protobuf.Internal.ProtobufList<
                org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange>
            tmp = slots_;
        if (!tmp.isModifiable()) {
          slots_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
        }
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      private void setSlots(
          int index,
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange value) {
        value.getClass();
        ensureSlotsIsMutable();
        slots_.set(index, value);
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      private void addSlots(
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange value) {
        value.getClass();
        ensureSlotsIsMutable();
        slots_.add(value);
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      private void addSlots(
          int index,
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange value) {
        value.getClass();
        ensureSlotsIsMutable();
        slots_.add(index, value);
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      private void addAllSlots(
          java.lang.Iterable<
                  ? extends
                      org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
                          .SlotRange>
              values) {
        ensureSlotsIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(values, slots_);
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      private void clearSlots() {
        slots_ = emptyProtobufList();
      }

      /**
       *
       *
       * <pre>
       * Ranges of slots that belong to this member. These slot ranges must not
       * overlap with the slot ranges of other members within the layer, so
       * that at most one member within the layer will be active. The ranges must
       * be listed in increasing order.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
       */
      private void removeSlots(int index) {
        ensureSlotsIsMutable();
        slots_.remove(index);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }

      public static Builder newBuilder(
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMember prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /** Protobuf type {@code variations.Layer.LayerMember} */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageLite.Builder<
              org.chromium.components.variations.LayerOuterClass.Layer.LayerMember, Builder>
          implements
          // @@protoc_insertion_point(builder_implements:variations.Layer.LayerMember)
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMemberOrBuilder {
        // Construct using
        private Builder() {
          super(DEFAULT_INSTANCE);
        }

        /**
         *
         *
         * <pre>
         * An id (unique within the Layer) that studies will use to refer to this
         * particular member.
         * </pre>
         *
         * <code>optional uint32 id = 1;</code>
         *
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return instance.hasId();
        }

        /**
         *
         *
         * <pre>
         * An id (unique within the Layer) that studies will use to refer to this
         * particular member.
         * </pre>
         *
         * <code>optional uint32 id = 1;</code>
         *
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return instance.getId();
        }

        /**
         *
         *
         * <pre>
         * An id (unique within the Layer) that studies will use to refer to this
         * particular member.
         * </pre>
         *
         * <code>optional uint32 id = 1;</code>
         *
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {
          copyOnWrite();
          instance.setId(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * An id (unique within the Layer) that studies will use to refer to this
         * particular member.
         * </pre>
         *
         * <code>optional uint32 id = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearId() {
          copyOnWrite();
          instance.clearId();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        @java.lang.Override
        public java.util.List<
                org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange>
            getSlotsList() {
          return java.util.Collections.unmodifiableList(instance.getSlotsList());
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        @java.lang.Override
        public int getSlotsCount() {
          return instance.getSlotsCount();
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        @java.lang.Override
        public org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
            getSlots(int index) {
          return instance.getSlots(index);
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder setSlots(
            int index,
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange value) {
          copyOnWrite();
          instance.setSlots(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder setSlots(
            int index,
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange.Builder
                builderForValue) {
          copyOnWrite();
          instance.setSlots(index, builderForValue.build());
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder addSlots(
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange value) {
          copyOnWrite();
          instance.addSlots(value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder addSlots(
            int index,
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange value) {
          copyOnWrite();
          instance.addSlots(index, value);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder addSlots(
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange.Builder
                builderForValue) {
          copyOnWrite();
          instance.addSlots(builderForValue.build());
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder addSlots(
            int index,
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange.Builder
                builderForValue) {
          copyOnWrite();
          instance.addSlots(index, builderForValue.build());
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder addAllSlots(
            java.lang.Iterable<
                    ? extends
                        org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
                            .SlotRange>
                values) {
          copyOnWrite();
          instance.addAllSlots(values);
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder clearSlots() {
          copyOnWrite();
          instance.clearSlots();
          return this;
        }

        /**
         *
         *
         * <pre>
         * Ranges of slots that belong to this member. These slot ranges must not
         * overlap with the slot ranges of other members within the layer, so
         * that at most one member within the layer will be active. The ranges must
         * be listed in increasing order.
         * </pre>
         *
         * <code>repeated .variations.Layer.LayerMember.SlotRange slots = 2;</code>
         */
        public Builder removeSlots(int index) {
          copyOnWrite();
          instance.removeSlots(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:variations.Layer.LayerMember)
      }

      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0,
          java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE:
            {
              return new org.chromium.components.variations.LayerOuterClass.Layer.LayerMember();
            }
          case NEW_BUILDER:
            {
              return new Builder();
            }
          case BUILD_MESSAGE_INFO:
            {
              java.lang.Object[] objects =
                  new java.lang.Object[] {
                    "bitField0_",
                    "id_",
                    "slots_",
                    org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.SlotRange
                        .class,
                  };
              java.lang.String info =
                  "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u100b\u0000\u0002"
                      + "\u001b";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
            }
            // fall through
          case GET_DEFAULT_INSTANCE:
            {
              return DEFAULT_INSTANCE;
            }
          case GET_PARSER:
            {
              com.google.protobuf.Parser<
                      org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>
                  parser = PARSER;
              if (parser == null) {
                synchronized (
                    org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.class) {
                  parser = PARSER;
                  if (parser == null) {
                    parser =
                        new DefaultInstanceBasedParser<
                            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>(
                            DEFAULT_INSTANCE);
                    PARSER = parser;
                  }
                }
              }
              return parser;
            }
          case GET_MEMOIZED_IS_INITIALIZED:
            {
              return (byte) 1;
            }
          case SET_MEMOIZED_IS_INITIALIZED:
            {
              return null;
            }
        }
        throw new UnsupportedOperationException();
      }

      // @@protoc_insertion_point(class_scope:variations.Layer.LayerMember)
      private static final org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
          DEFAULT_INSTANCE;

      static {
        LayerMember defaultInstance = new LayerMember();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
            LayerMember.class, defaultInstance);
      }

      public static org.chromium.components.variations.LayerOuterClass.Layer.LayerMember
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<LayerMember> PARSER;

      public static com.google.protobuf.Parser<LayerMember> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;

    /**
     *
     *
     * <pre>
     * ID for the layer, must be unique across all layers. Studies will specify
     * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     *
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * ID for the layer, must be unique across all layers. Studies will specify
     * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     *
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    /**
     *
     *
     * <pre>
     * ID for the layer, must be unique across all layers. Studies will specify
     * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     *
     * @param value The id to set.
     */
    private void setId(int value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }

    /**
     *
     *
     * <pre>
     * ID for the layer, must be unique across all layers. Studies will specify
     * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0;
    }

    public static final int NUM_SLOTS_FIELD_NUMBER = 2;
    private int numSlots_;

    /**
     *
     *
     * <pre>
     * Total number of slots within the layer. There are constraints on the number
     * of slots when a low entropy source is used (100, initially) to alleviate
     * skew in the bucket populations.
     * </pre>
     *
     * <code>optional uint32 num_slots = 2;</code>
     *
     * @return Whether the numSlots field is set.
     */
    @java.lang.Override
    public boolean hasNumSlots() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * Total number of slots within the layer. There are constraints on the number
     * of slots when a low entropy source is used (100, initially) to alleviate
     * skew in the bucket populations.
     * </pre>
     *
     * <code>optional uint32 num_slots = 2;</code>
     *
     * @return The numSlots.
     */
    @java.lang.Override
    public int getNumSlots() {
      return numSlots_;
    }

    /**
     *
     *
     * <pre>
     * Total number of slots within the layer. There are constraints on the number
     * of slots when a low entropy source is used (100, initially) to alleviate
     * skew in the bucket populations.
     * </pre>
     *
     * <code>optional uint32 num_slots = 2;</code>
     *
     * @param value The numSlots to set.
     */
    private void setNumSlots(int value) {
      bitField0_ |= 0x00000002;
      numSlots_ = value;
    }

    /**
     *
     *
     * <pre>
     * Total number of slots within the layer. There are constraints on the number
     * of slots when a low entropy source is used (100, initially) to alleviate
     * skew in the bucket populations.
     * </pre>
     *
     * <code>optional uint32 num_slots = 2;</code>
     */
    private void clearNumSlots() {
      bitField0_ = (bitField0_ & ~0x00000002);
      numSlots_ = 0;
    }

    public static final int MEMBERS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<
            org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>
        members_;

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>
        getMembersList() {
      return members_;
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    public java.util.List<
            ? extends org.chromium.components.variations.LayerOuterClass.Layer.LayerMemberOrBuilder>
        getMembersOrBuilderList() {
      return members_;
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    @java.lang.Override
    public int getMembersCount() {
      return members_.size();
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.variations.LayerOuterClass.Layer.LayerMember getMembers(
        int index) {
      return members_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    public org.chromium.components.variations.LayerOuterClass.Layer.LayerMemberOrBuilder
        getMembersOrBuilder(int index) {
      return members_.get(index);
    }

    private void ensureMembersIsMutable() {
      com.google.protobuf.Internal.ProtobufList<
              org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>
          tmp = members_;
      if (!tmp.isModifiable()) {
        members_ = com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    private void setMembers(
        int index, org.chromium.components.variations.LayerOuterClass.Layer.LayerMember value) {
      value.getClass();
      ensureMembersIsMutable();
      members_.set(index, value);
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    private void addMembers(
        org.chromium.components.variations.LayerOuterClass.Layer.LayerMember value) {
      value.getClass();
      ensureMembersIsMutable();
      members_.add(value);
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    private void addMembers(
        int index, org.chromium.components.variations.LayerOuterClass.Layer.LayerMember value) {
      value.getClass();
      ensureMembersIsMutable();
      members_.add(index, value);
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    private void addAllMembers(
        java.lang.Iterable<
                ? extends org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>
            values) {
      ensureMembersIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(values, members_);
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    private void clearMembers() {
      members_ = emptyProtobufList();
    }

    /**
     *
     *
     * <pre>
     * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
     * Not all slots have to be used, and normally won't in order to reserve space
     * within the layer. Each study that participates in a layer is associated
     * with a single layer member.
     * </pre>
     *
     * <code>repeated .variations.Layer.LayerMember members = 3;</code>
     */
    private void removeMembers(int index) {
      ensureMembersIsMutable();
      members_.remove(index);
    }

    public static final int SALT_FIELD_NUMBER = 4;
    private int salt_;

    /**
     *
     *
     * <pre>
     * A salt which is used as an input to a hash function together with the
     * output of the chosen entropy source, to choose an active slot within the
     * layer. If salt is unset or 0, the layer id will be used instead.
     * </pre>
     *
     * <code>optional uint32 salt = 4;</code>
     *
     * @return Whether the salt field is set.
     */
    @java.lang.Override
    public boolean hasSalt() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     *
     *
     * <pre>
     * A salt which is used as an input to a hash function together with the
     * output of the chosen entropy source, to choose an active slot within the
     * layer. If salt is unset or 0, the layer id will be used instead.
     * </pre>
     *
     * <code>optional uint32 salt = 4;</code>
     *
     * @return The salt.
     */
    @java.lang.Override
    public int getSalt() {
      return salt_;
    }

    /**
     *
     *
     * <pre>
     * A salt which is used as an input to a hash function together with the
     * output of the chosen entropy source, to choose an active slot within the
     * layer. If salt is unset or 0, the layer id will be used instead.
     * </pre>
     *
     * <code>optional uint32 salt = 4;</code>
     *
     * @param value The salt to set.
     */
    private void setSalt(int value) {
      bitField0_ |= 0x00000004;
      salt_ = value;
    }

    /**
     *
     *
     * <pre>
     * A salt which is used as an input to a hash function together with the
     * output of the chosen entropy source, to choose an active slot within the
     * layer. If salt is unset or 0, the layer id will be used instead.
     * </pre>
     *
     * <code>optional uint32 salt = 4;</code>
     */
    private void clearSalt() {
      bitField0_ = (bitField0_ & ~0x00000004);
      salt_ = 0;
    }

    public static final int ENTROPY_MODE_FIELD_NUMBER = 5;
    private int entropyMode_;

    /**
     *
     *
     * <pre>
     * Which of the above entropy modes should be used to select a slot.
     * </pre>
     *
     * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
     *
     * @return Whether the entropyMode field is set.
     */
    @java.lang.Override
    public boolean hasEntropyMode() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     *
     *
     * <pre>
     * Which of the above entropy modes should be used to select a slot.
     * </pre>
     *
     * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
     *
     * @return The entropyMode.
     */
    @java.lang.Override
    public org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode getEntropyMode() {
      org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode result =
          org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode.forNumber(
              entropyMode_);
      return result == null
          ? org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode.DEFAULT
          : result;
    }

    /**
     *
     *
     * <pre>
     * Which of the above entropy modes should be used to select a slot.
     * </pre>
     *
     * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
     *
     * @param value The entropyMode to set.
     */
    private void setEntropyMode(
        org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode value) {
      entropyMode_ = value.getNumber();
      bitField0_ |= 0x00000008;
    }

    /**
     *
     *
     * <pre>
     * Which of the above entropy modes should be used to select a slot.
     * </pre>
     *
     * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
     */
    private void clearEntropyMode() {
      bitField0_ = (bitField0_ & ~0x00000008);
      entropyMode_ = 0;
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(
        org.chromium.components.variations.LayerOuterClass.Layer prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * Next tag: 6
     * </pre>
     *
     * Protobuf type {@code variations.Layer}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.variations.LayerOuterClass.Layer, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:variations.Layer)
        org.chromium.components.variations.LayerOuterClass.LayerOrBuilder {
      // Construct using org.chromium.components.variations.LayerOuterClass.Layer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * ID for the layer, must be unique across all layers. Studies will specify
       * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }

      /**
       *
       *
       * <pre>
       * ID for the layer, must be unique across all layers. Studies will specify
       * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return instance.getId();
      }

      /**
       *
       *
       * <pre>
       * ID for the layer, must be unique across all layers. Studies will specify
       * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * ID for the layer, must be unique across all layers. Studies will specify
       * a &lt;layer_id, layer_member_id&gt; pair to become part of a layer.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Total number of slots within the layer. There are constraints on the number
       * of slots when a low entropy source is used (100, initially) to alleviate
       * skew in the bucket populations.
       * </pre>
       *
       * <code>optional uint32 num_slots = 2;</code>
       *
       * @return Whether the numSlots field is set.
       */
      @java.lang.Override
      public boolean hasNumSlots() {
        return instance.hasNumSlots();
      }

      /**
       *
       *
       * <pre>
       * Total number of slots within the layer. There are constraints on the number
       * of slots when a low entropy source is used (100, initially) to alleviate
       * skew in the bucket populations.
       * </pre>
       *
       * <code>optional uint32 num_slots = 2;</code>
       *
       * @return The numSlots.
       */
      @java.lang.Override
      public int getNumSlots() {
        return instance.getNumSlots();
      }

      /**
       *
       *
       * <pre>
       * Total number of slots within the layer. There are constraints on the number
       * of slots when a low entropy source is used (100, initially) to alleviate
       * skew in the bucket populations.
       * </pre>
       *
       * <code>optional uint32 num_slots = 2;</code>
       *
       * @param value The numSlots to set.
       * @return This builder for chaining.
       */
      public Builder setNumSlots(int value) {
        copyOnWrite();
        instance.setNumSlots(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Total number of slots within the layer. There are constraints on the number
       * of slots when a low entropy source is used (100, initially) to alleviate
       * skew in the bucket populations.
       * </pre>
       *
       * <code>optional uint32 num_slots = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearNumSlots() {
        copyOnWrite();
        instance.clearNumSlots();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      @java.lang.Override
      public java.util.List<org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>
          getMembersList() {
        return java.util.Collections.unmodifiableList(instance.getMembersList());
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      @java.lang.Override
      public int getMembersCount() {
        return instance.getMembersCount();
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      @java.lang.Override
      public org.chromium.components.variations.LayerOuterClass.Layer.LayerMember getMembers(
          int index) {
        return instance.getMembers(index);
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder setMembers(
          int index, org.chromium.components.variations.LayerOuterClass.Layer.LayerMember value) {
        copyOnWrite();
        instance.setMembers(index, value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder setMembers(
          int index,
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.Builder
              builderForValue) {
        copyOnWrite();
        instance.setMembers(index, builderForValue.build());
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder addMembers(
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMember value) {
        copyOnWrite();
        instance.addMembers(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder addMembers(
          int index, org.chromium.components.variations.LayerOuterClass.Layer.LayerMember value) {
        copyOnWrite();
        instance.addMembers(index, value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder addMembers(
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.Builder
              builderForValue) {
        copyOnWrite();
        instance.addMembers(builderForValue.build());
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder addMembers(
          int index,
          org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.Builder
              builderForValue) {
        copyOnWrite();
        instance.addMembers(index, builderForValue.build());
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<
                  ? extends org.chromium.components.variations.LayerOuterClass.Layer.LayerMember>
              values) {
        copyOnWrite();
        instance.addAllMembers(values);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder clearMembers() {
        copyOnWrite();
        instance.clearMembers();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Layer members, which occupy disjoint subsets of the [0, `num_slots`) range.
       * Not all slots have to be used, and normally won't in order to reserve space
       * within the layer. Each study that participates in a layer is associated
       * with a single layer member.
       * </pre>
       *
       * <code>repeated .variations.Layer.LayerMember members = 3;</code>
       */
      public Builder removeMembers(int index) {
        copyOnWrite();
        instance.removeMembers(index);
        return this;
      }

      /**
       *
       *
       * <pre>
       * A salt which is used as an input to a hash function together with the
       * output of the chosen entropy source, to choose an active slot within the
       * layer. If salt is unset or 0, the layer id will be used instead.
       * </pre>
       *
       * <code>optional uint32 salt = 4;</code>
       *
       * @return Whether the salt field is set.
       */
      @java.lang.Override
      public boolean hasSalt() {
        return instance.hasSalt();
      }

      /**
       *
       *
       * <pre>
       * A salt which is used as an input to a hash function together with the
       * output of the chosen entropy source, to choose an active slot within the
       * layer. If salt is unset or 0, the layer id will be used instead.
       * </pre>
       *
       * <code>optional uint32 salt = 4;</code>
       *
       * @return The salt.
       */
      @java.lang.Override
      public int getSalt() {
        return instance.getSalt();
      }

      /**
       *
       *
       * <pre>
       * A salt which is used as an input to a hash function together with the
       * output of the chosen entropy source, to choose an active slot within the
       * layer. If salt is unset or 0, the layer id will be used instead.
       * </pre>
       *
       * <code>optional uint32 salt = 4;</code>
       *
       * @param value The salt to set.
       * @return This builder for chaining.
       */
      public Builder setSalt(int value) {
        copyOnWrite();
        instance.setSalt(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * A salt which is used as an input to a hash function together with the
       * output of the chosen entropy source, to choose an active slot within the
       * layer. If salt is unset or 0, the layer id will be used instead.
       * </pre>
       *
       * <code>optional uint32 salt = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSalt() {
        copyOnWrite();
        instance.clearSalt();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Which of the above entropy modes should be used to select a slot.
       * </pre>
       *
       * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
       *
       * @return Whether the entropyMode field is set.
       */
      @java.lang.Override
      public boolean hasEntropyMode() {
        return instance.hasEntropyMode();
      }

      /**
       *
       *
       * <pre>
       * Which of the above entropy modes should be used to select a slot.
       * </pre>
       *
       * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
       *
       * @return The entropyMode.
       */
      @java.lang.Override
      public org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode getEntropyMode() {
        return instance.getEntropyMode();
      }

      /**
       *
       *
       * <pre>
       * Which of the above entropy modes should be used to select a slot.
       * </pre>
       *
       * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
       *
       * @param value The enum numeric value on the wire for entropyMode to set.
       * @return This builder for chaining.
       */
      public Builder setEntropyMode(
          org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode value) {
        copyOnWrite();
        instance.setEntropyMode(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Which of the above entropy modes should be used to select a slot.
       * </pre>
       *
       * <code>optional .variations.Layer.EntropyMode entropy_mode = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearEntropyMode() {
        copyOnWrite();
        instance.clearEntropyMode();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:variations.Layer)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new org.chromium.components.variations.LayerOuterClass.Layer();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "bitField0_",
                  "id_",
                  "numSlots_",
                  "members_",
                  org.chromium.components.variations.LayerOuterClass.Layer.LayerMember.class,
                  "salt_",
                  "entropyMode_",
                  org.chromium.components.variations.LayerOuterClass.Layer.EntropyMode
                      .internalGetVerifier(),
                };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0001\u0000\u0001\u100b\u0000\u0002"
                    + "\u100b\u0001\u0003\u001b\u0004\u100b\u0002\u0005\u100c\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<org.chromium.components.variations.LayerOuterClass.Layer>
                parser = PARSER;
            if (parser == null) {
              synchronized (org.chromium.components.variations.LayerOuterClass.Layer.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<
                          org.chromium.components.variations.LayerOuterClass.Layer>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:variations.Layer)
    private static final org.chromium.components.variations.LayerOuterClass.Layer DEFAULT_INSTANCE;

    static {
      Layer defaultInstance = new Layer();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Layer.class, defaultInstance);
    }

    public static org.chromium.components.variations.LayerOuterClass.Layer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Layer> PARSER;

    public static com.google.protobuf.Parser<Layer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LayerMemberReferenceOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:variations.LayerMemberReference)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     *
     *
     * <pre>
     * Reference to the Layer with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     *
     * @return Whether the layerId field is set.
     */
    boolean hasLayerId();

    /**
     *
     *
     * <pre>
     * Reference to the Layer with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     *
     * @return The layerId.
     */
    int getLayerId();

    /**
     *
     *
     * <pre>
     * Reference to the member within the above layer, with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_member_id = 2;</code>
     *
     * @return Whether the layerMemberId field is set.
     */
    boolean hasLayerMemberId();

    /**
     *
     *
     * <pre>
     * Reference to the member within the above layer, with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_member_id = 2;</code>
     *
     * @return The layerMemberId.
     */
    int getLayerMemberId();
  }

  /**
   *
   *
   * <pre>
   * A Study can optionally specify a LayerMemberReference which will configure it
   * as a member of the layer with the given ID.
   * </pre>
   *
   * Protobuf type {@code variations.LayerMemberReference}
   */
  public static final class LayerMemberReference
      extends com.google.protobuf.GeneratedMessageLite<
          LayerMemberReference, LayerMemberReference.Builder>
      implements
      // @@protoc_insertion_point(message_implements:variations.LayerMemberReference)
      LayerMemberReferenceOrBuilder {
    private LayerMemberReference() {}

    private int bitField0_;
    public static final int LAYER_ID_FIELD_NUMBER = 1;
    private int layerId_;

    /**
     *
     *
     * <pre>
     * Reference to the Layer with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     *
     * @return Whether the layerId field is set.
     */
    @java.lang.Override
    public boolean hasLayerId() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * Reference to the Layer with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     *
     * @return The layerId.
     */
    @java.lang.Override
    public int getLayerId() {
      return layerId_;
    }

    /**
     *
     *
     * <pre>
     * Reference to the Layer with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     *
     * @param value The layerId to set.
     */
    private void setLayerId(int value) {
      bitField0_ |= 0x00000001;
      layerId_ = value;
    }

    /**
     *
     *
     * <pre>
     * Reference to the Layer with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     */
    private void clearLayerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      layerId_ = 0;
    }

    public static final int LAYER_MEMBER_ID_FIELD_NUMBER = 2;
    private int layerMemberId_;

    /**
     *
     *
     * <pre>
     * Reference to the member within the above layer, with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_member_id = 2;</code>
     *
     * @return Whether the layerMemberId field is set.
     */
    @java.lang.Override
    public boolean hasLayerMemberId() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * Reference to the member within the above layer, with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_member_id = 2;</code>
     *
     * @return The layerMemberId.
     */
    @java.lang.Override
    public int getLayerMemberId() {
      return layerMemberId_;
    }

    /**
     *
     *
     * <pre>
     * Reference to the member within the above layer, with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_member_id = 2;</code>
     *
     * @param value The layerMemberId to set.
     */
    private void setLayerMemberId(int value) {
      bitField0_ |= 0x00000002;
      layerMemberId_ = value;
    }

    /**
     *
     *
     * <pre>
     * Reference to the member within the above layer, with this specific ID.
     * </pre>
     *
     * <code>optional uint32 layer_member_id = 2;</code>
     */
    private void clearLayerMemberId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      layerMemberId_ = 0;
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, data);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(DEFAULT_INSTANCE, input);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }

    public static Builder newBuilder(
        org.chromium.components.variations.LayerOuterClass.LayerMemberReference prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     *
     *
     * <pre>
     * A Study can optionally specify a LayerMemberReference which will configure it
     * as a member of the layer with the given ID.
     * </pre>
     *
     * Protobuf type {@code variations.LayerMemberReference}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.components.variations.LayerOuterClass.LayerMemberReference, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:variations.LayerMemberReference)
        org.chromium.components.variations.LayerOuterClass.LayerMemberReferenceOrBuilder {
      // Construct using
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      /**
       *
       *
       * <pre>
       * Reference to the Layer with this specific ID.
       * </pre>
       *
       * <code>optional uint32 layer_id = 1;</code>
       *
       * @return Whether the layerId field is set.
       */
      @java.lang.Override
      public boolean hasLayerId() {
        return instance.hasLayerId();
      }

      /**
       *
       *
       * <pre>
       * Reference to the Layer with this specific ID.
       * </pre>
       *
       * <code>optional uint32 layer_id = 1;</code>
       *
       * @return The layerId.
       */
      @java.lang.Override
      public int getLayerId() {
        return instance.getLayerId();
      }

      /**
       *
       *
       * <pre>
       * Reference to the Layer with this specific ID.
       * </pre>
       *
       * <code>optional uint32 layer_id = 1;</code>
       *
       * @param value The layerId to set.
       * @return This builder for chaining.
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Reference to the Layer with this specific ID.
       * </pre>
       *
       * <code>optional uint32 layer_id = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Reference to the member within the above layer, with this specific ID.
       * </pre>
       *
       * <code>optional uint32 layer_member_id = 2;</code>
       *
       * @return Whether the layerMemberId field is set.
       */
      @java.lang.Override
      public boolean hasLayerMemberId() {
        return instance.hasLayerMemberId();
      }

      /**
       *
       *
       * <pre>
       * Reference to the member within the above layer, with this specific ID.
       * </pre>
       *
       * <code>optional uint32 layer_member_id = 2;</code>
       *
       * @return The layerMemberId.
       */
      @java.lang.Override
      public int getLayerMemberId() {
        return instance.getLayerMemberId();
      }

      /**
       *
       *
       * <pre>
       * Reference to the member within the above layer, with this specific ID.
       * </pre>
       *
       * <code>optional uint32 layer_member_id = 2;</code>
       *
       * @param value The layerMemberId to set.
       * @return This builder for chaining.
       */
      public Builder setLayerMemberId(int value) {
        copyOnWrite();
        instance.setLayerMemberId(value);
        return this;
      }

      /**
       *
       *
       * <pre>
       * Reference to the member within the above layer, with this specific ID.
       * </pre>
       *
       * <code>optional uint32 layer_member_id = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLayerMemberId() {
        copyOnWrite();
        instance.clearLayerMemberId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:variations.LayerMemberReference)
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0,
        java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE:
          {
            return new org.chromium.components.variations.LayerOuterClass.LayerMemberReference();
          }
        case NEW_BUILDER:
          {
            return new Builder();
          }
        case BUILD_MESSAGE_INFO:
          {
            java.lang.Object[] objects =
                new java.lang.Object[] {
                  "bitField0_", "layerId_", "layerMemberId_",
                };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u100b\u0000\u0002"
                    + "\u100b\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
        case GET_DEFAULT_INSTANCE:
          {
            return DEFAULT_INSTANCE;
          }
        case GET_PARSER:
          {
            com.google.protobuf.Parser<
                    org.chromium.components.variations.LayerOuterClass.LayerMemberReference>
                parser = PARSER;
            if (parser == null) {
              synchronized (
                  org.chromium.components.variations.LayerOuterClass.LayerMemberReference.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<
                          org.chromium.components.variations.LayerOuterClass.LayerMemberReference>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
          }
        case GET_MEMOIZED_IS_INITIALIZED:
          {
            return (byte) 1;
          }
        case SET_MEMOIZED_IS_INITIALIZED:
          {
            return null;
          }
      }
      throw new UnsupportedOperationException();
    }

    // @@protoc_insertion_point(class_scope:variations.LayerMemberReference)
    private static final org.chromium.components.variations.LayerOuterClass.LayerMemberReference
        DEFAULT_INSTANCE;

    static {
      LayerMemberReference defaultInstance = new LayerMemberReference();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          LayerMemberReference.class, defaultInstance);
    }

    public static org.chromium.components.variations.LayerOuterClass.LayerMemberReference
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LayerMemberReference> PARSER;

    public static com.google.protobuf.Parser<LayerMemberReference> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
