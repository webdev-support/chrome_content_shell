//
// This file was generated by third_party/jni_zero/jni_generator.py
//
package org.chromium.base;

import org.jni_zero.CheckDiscard;
import org.jni_zero.GEN_JNI;
import org.jni_zero.JniStaticTestMocker;
import org.jni_zero.NativeLibraryLoadedStatus;

@CheckDiscard("crbug.com/993421")
class FeatureMapJni implements FeatureMap.Natives {
  private static FeatureMap.Natives testInstance;

  public static final JniStaticTestMocker<FeatureMap.Natives> TEST_HOOKS =
      new JniStaticTestMocker<FeatureMap.Natives>() {
        @Override
        public void setInstanceForTesting(FeatureMap.Natives instance) {
          if (!GEN_JNI.TESTING_ENABLED) {
            throw new RuntimeException("Tried to set a JNI mock when mocks aren't enabled!");
          }
          testInstance = instance;
        }
      };

  @Override
  public String getFieldTrialParamByFeature(long featureMap, String featureName, String paramName) {
    return (String)
        GEN_JNI.org_chromium_base_FeatureMap_getFieldTrialParamByFeature(
            featureMap, featureName, paramName);
  }

  @Override
  public boolean getFieldTrialParamByFeatureAsBoolean(
      long featureMap, String featureName, String paramName, boolean defaultValue) {
    return (boolean)
        GEN_JNI.org_chromium_base_FeatureMap_getFieldTrialParamByFeatureAsBoolean(
            featureMap, featureName, paramName, defaultValue);
  }

  @Override
  public double getFieldTrialParamByFeatureAsDouble(
      long featureMap, String featureName, String paramName, double defaultValue) {
    return (double)
        GEN_JNI.org_chromium_base_FeatureMap_getFieldTrialParamByFeatureAsDouble(
            featureMap, featureName, paramName, defaultValue);
  }

  @Override
  public int getFieldTrialParamByFeatureAsInt(
      long featureMap, String featureName, String paramName, int defaultValue) {
    return (int)
        GEN_JNI.org_chromium_base_FeatureMap_getFieldTrialParamByFeatureAsInt(
            featureMap, featureName, paramName, defaultValue);
  }

  @Override
  public String[] getFlattedFieldTrialParamsForFeature(long featureMap, String featureName) {
    return (String[])
        GEN_JNI.org_chromium_base_FeatureMap_getFlattedFieldTrialParamsForFeature(
            featureMap, featureName);
  }

  @Override
  public boolean isEnabled(long featureMap, String featureName) {
    return (boolean) GEN_JNI.org_chromium_base_FeatureMap_isEnabled(featureMap, featureName);
  }

  public static FeatureMap.Natives get() {
    if (GEN_JNI.TESTING_ENABLED) {
      if (testInstance != null) {
        return testInstance;
      }
      if (GEN_JNI.REQUIRE_MOCK) {
        throw new UnsupportedOperationException(
            "No mock found for the native implementation of FeatureMap.Natives. "
                + "The current configuration requires implementations be mocked.");
      }
    }
    NativeLibraryLoadedStatus.checkLoaded();
    return new FeatureMapJni();
  }
}
